package server

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"roofix/pkg/pricing"
	"roofix/pkg/util/uid"
	"roofix/server/generated"
	"roofix/server/model"
)

// ProductID is the resolver for the ProductId field.
func (r *priceResolver) ProductID(ctx context.Context, obj *pricing.ProductPrice) (int, error) {
	if obj == nil {
		return 0, nil
	}

	return int(obj.ProductID), nil
}

// GetPricing is the resolver for the getPricing field.
func (r *queryResolver) GetPricing(ctx context.Context) (*model.ProductPricing, error) {
	var items, err = pricing.ForAll(ctx)
	if err != nil {
		return nil, err
	}

	return &model.ProductPricing{
		ID:       uid.ULID(),
		Items:    items,
		Products: pricing.AllProducts(),
	}, err
}

// Price returns generated.PriceResolver implementation.
func (r *Resolver) Price() generated.PriceResolver { return &priceResolver{r} }

type priceResolver struct{ *Resolver }
