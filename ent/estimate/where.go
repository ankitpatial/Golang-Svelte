// Code generated by ent, DO NOT EDIT.

package estimate

import (
	"roofix/ent/predicate"
	"roofix/pkg/enum"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldUpdatedAt, v))
}

// RegionID applies equality check predicate on the "region_id" field. It's identical to RegionIDEQ.
func RegionID(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldRegionID, v))
}

// CurrentMaterial applies equality check predicate on the "current_material" field. It's identical to CurrentMaterialEQ.
func CurrentMaterial(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCurrentMaterial, v))
}

// NewRoofingMaterial applies equality check predicate on the "new_roofing_material" field. It's identical to NewRoofingMaterialEQ.
func NewRoofingMaterial(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldNewRoofingMaterial, v))
}

// LowSlope applies equality check predicate on the "lowSlope" field. It's identical to LowSlopeEQ.
func LowSlope(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLowSlope, v))
}

// CurrentMaterialLowSlope applies equality check predicate on the "current_material_low_slope" field. It's identical to CurrentMaterialLowSlopeEQ.
func CurrentMaterialLowSlope(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCurrentMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlope applies equality check predicate on the "new_roofing_material_low_slope" field. It's identical to NewRoofingMaterialLowSlopeEQ.
func NewRoofingMaterialLowSlope(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldNewRoofingMaterialLowSlope, v))
}

// Redeck applies equality check predicate on the "redeck" field. It's identical to RedeckEQ.
func Redeck(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldRedeck, v))
}

// Layers applies equality check predicate on the "layers" field. It's identical to LayersEQ.
func Layers(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLayers, v))
}

// Layer2Material applies equality check predicate on the "layer2_material" field. It's identical to Layer2MaterialEQ.
func Layer2Material(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLayer2Material, v))
}

// Layer3Material applies equality check predicate on the "layer3_material" field. It's identical to Layer3MaterialEQ.
func Layer3Material(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLayer3Material, v))
}

// PartialPercentage applies equality check predicate on the "partial_percentage" field. It's identical to PartialPercentageEQ.
func PartialPercentage(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPartialPercentage, v))
}

// MaterialMappingNote applies equality check predicate on the "material_mapping_note" field. It's identical to MaterialMappingNoteEQ.
func MaterialMappingNote(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldMaterialMappingNote, v))
}

// ExtraCharges applies equality check predicate on the "extra_charges" field. It's identical to ExtraChargesEQ.
func ExtraCharges(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldExtraCharges, v))
}

// ExtraChargeNote applies equality check predicate on the "extra_charge_note" field. It's identical to ExtraChargeNoteEQ.
func ExtraChargeNote(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldExtraChargeNote, v))
}

// Estimator applies equality check predicate on the "estimator" field. It's identical to EstimatorEQ.
func Estimator(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldEstimator, v))
}

// EstimatorOrderID applies equality check predicate on the "estimator_order_id" field. It's identical to EstimatorOrderIDEQ.
func EstimatorOrderID(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldEstimatorOrderID, v))
}

// EstimatorReportID applies equality check predicate on the "estimator_report_id" field. It's identical to EstimatorReportIDEQ.
func EstimatorReportID(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldEstimatorReportID, v))
}

// TotalSquares applies equality check predicate on the "total_squares" field. It's identical to TotalSquaresEQ.
func TotalSquares(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldTotalSquares, v))
}

// PrimaryPitch applies equality check predicate on the "primary_pitch" field. It's identical to PrimaryPitchEQ.
func PrimaryPitch(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPrimaryPitch, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPrice, v))
}

// PriceSummary applies equality check predicate on the "price_summary" field. It's identical to PriceSummaryEQ.
func PriceSummary(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPriceSummary, v))
}

// Override applies equality check predicate on the "override" field. It's identical to OverrideEQ.
func Override(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverride, v))
}

// OverrideTotalSquares applies equality check predicate on the "override_total_squares" field. It's identical to OverrideTotalSquaresEQ.
func OverrideTotalSquares(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverrideTotalSquares, v))
}

// OverridePrimaryPitch applies equality check predicate on the "override_primary_pitch" field. It's identical to OverridePrimaryPitchEQ.
func OverridePrimaryPitch(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverridePrimaryPitch, v))
}

// OverridePrice applies equality check predicate on the "override_price" field. It's identical to OverridePriceEQ.
func OverridePrice(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverridePrice, v))
}

// OverridePriceSummary applies equality check predicate on the "override_price_summary" field. It's identical to OverridePriceSummaryEQ.
func OverridePriceSummary(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverridePriceSummary, v))
}

// CompanyRefID applies equality check predicate on the "company_ref_id" field. It's identical to CompanyRefIDEQ.
func CompanyRefID(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCompanyRefID, v))
}

// CompanyRefName applies equality check predicate on the "company_ref_name" field. It's identical to CompanyRefNameEQ.
func CompanyRefName(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCompanyRefName, v))
}

// FailureReason applies equality check predicate on the "failure_reason" field. It's identical to FailureReasonEQ.
func FailureReason(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldFailureReason, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldUpdatedAt, v))
}

// RegionIDEQ applies the EQ predicate on the "region_id" field.
func RegionIDEQ(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldRegionID, v))
}

// RegionIDNEQ applies the NEQ predicate on the "region_id" field.
func RegionIDNEQ(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldRegionID, v))
}

// RegionIDIn applies the In predicate on the "region_id" field.
func RegionIDIn(vs ...uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldRegionID, vs...))
}

// RegionIDNotIn applies the NotIn predicate on the "region_id" field.
func RegionIDNotIn(vs ...uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldRegionID, vs...))
}

// RegionIDGT applies the GT predicate on the "region_id" field.
func RegionIDGT(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldRegionID, v))
}

// RegionIDGTE applies the GTE predicate on the "region_id" field.
func RegionIDGTE(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldRegionID, v))
}

// RegionIDLT applies the LT predicate on the "region_id" field.
func RegionIDLT(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldRegionID, v))
}

// RegionIDLTE applies the LTE predicate on the "region_id" field.
func RegionIDLTE(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldRegionID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v enum.EstimateStatus) predicate.Estimate {
	vc := v
	return predicate.Estimate(sql.FieldEQ(FieldStatus, vc))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v enum.EstimateStatus) predicate.Estimate {
	vc := v
	return predicate.Estimate(sql.FieldNEQ(FieldStatus, vc))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...enum.EstimateStatus) predicate.Estimate {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Estimate(sql.FieldIn(FieldStatus, v...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...enum.EstimateStatus) predicate.Estimate {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Estimate(sql.FieldNotIn(FieldStatus, v...))
}

// CurrentMaterialEQ applies the EQ predicate on the "current_material" field.
func CurrentMaterialEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCurrentMaterial, v))
}

// CurrentMaterialNEQ applies the NEQ predicate on the "current_material" field.
func CurrentMaterialNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldCurrentMaterial, v))
}

// CurrentMaterialIn applies the In predicate on the "current_material" field.
func CurrentMaterialIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldCurrentMaterial, vs...))
}

// CurrentMaterialNotIn applies the NotIn predicate on the "current_material" field.
func CurrentMaterialNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldCurrentMaterial, vs...))
}

// CurrentMaterialGT applies the GT predicate on the "current_material" field.
func CurrentMaterialGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldCurrentMaterial, v))
}

// CurrentMaterialGTE applies the GTE predicate on the "current_material" field.
func CurrentMaterialGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldCurrentMaterial, v))
}

// CurrentMaterialLT applies the LT predicate on the "current_material" field.
func CurrentMaterialLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldCurrentMaterial, v))
}

// CurrentMaterialLTE applies the LTE predicate on the "current_material" field.
func CurrentMaterialLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldCurrentMaterial, v))
}

// CurrentMaterialContains applies the Contains predicate on the "current_material" field.
func CurrentMaterialContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldCurrentMaterial, v))
}

// CurrentMaterialHasPrefix applies the HasPrefix predicate on the "current_material" field.
func CurrentMaterialHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldCurrentMaterial, v))
}

// CurrentMaterialHasSuffix applies the HasSuffix predicate on the "current_material" field.
func CurrentMaterialHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldCurrentMaterial, v))
}

// CurrentMaterialIsNil applies the IsNil predicate on the "current_material" field.
func CurrentMaterialIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldCurrentMaterial))
}

// CurrentMaterialNotNil applies the NotNil predicate on the "current_material" field.
func CurrentMaterialNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldCurrentMaterial))
}

// CurrentMaterialEqualFold applies the EqualFold predicate on the "current_material" field.
func CurrentMaterialEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldCurrentMaterial, v))
}

// CurrentMaterialContainsFold applies the ContainsFold predicate on the "current_material" field.
func CurrentMaterialContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldCurrentMaterial, v))
}

// NewRoofingMaterialEQ applies the EQ predicate on the "new_roofing_material" field.
func NewRoofingMaterialEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialNEQ applies the NEQ predicate on the "new_roofing_material" field.
func NewRoofingMaterialNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialIn applies the In predicate on the "new_roofing_material" field.
func NewRoofingMaterialIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldNewRoofingMaterial, vs...))
}

// NewRoofingMaterialNotIn applies the NotIn predicate on the "new_roofing_material" field.
func NewRoofingMaterialNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldNewRoofingMaterial, vs...))
}

// NewRoofingMaterialGT applies the GT predicate on the "new_roofing_material" field.
func NewRoofingMaterialGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialGTE applies the GTE predicate on the "new_roofing_material" field.
func NewRoofingMaterialGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialLT applies the LT predicate on the "new_roofing_material" field.
func NewRoofingMaterialLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialLTE applies the LTE predicate on the "new_roofing_material" field.
func NewRoofingMaterialLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialContains applies the Contains predicate on the "new_roofing_material" field.
func NewRoofingMaterialContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialHasPrefix applies the HasPrefix predicate on the "new_roofing_material" field.
func NewRoofingMaterialHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialHasSuffix applies the HasSuffix predicate on the "new_roofing_material" field.
func NewRoofingMaterialHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialIsNil applies the IsNil predicate on the "new_roofing_material" field.
func NewRoofingMaterialIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldNewRoofingMaterial))
}

// NewRoofingMaterialNotNil applies the NotNil predicate on the "new_roofing_material" field.
func NewRoofingMaterialNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldNewRoofingMaterial))
}

// NewRoofingMaterialEqualFold applies the EqualFold predicate on the "new_roofing_material" field.
func NewRoofingMaterialEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldNewRoofingMaterial, v))
}

// NewRoofingMaterialContainsFold applies the ContainsFold predicate on the "new_roofing_material" field.
func NewRoofingMaterialContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldNewRoofingMaterial, v))
}

// LowSlopeEQ applies the EQ predicate on the "lowSlope" field.
func LowSlopeEQ(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLowSlope, v))
}

// LowSlopeNEQ applies the NEQ predicate on the "lowSlope" field.
func LowSlopeNEQ(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldLowSlope, v))
}

// CurrentMaterialLowSlopeEQ applies the EQ predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeNEQ applies the NEQ predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeIn applies the In predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldCurrentMaterialLowSlope, vs...))
}

// CurrentMaterialLowSlopeNotIn applies the NotIn predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldCurrentMaterialLowSlope, vs...))
}

// CurrentMaterialLowSlopeGT applies the GT predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeGTE applies the GTE predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeLT applies the LT predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeLTE applies the LTE predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeContains applies the Contains predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeHasPrefix applies the HasPrefix predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeHasSuffix applies the HasSuffix predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeIsNil applies the IsNil predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldCurrentMaterialLowSlope))
}

// CurrentMaterialLowSlopeNotNil applies the NotNil predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldCurrentMaterialLowSlope))
}

// CurrentMaterialLowSlopeEqualFold applies the EqualFold predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldCurrentMaterialLowSlope, v))
}

// CurrentMaterialLowSlopeContainsFold applies the ContainsFold predicate on the "current_material_low_slope" field.
func CurrentMaterialLowSlopeContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldCurrentMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeEQ applies the EQ predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeNEQ applies the NEQ predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeIn applies the In predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldNewRoofingMaterialLowSlope, vs...))
}

// NewRoofingMaterialLowSlopeNotIn applies the NotIn predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldNewRoofingMaterialLowSlope, vs...))
}

// NewRoofingMaterialLowSlopeGT applies the GT predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeGTE applies the GTE predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeLT applies the LT predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeLTE applies the LTE predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeContains applies the Contains predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeHasPrefix applies the HasPrefix predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeHasSuffix applies the HasSuffix predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeIsNil applies the IsNil predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldNewRoofingMaterialLowSlope))
}

// NewRoofingMaterialLowSlopeNotNil applies the NotNil predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldNewRoofingMaterialLowSlope))
}

// NewRoofingMaterialLowSlopeEqualFold applies the EqualFold predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldNewRoofingMaterialLowSlope, v))
}

// NewRoofingMaterialLowSlopeContainsFold applies the ContainsFold predicate on the "new_roofing_material_low_slope" field.
func NewRoofingMaterialLowSlopeContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldNewRoofingMaterialLowSlope, v))
}

// RedeckEQ applies the EQ predicate on the "redeck" field.
func RedeckEQ(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldRedeck, v))
}

// RedeckNEQ applies the NEQ predicate on the "redeck" field.
func RedeckNEQ(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldRedeck, v))
}

// LayersEQ applies the EQ predicate on the "layers" field.
func LayersEQ(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLayers, v))
}

// LayersNEQ applies the NEQ predicate on the "layers" field.
func LayersNEQ(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldLayers, v))
}

// LayersIn applies the In predicate on the "layers" field.
func LayersIn(vs ...uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldLayers, vs...))
}

// LayersNotIn applies the NotIn predicate on the "layers" field.
func LayersNotIn(vs ...uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldLayers, vs...))
}

// LayersGT applies the GT predicate on the "layers" field.
func LayersGT(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldLayers, v))
}

// LayersGTE applies the GTE predicate on the "layers" field.
func LayersGTE(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldLayers, v))
}

// LayersLT applies the LT predicate on the "layers" field.
func LayersLT(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldLayers, v))
}

// LayersLTE applies the LTE predicate on the "layers" field.
func LayersLTE(v uint8) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldLayers, v))
}

// Layer2MaterialEQ applies the EQ predicate on the "layer2_material" field.
func Layer2MaterialEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLayer2Material, v))
}

// Layer2MaterialNEQ applies the NEQ predicate on the "layer2_material" field.
func Layer2MaterialNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldLayer2Material, v))
}

// Layer2MaterialIn applies the In predicate on the "layer2_material" field.
func Layer2MaterialIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldLayer2Material, vs...))
}

// Layer2MaterialNotIn applies the NotIn predicate on the "layer2_material" field.
func Layer2MaterialNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldLayer2Material, vs...))
}

// Layer2MaterialGT applies the GT predicate on the "layer2_material" field.
func Layer2MaterialGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldLayer2Material, v))
}

// Layer2MaterialGTE applies the GTE predicate on the "layer2_material" field.
func Layer2MaterialGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldLayer2Material, v))
}

// Layer2MaterialLT applies the LT predicate on the "layer2_material" field.
func Layer2MaterialLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldLayer2Material, v))
}

// Layer2MaterialLTE applies the LTE predicate on the "layer2_material" field.
func Layer2MaterialLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldLayer2Material, v))
}

// Layer2MaterialContains applies the Contains predicate on the "layer2_material" field.
func Layer2MaterialContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldLayer2Material, v))
}

// Layer2MaterialHasPrefix applies the HasPrefix predicate on the "layer2_material" field.
func Layer2MaterialHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldLayer2Material, v))
}

// Layer2MaterialHasSuffix applies the HasSuffix predicate on the "layer2_material" field.
func Layer2MaterialHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldLayer2Material, v))
}

// Layer2MaterialIsNil applies the IsNil predicate on the "layer2_material" field.
func Layer2MaterialIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldLayer2Material))
}

// Layer2MaterialNotNil applies the NotNil predicate on the "layer2_material" field.
func Layer2MaterialNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldLayer2Material))
}

// Layer2MaterialEqualFold applies the EqualFold predicate on the "layer2_material" field.
func Layer2MaterialEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldLayer2Material, v))
}

// Layer2MaterialContainsFold applies the ContainsFold predicate on the "layer2_material" field.
func Layer2MaterialContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldLayer2Material, v))
}

// Layer3MaterialEQ applies the EQ predicate on the "layer3_material" field.
func Layer3MaterialEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldLayer3Material, v))
}

// Layer3MaterialNEQ applies the NEQ predicate on the "layer3_material" field.
func Layer3MaterialNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldLayer3Material, v))
}

// Layer3MaterialIn applies the In predicate on the "layer3_material" field.
func Layer3MaterialIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldLayer3Material, vs...))
}

// Layer3MaterialNotIn applies the NotIn predicate on the "layer3_material" field.
func Layer3MaterialNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldLayer3Material, vs...))
}

// Layer3MaterialGT applies the GT predicate on the "layer3_material" field.
func Layer3MaterialGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldLayer3Material, v))
}

// Layer3MaterialGTE applies the GTE predicate on the "layer3_material" field.
func Layer3MaterialGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldLayer3Material, v))
}

// Layer3MaterialLT applies the LT predicate on the "layer3_material" field.
func Layer3MaterialLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldLayer3Material, v))
}

// Layer3MaterialLTE applies the LTE predicate on the "layer3_material" field.
func Layer3MaterialLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldLayer3Material, v))
}

// Layer3MaterialContains applies the Contains predicate on the "layer3_material" field.
func Layer3MaterialContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldLayer3Material, v))
}

// Layer3MaterialHasPrefix applies the HasPrefix predicate on the "layer3_material" field.
func Layer3MaterialHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldLayer3Material, v))
}

// Layer3MaterialHasSuffix applies the HasSuffix predicate on the "layer3_material" field.
func Layer3MaterialHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldLayer3Material, v))
}

// Layer3MaterialIsNil applies the IsNil predicate on the "layer3_material" field.
func Layer3MaterialIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldLayer3Material))
}

// Layer3MaterialNotNil applies the NotNil predicate on the "layer3_material" field.
func Layer3MaterialNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldLayer3Material))
}

// Layer3MaterialEqualFold applies the EqualFold predicate on the "layer3_material" field.
func Layer3MaterialEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldLayer3Material, v))
}

// Layer3MaterialContainsFold applies the ContainsFold predicate on the "layer3_material" field.
func Layer3MaterialContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldLayer3Material, v))
}

// PartialPercentageEQ applies the EQ predicate on the "partial_percentage" field.
func PartialPercentageEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPartialPercentage, v))
}

// PartialPercentageNEQ applies the NEQ predicate on the "partial_percentage" field.
func PartialPercentageNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldPartialPercentage, v))
}

// PartialPercentageIn applies the In predicate on the "partial_percentage" field.
func PartialPercentageIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldPartialPercentage, vs...))
}

// PartialPercentageNotIn applies the NotIn predicate on the "partial_percentage" field.
func PartialPercentageNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldPartialPercentage, vs...))
}

// PartialPercentageGT applies the GT predicate on the "partial_percentage" field.
func PartialPercentageGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldPartialPercentage, v))
}

// PartialPercentageGTE applies the GTE predicate on the "partial_percentage" field.
func PartialPercentageGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldPartialPercentage, v))
}

// PartialPercentageLT applies the LT predicate on the "partial_percentage" field.
func PartialPercentageLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldPartialPercentage, v))
}

// PartialPercentageLTE applies the LTE predicate on the "partial_percentage" field.
func PartialPercentageLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldPartialPercentage, v))
}

// PartialPercentageIsNil applies the IsNil predicate on the "partial_percentage" field.
func PartialPercentageIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldPartialPercentage))
}

// PartialPercentageNotNil applies the NotNil predicate on the "partial_percentage" field.
func PartialPercentageNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldPartialPercentage))
}

// MaterialMappingNoteEQ applies the EQ predicate on the "material_mapping_note" field.
func MaterialMappingNoteEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteNEQ applies the NEQ predicate on the "material_mapping_note" field.
func MaterialMappingNoteNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteIn applies the In predicate on the "material_mapping_note" field.
func MaterialMappingNoteIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldMaterialMappingNote, vs...))
}

// MaterialMappingNoteNotIn applies the NotIn predicate on the "material_mapping_note" field.
func MaterialMappingNoteNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldMaterialMappingNote, vs...))
}

// MaterialMappingNoteGT applies the GT predicate on the "material_mapping_note" field.
func MaterialMappingNoteGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteGTE applies the GTE predicate on the "material_mapping_note" field.
func MaterialMappingNoteGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteLT applies the LT predicate on the "material_mapping_note" field.
func MaterialMappingNoteLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteLTE applies the LTE predicate on the "material_mapping_note" field.
func MaterialMappingNoteLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteContains applies the Contains predicate on the "material_mapping_note" field.
func MaterialMappingNoteContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteHasPrefix applies the HasPrefix predicate on the "material_mapping_note" field.
func MaterialMappingNoteHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteHasSuffix applies the HasSuffix predicate on the "material_mapping_note" field.
func MaterialMappingNoteHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteIsNil applies the IsNil predicate on the "material_mapping_note" field.
func MaterialMappingNoteIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldMaterialMappingNote))
}

// MaterialMappingNoteNotNil applies the NotNil predicate on the "material_mapping_note" field.
func MaterialMappingNoteNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldMaterialMappingNote))
}

// MaterialMappingNoteEqualFold applies the EqualFold predicate on the "material_mapping_note" field.
func MaterialMappingNoteEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldMaterialMappingNote, v))
}

// MaterialMappingNoteContainsFold applies the ContainsFold predicate on the "material_mapping_note" field.
func MaterialMappingNoteContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldMaterialMappingNote, v))
}

// MeasureTypeEQ applies the EQ predicate on the "measure_type" field.
func MeasureTypeEQ(v enum.Measure) predicate.Estimate {
	vc := v
	return predicate.Estimate(sql.FieldEQ(FieldMeasureType, vc))
}

// MeasureTypeNEQ applies the NEQ predicate on the "measure_type" field.
func MeasureTypeNEQ(v enum.Measure) predicate.Estimate {
	vc := v
	return predicate.Estimate(sql.FieldNEQ(FieldMeasureType, vc))
}

// MeasureTypeIn applies the In predicate on the "measure_type" field.
func MeasureTypeIn(vs ...enum.Measure) predicate.Estimate {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Estimate(sql.FieldIn(FieldMeasureType, v...))
}

// MeasureTypeNotIn applies the NotIn predicate on the "measure_type" field.
func MeasureTypeNotIn(vs ...enum.Measure) predicate.Estimate {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Estimate(sql.FieldNotIn(FieldMeasureType, v...))
}

// ExtraChargeTypeEQ applies the EQ predicate on the "extra_charge_type" field.
func ExtraChargeTypeEQ(v enum.ExtraCharge) predicate.Estimate {
	vc := v
	return predicate.Estimate(sql.FieldEQ(FieldExtraChargeType, vc))
}

// ExtraChargeTypeNEQ applies the NEQ predicate on the "extra_charge_type" field.
func ExtraChargeTypeNEQ(v enum.ExtraCharge) predicate.Estimate {
	vc := v
	return predicate.Estimate(sql.FieldNEQ(FieldExtraChargeType, vc))
}

// ExtraChargeTypeIn applies the In predicate on the "extra_charge_type" field.
func ExtraChargeTypeIn(vs ...enum.ExtraCharge) predicate.Estimate {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Estimate(sql.FieldIn(FieldExtraChargeType, v...))
}

// ExtraChargeTypeNotIn applies the NotIn predicate on the "extra_charge_type" field.
func ExtraChargeTypeNotIn(vs ...enum.ExtraCharge) predicate.Estimate {
	v := make([]any, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Estimate(sql.FieldNotIn(FieldExtraChargeType, v...))
}

// ExtraChargeTypeIsNil applies the IsNil predicate on the "extra_charge_type" field.
func ExtraChargeTypeIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldExtraChargeType))
}

// ExtraChargeTypeNotNil applies the NotNil predicate on the "extra_charge_type" field.
func ExtraChargeTypeNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldExtraChargeType))
}

// ExtraChargesEQ applies the EQ predicate on the "extra_charges" field.
func ExtraChargesEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldExtraCharges, v))
}

// ExtraChargesNEQ applies the NEQ predicate on the "extra_charges" field.
func ExtraChargesNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldExtraCharges, v))
}

// ExtraChargesIn applies the In predicate on the "extra_charges" field.
func ExtraChargesIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldExtraCharges, vs...))
}

// ExtraChargesNotIn applies the NotIn predicate on the "extra_charges" field.
func ExtraChargesNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldExtraCharges, vs...))
}

// ExtraChargesGT applies the GT predicate on the "extra_charges" field.
func ExtraChargesGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldExtraCharges, v))
}

// ExtraChargesGTE applies the GTE predicate on the "extra_charges" field.
func ExtraChargesGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldExtraCharges, v))
}

// ExtraChargesLT applies the LT predicate on the "extra_charges" field.
func ExtraChargesLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldExtraCharges, v))
}

// ExtraChargesLTE applies the LTE predicate on the "extra_charges" field.
func ExtraChargesLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldExtraCharges, v))
}

// ExtraChargesIsNil applies the IsNil predicate on the "extra_charges" field.
func ExtraChargesIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldExtraCharges))
}

// ExtraChargesNotNil applies the NotNil predicate on the "extra_charges" field.
func ExtraChargesNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldExtraCharges))
}

// ExtraChargeCondIsNil applies the IsNil predicate on the "extra_charge_cond" field.
func ExtraChargeCondIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldExtraChargeCond))
}

// ExtraChargeCondNotNil applies the NotNil predicate on the "extra_charge_cond" field.
func ExtraChargeCondNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldExtraChargeCond))
}

// ExtraChargeNoteEQ applies the EQ predicate on the "extra_charge_note" field.
func ExtraChargeNoteEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldExtraChargeNote, v))
}

// ExtraChargeNoteNEQ applies the NEQ predicate on the "extra_charge_note" field.
func ExtraChargeNoteNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldExtraChargeNote, v))
}

// ExtraChargeNoteIn applies the In predicate on the "extra_charge_note" field.
func ExtraChargeNoteIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldExtraChargeNote, vs...))
}

// ExtraChargeNoteNotIn applies the NotIn predicate on the "extra_charge_note" field.
func ExtraChargeNoteNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldExtraChargeNote, vs...))
}

// ExtraChargeNoteGT applies the GT predicate on the "extra_charge_note" field.
func ExtraChargeNoteGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldExtraChargeNote, v))
}

// ExtraChargeNoteGTE applies the GTE predicate on the "extra_charge_note" field.
func ExtraChargeNoteGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldExtraChargeNote, v))
}

// ExtraChargeNoteLT applies the LT predicate on the "extra_charge_note" field.
func ExtraChargeNoteLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldExtraChargeNote, v))
}

// ExtraChargeNoteLTE applies the LTE predicate on the "extra_charge_note" field.
func ExtraChargeNoteLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldExtraChargeNote, v))
}

// ExtraChargeNoteContains applies the Contains predicate on the "extra_charge_note" field.
func ExtraChargeNoteContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldExtraChargeNote, v))
}

// ExtraChargeNoteHasPrefix applies the HasPrefix predicate on the "extra_charge_note" field.
func ExtraChargeNoteHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldExtraChargeNote, v))
}

// ExtraChargeNoteHasSuffix applies the HasSuffix predicate on the "extra_charge_note" field.
func ExtraChargeNoteHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldExtraChargeNote, v))
}

// ExtraChargeNoteIsNil applies the IsNil predicate on the "extra_charge_note" field.
func ExtraChargeNoteIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldExtraChargeNote))
}

// ExtraChargeNoteNotNil applies the NotNil predicate on the "extra_charge_note" field.
func ExtraChargeNoteNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldExtraChargeNote))
}

// ExtraChargeNoteEqualFold applies the EqualFold predicate on the "extra_charge_note" field.
func ExtraChargeNoteEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldExtraChargeNote, v))
}

// ExtraChargeNoteContainsFold applies the ContainsFold predicate on the "extra_charge_note" field.
func ExtraChargeNoteContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldExtraChargeNote, v))
}

// EstimatorEQ applies the EQ predicate on the "estimator" field.
func EstimatorEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldEstimator, v))
}

// EstimatorNEQ applies the NEQ predicate on the "estimator" field.
func EstimatorNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldEstimator, v))
}

// EstimatorIn applies the In predicate on the "estimator" field.
func EstimatorIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldEstimator, vs...))
}

// EstimatorNotIn applies the NotIn predicate on the "estimator" field.
func EstimatorNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldEstimator, vs...))
}

// EstimatorGT applies the GT predicate on the "estimator" field.
func EstimatorGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldEstimator, v))
}

// EstimatorGTE applies the GTE predicate on the "estimator" field.
func EstimatorGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldEstimator, v))
}

// EstimatorLT applies the LT predicate on the "estimator" field.
func EstimatorLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldEstimator, v))
}

// EstimatorLTE applies the LTE predicate on the "estimator" field.
func EstimatorLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldEstimator, v))
}

// EstimatorContains applies the Contains predicate on the "estimator" field.
func EstimatorContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldEstimator, v))
}

// EstimatorHasPrefix applies the HasPrefix predicate on the "estimator" field.
func EstimatorHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldEstimator, v))
}

// EstimatorHasSuffix applies the HasSuffix predicate on the "estimator" field.
func EstimatorHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldEstimator, v))
}

// EstimatorIsNil applies the IsNil predicate on the "estimator" field.
func EstimatorIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldEstimator))
}

// EstimatorNotNil applies the NotNil predicate on the "estimator" field.
func EstimatorNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldEstimator))
}

// EstimatorEqualFold applies the EqualFold predicate on the "estimator" field.
func EstimatorEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldEstimator, v))
}

// EstimatorContainsFold applies the ContainsFold predicate on the "estimator" field.
func EstimatorContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldEstimator, v))
}

// EstimatorOrderIDEQ applies the EQ predicate on the "estimator_order_id" field.
func EstimatorOrderIDEQ(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldEstimatorOrderID, v))
}

// EstimatorOrderIDNEQ applies the NEQ predicate on the "estimator_order_id" field.
func EstimatorOrderIDNEQ(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldEstimatorOrderID, v))
}

// EstimatorOrderIDIn applies the In predicate on the "estimator_order_id" field.
func EstimatorOrderIDIn(vs ...uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldEstimatorOrderID, vs...))
}

// EstimatorOrderIDNotIn applies the NotIn predicate on the "estimator_order_id" field.
func EstimatorOrderIDNotIn(vs ...uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldEstimatorOrderID, vs...))
}

// EstimatorOrderIDGT applies the GT predicate on the "estimator_order_id" field.
func EstimatorOrderIDGT(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldEstimatorOrderID, v))
}

// EstimatorOrderIDGTE applies the GTE predicate on the "estimator_order_id" field.
func EstimatorOrderIDGTE(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldEstimatorOrderID, v))
}

// EstimatorOrderIDLT applies the LT predicate on the "estimator_order_id" field.
func EstimatorOrderIDLT(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldEstimatorOrderID, v))
}

// EstimatorOrderIDLTE applies the LTE predicate on the "estimator_order_id" field.
func EstimatorOrderIDLTE(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldEstimatorOrderID, v))
}

// EstimatorOrderIDIsNil applies the IsNil predicate on the "estimator_order_id" field.
func EstimatorOrderIDIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldEstimatorOrderID))
}

// EstimatorOrderIDNotNil applies the NotNil predicate on the "estimator_order_id" field.
func EstimatorOrderIDNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldEstimatorOrderID))
}

// EstimatorReportIDEQ applies the EQ predicate on the "estimator_report_id" field.
func EstimatorReportIDEQ(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldEstimatorReportID, v))
}

// EstimatorReportIDNEQ applies the NEQ predicate on the "estimator_report_id" field.
func EstimatorReportIDNEQ(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldEstimatorReportID, v))
}

// EstimatorReportIDIn applies the In predicate on the "estimator_report_id" field.
func EstimatorReportIDIn(vs ...uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldEstimatorReportID, vs...))
}

// EstimatorReportIDNotIn applies the NotIn predicate on the "estimator_report_id" field.
func EstimatorReportIDNotIn(vs ...uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldEstimatorReportID, vs...))
}

// EstimatorReportIDGT applies the GT predicate on the "estimator_report_id" field.
func EstimatorReportIDGT(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldEstimatorReportID, v))
}

// EstimatorReportIDGTE applies the GTE predicate on the "estimator_report_id" field.
func EstimatorReportIDGTE(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldEstimatorReportID, v))
}

// EstimatorReportIDLT applies the LT predicate on the "estimator_report_id" field.
func EstimatorReportIDLT(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldEstimatorReportID, v))
}

// EstimatorReportIDLTE applies the LTE predicate on the "estimator_report_id" field.
func EstimatorReportIDLTE(v uint) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldEstimatorReportID, v))
}

// EstimatorReportIDIsNil applies the IsNil predicate on the "estimator_report_id" field.
func EstimatorReportIDIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldEstimatorReportID))
}

// EstimatorReportIDNotNil applies the NotNil predicate on the "estimator_report_id" field.
func EstimatorReportIDNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldEstimatorReportID))
}

// TotalSquaresEQ applies the EQ predicate on the "total_squares" field.
func TotalSquaresEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldTotalSquares, v))
}

// TotalSquaresNEQ applies the NEQ predicate on the "total_squares" field.
func TotalSquaresNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldTotalSquares, v))
}

// TotalSquaresIn applies the In predicate on the "total_squares" field.
func TotalSquaresIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldTotalSquares, vs...))
}

// TotalSquaresNotIn applies the NotIn predicate on the "total_squares" field.
func TotalSquaresNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldTotalSquares, vs...))
}

// TotalSquaresGT applies the GT predicate on the "total_squares" field.
func TotalSquaresGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldTotalSquares, v))
}

// TotalSquaresGTE applies the GTE predicate on the "total_squares" field.
func TotalSquaresGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldTotalSquares, v))
}

// TotalSquaresLT applies the LT predicate on the "total_squares" field.
func TotalSquaresLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldTotalSquares, v))
}

// TotalSquaresLTE applies the LTE predicate on the "total_squares" field.
func TotalSquaresLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldTotalSquares, v))
}

// PrimaryPitchEQ applies the EQ predicate on the "primary_pitch" field.
func PrimaryPitchEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPrimaryPitch, v))
}

// PrimaryPitchNEQ applies the NEQ predicate on the "primary_pitch" field.
func PrimaryPitchNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldPrimaryPitch, v))
}

// PrimaryPitchIn applies the In predicate on the "primary_pitch" field.
func PrimaryPitchIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldPrimaryPitch, vs...))
}

// PrimaryPitchNotIn applies the NotIn predicate on the "primary_pitch" field.
func PrimaryPitchNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldPrimaryPitch, vs...))
}

// PrimaryPitchGT applies the GT predicate on the "primary_pitch" field.
func PrimaryPitchGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldPrimaryPitch, v))
}

// PrimaryPitchGTE applies the GTE predicate on the "primary_pitch" field.
func PrimaryPitchGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldPrimaryPitch, v))
}

// PrimaryPitchLT applies the LT predicate on the "primary_pitch" field.
func PrimaryPitchLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldPrimaryPitch, v))
}

// PrimaryPitchLTE applies the LTE predicate on the "primary_pitch" field.
func PrimaryPitchLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldPrimaryPitch, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldPrice, v))
}

// PriceSummaryEQ applies the EQ predicate on the "price_summary" field.
func PriceSummaryEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldPriceSummary, v))
}

// PriceSummaryNEQ applies the NEQ predicate on the "price_summary" field.
func PriceSummaryNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldPriceSummary, v))
}

// PriceSummaryIn applies the In predicate on the "price_summary" field.
func PriceSummaryIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldPriceSummary, vs...))
}

// PriceSummaryNotIn applies the NotIn predicate on the "price_summary" field.
func PriceSummaryNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldPriceSummary, vs...))
}

// PriceSummaryGT applies the GT predicate on the "price_summary" field.
func PriceSummaryGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldPriceSummary, v))
}

// PriceSummaryGTE applies the GTE predicate on the "price_summary" field.
func PriceSummaryGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldPriceSummary, v))
}

// PriceSummaryLT applies the LT predicate on the "price_summary" field.
func PriceSummaryLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldPriceSummary, v))
}

// PriceSummaryLTE applies the LTE predicate on the "price_summary" field.
func PriceSummaryLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldPriceSummary, v))
}

// PriceSummaryContains applies the Contains predicate on the "price_summary" field.
func PriceSummaryContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldPriceSummary, v))
}

// PriceSummaryHasPrefix applies the HasPrefix predicate on the "price_summary" field.
func PriceSummaryHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldPriceSummary, v))
}

// PriceSummaryHasSuffix applies the HasSuffix predicate on the "price_summary" field.
func PriceSummaryHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldPriceSummary, v))
}

// PriceSummaryIsNil applies the IsNil predicate on the "price_summary" field.
func PriceSummaryIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldPriceSummary))
}

// PriceSummaryNotNil applies the NotNil predicate on the "price_summary" field.
func PriceSummaryNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldPriceSummary))
}

// PriceSummaryEqualFold applies the EqualFold predicate on the "price_summary" field.
func PriceSummaryEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldPriceSummary, v))
}

// PriceSummaryContainsFold applies the ContainsFold predicate on the "price_summary" field.
func PriceSummaryContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldPriceSummary, v))
}

// BoundsIsNil applies the IsNil predicate on the "bounds" field.
func BoundsIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldBounds))
}

// BoundsNotNil applies the NotNil predicate on the "bounds" field.
func BoundsNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldBounds))
}

// EstimatorRawResponseIsNil applies the IsNil predicate on the "estimator_raw_response" field.
func EstimatorRawResponseIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldEstimatorRawResponse))
}

// EstimatorRawResponseNotNil applies the NotNil predicate on the "estimator_raw_response" field.
func EstimatorRawResponseNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldEstimatorRawResponse))
}

// OverrideEQ applies the EQ predicate on the "override" field.
func OverrideEQ(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverride, v))
}

// OverrideNEQ applies the NEQ predicate on the "override" field.
func OverrideNEQ(v bool) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldOverride, v))
}

// OverrideIsNil applies the IsNil predicate on the "override" field.
func OverrideIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldOverride))
}

// OverrideNotNil applies the NotNil predicate on the "override" field.
func OverrideNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldOverride))
}

// OverrideTotalSquaresEQ applies the EQ predicate on the "override_total_squares" field.
func OverrideTotalSquaresEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverrideTotalSquares, v))
}

// OverrideTotalSquaresNEQ applies the NEQ predicate on the "override_total_squares" field.
func OverrideTotalSquaresNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldOverrideTotalSquares, v))
}

// OverrideTotalSquaresIn applies the In predicate on the "override_total_squares" field.
func OverrideTotalSquaresIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldOverrideTotalSquares, vs...))
}

// OverrideTotalSquaresNotIn applies the NotIn predicate on the "override_total_squares" field.
func OverrideTotalSquaresNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldOverrideTotalSquares, vs...))
}

// OverrideTotalSquaresGT applies the GT predicate on the "override_total_squares" field.
func OverrideTotalSquaresGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldOverrideTotalSquares, v))
}

// OverrideTotalSquaresGTE applies the GTE predicate on the "override_total_squares" field.
func OverrideTotalSquaresGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldOverrideTotalSquares, v))
}

// OverrideTotalSquaresLT applies the LT predicate on the "override_total_squares" field.
func OverrideTotalSquaresLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldOverrideTotalSquares, v))
}

// OverrideTotalSquaresLTE applies the LTE predicate on the "override_total_squares" field.
func OverrideTotalSquaresLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldOverrideTotalSquares, v))
}

// OverridePrimaryPitchEQ applies the EQ predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverridePrimaryPitch, v))
}

// OverridePrimaryPitchNEQ applies the NEQ predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldOverridePrimaryPitch, v))
}

// OverridePrimaryPitchIn applies the In predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldOverridePrimaryPitch, vs...))
}

// OverridePrimaryPitchNotIn applies the NotIn predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldOverridePrimaryPitch, vs...))
}

// OverridePrimaryPitchGT applies the GT predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldOverridePrimaryPitch, v))
}

// OverridePrimaryPitchGTE applies the GTE predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldOverridePrimaryPitch, v))
}

// OverridePrimaryPitchLT applies the LT predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldOverridePrimaryPitch, v))
}

// OverridePrimaryPitchLTE applies the LTE predicate on the "override_primary_pitch" field.
func OverridePrimaryPitchLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldOverridePrimaryPitch, v))
}

// OverridePriceEQ applies the EQ predicate on the "override_price" field.
func OverridePriceEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverridePrice, v))
}

// OverridePriceNEQ applies the NEQ predicate on the "override_price" field.
func OverridePriceNEQ(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldOverridePrice, v))
}

// OverridePriceIn applies the In predicate on the "override_price" field.
func OverridePriceIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldOverridePrice, vs...))
}

// OverridePriceNotIn applies the NotIn predicate on the "override_price" field.
func OverridePriceNotIn(vs ...float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldOverridePrice, vs...))
}

// OverridePriceGT applies the GT predicate on the "override_price" field.
func OverridePriceGT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldOverridePrice, v))
}

// OverridePriceGTE applies the GTE predicate on the "override_price" field.
func OverridePriceGTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldOverridePrice, v))
}

// OverridePriceLT applies the LT predicate on the "override_price" field.
func OverridePriceLT(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldOverridePrice, v))
}

// OverridePriceLTE applies the LTE predicate on the "override_price" field.
func OverridePriceLTE(v float64) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldOverridePrice, v))
}

// OverridePriceSummaryEQ applies the EQ predicate on the "override_price_summary" field.
func OverridePriceSummaryEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryNEQ applies the NEQ predicate on the "override_price_summary" field.
func OverridePriceSummaryNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryIn applies the In predicate on the "override_price_summary" field.
func OverridePriceSummaryIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldOverridePriceSummary, vs...))
}

// OverridePriceSummaryNotIn applies the NotIn predicate on the "override_price_summary" field.
func OverridePriceSummaryNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldOverridePriceSummary, vs...))
}

// OverridePriceSummaryGT applies the GT predicate on the "override_price_summary" field.
func OverridePriceSummaryGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryGTE applies the GTE predicate on the "override_price_summary" field.
func OverridePriceSummaryGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryLT applies the LT predicate on the "override_price_summary" field.
func OverridePriceSummaryLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryLTE applies the LTE predicate on the "override_price_summary" field.
func OverridePriceSummaryLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryContains applies the Contains predicate on the "override_price_summary" field.
func OverridePriceSummaryContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryHasPrefix applies the HasPrefix predicate on the "override_price_summary" field.
func OverridePriceSummaryHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryHasSuffix applies the HasSuffix predicate on the "override_price_summary" field.
func OverridePriceSummaryHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryIsNil applies the IsNil predicate on the "override_price_summary" field.
func OverridePriceSummaryIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldOverridePriceSummary))
}

// OverridePriceSummaryNotNil applies the NotNil predicate on the "override_price_summary" field.
func OverridePriceSummaryNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldOverridePriceSummary))
}

// OverridePriceSummaryEqualFold applies the EqualFold predicate on the "override_price_summary" field.
func OverridePriceSummaryEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldOverridePriceSummary, v))
}

// OverridePriceSummaryContainsFold applies the ContainsFold predicate on the "override_price_summary" field.
func OverridePriceSummaryContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldOverridePriceSummary, v))
}

// CompanyRefIDEQ applies the EQ predicate on the "company_ref_id" field.
func CompanyRefIDEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCompanyRefID, v))
}

// CompanyRefIDNEQ applies the NEQ predicate on the "company_ref_id" field.
func CompanyRefIDNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldCompanyRefID, v))
}

// CompanyRefIDIn applies the In predicate on the "company_ref_id" field.
func CompanyRefIDIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldCompanyRefID, vs...))
}

// CompanyRefIDNotIn applies the NotIn predicate on the "company_ref_id" field.
func CompanyRefIDNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldCompanyRefID, vs...))
}

// CompanyRefIDGT applies the GT predicate on the "company_ref_id" field.
func CompanyRefIDGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldCompanyRefID, v))
}

// CompanyRefIDGTE applies the GTE predicate on the "company_ref_id" field.
func CompanyRefIDGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldCompanyRefID, v))
}

// CompanyRefIDLT applies the LT predicate on the "company_ref_id" field.
func CompanyRefIDLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldCompanyRefID, v))
}

// CompanyRefIDLTE applies the LTE predicate on the "company_ref_id" field.
func CompanyRefIDLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldCompanyRefID, v))
}

// CompanyRefIDContains applies the Contains predicate on the "company_ref_id" field.
func CompanyRefIDContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldCompanyRefID, v))
}

// CompanyRefIDHasPrefix applies the HasPrefix predicate on the "company_ref_id" field.
func CompanyRefIDHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldCompanyRefID, v))
}

// CompanyRefIDHasSuffix applies the HasSuffix predicate on the "company_ref_id" field.
func CompanyRefIDHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldCompanyRefID, v))
}

// CompanyRefIDIsNil applies the IsNil predicate on the "company_ref_id" field.
func CompanyRefIDIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldCompanyRefID))
}

// CompanyRefIDNotNil applies the NotNil predicate on the "company_ref_id" field.
func CompanyRefIDNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldCompanyRefID))
}

// CompanyRefIDEqualFold applies the EqualFold predicate on the "company_ref_id" field.
func CompanyRefIDEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldCompanyRefID, v))
}

// CompanyRefIDContainsFold applies the ContainsFold predicate on the "company_ref_id" field.
func CompanyRefIDContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldCompanyRefID, v))
}

// CompanyRefNameEQ applies the EQ predicate on the "company_ref_name" field.
func CompanyRefNameEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldCompanyRefName, v))
}

// CompanyRefNameNEQ applies the NEQ predicate on the "company_ref_name" field.
func CompanyRefNameNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldCompanyRefName, v))
}

// CompanyRefNameIn applies the In predicate on the "company_ref_name" field.
func CompanyRefNameIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldCompanyRefName, vs...))
}

// CompanyRefNameNotIn applies the NotIn predicate on the "company_ref_name" field.
func CompanyRefNameNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldCompanyRefName, vs...))
}

// CompanyRefNameGT applies the GT predicate on the "company_ref_name" field.
func CompanyRefNameGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldCompanyRefName, v))
}

// CompanyRefNameGTE applies the GTE predicate on the "company_ref_name" field.
func CompanyRefNameGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldCompanyRefName, v))
}

// CompanyRefNameLT applies the LT predicate on the "company_ref_name" field.
func CompanyRefNameLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldCompanyRefName, v))
}

// CompanyRefNameLTE applies the LTE predicate on the "company_ref_name" field.
func CompanyRefNameLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldCompanyRefName, v))
}

// CompanyRefNameContains applies the Contains predicate on the "company_ref_name" field.
func CompanyRefNameContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldCompanyRefName, v))
}

// CompanyRefNameHasPrefix applies the HasPrefix predicate on the "company_ref_name" field.
func CompanyRefNameHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldCompanyRefName, v))
}

// CompanyRefNameHasSuffix applies the HasSuffix predicate on the "company_ref_name" field.
func CompanyRefNameHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldCompanyRefName, v))
}

// CompanyRefNameIsNil applies the IsNil predicate on the "company_ref_name" field.
func CompanyRefNameIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldCompanyRefName))
}

// CompanyRefNameNotNil applies the NotNil predicate on the "company_ref_name" field.
func CompanyRefNameNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldCompanyRefName))
}

// CompanyRefNameEqualFold applies the EqualFold predicate on the "company_ref_name" field.
func CompanyRefNameEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldCompanyRefName, v))
}

// CompanyRefNameContainsFold applies the ContainsFold predicate on the "company_ref_name" field.
func CompanyRefNameContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldCompanyRefName, v))
}

// FailureReasonEQ applies the EQ predicate on the "failure_reason" field.
func FailureReasonEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEQ(FieldFailureReason, v))
}

// FailureReasonNEQ applies the NEQ predicate on the "failure_reason" field.
func FailureReasonNEQ(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNEQ(FieldFailureReason, v))
}

// FailureReasonIn applies the In predicate on the "failure_reason" field.
func FailureReasonIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldIn(FieldFailureReason, vs...))
}

// FailureReasonNotIn applies the NotIn predicate on the "failure_reason" field.
func FailureReasonNotIn(vs ...string) predicate.Estimate {
	return predicate.Estimate(sql.FieldNotIn(FieldFailureReason, vs...))
}

// FailureReasonGT applies the GT predicate on the "failure_reason" field.
func FailureReasonGT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGT(FieldFailureReason, v))
}

// FailureReasonGTE applies the GTE predicate on the "failure_reason" field.
func FailureReasonGTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldGTE(FieldFailureReason, v))
}

// FailureReasonLT applies the LT predicate on the "failure_reason" field.
func FailureReasonLT(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLT(FieldFailureReason, v))
}

// FailureReasonLTE applies the LTE predicate on the "failure_reason" field.
func FailureReasonLTE(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldLTE(FieldFailureReason, v))
}

// FailureReasonContains applies the Contains predicate on the "failure_reason" field.
func FailureReasonContains(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContains(FieldFailureReason, v))
}

// FailureReasonHasPrefix applies the HasPrefix predicate on the "failure_reason" field.
func FailureReasonHasPrefix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasPrefix(FieldFailureReason, v))
}

// FailureReasonHasSuffix applies the HasSuffix predicate on the "failure_reason" field.
func FailureReasonHasSuffix(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldHasSuffix(FieldFailureReason, v))
}

// FailureReasonIsNil applies the IsNil predicate on the "failure_reason" field.
func FailureReasonIsNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldIsNull(FieldFailureReason))
}

// FailureReasonNotNil applies the NotNil predicate on the "failure_reason" field.
func FailureReasonNotNil() predicate.Estimate {
	return predicate.Estimate(sql.FieldNotNull(FieldFailureReason))
}

// FailureReasonEqualFold applies the EqualFold predicate on the "failure_reason" field.
func FailureReasonEqualFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldEqualFold(FieldFailureReason, v))
}

// FailureReasonContainsFold applies the ContainsFold predicate on the "failure_reason" field.
func FailureReasonContainsFold(v string) predicate.Estimate {
	return predicate.Estimate(sql.FieldContainsFold(FieldFailureReason, v))
}

// HasActivities applies the HasEdge predicate on the "activities" edge.
func HasActivities() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, ActivitiesTable, ActivitiesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasActivitiesWith applies the HasEdge predicate on the "activities" edge with a given conditions (other predicates).
func HasActivitiesWith(preds ...predicate.EstimateActivity) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newActivitiesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasJobInfo applies the HasEdge predicate on the "job_info" edge.
func HasJobInfo() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, JobInfoTable, JobInfoColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasJobInfoWith applies the HasEdge predicate on the "job_info" edge with a given conditions (other predicates).
func HasJobInfoWith(preds ...predicate.Job) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newJobInfoStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasPartner applies the HasEdge predicate on the "partner" edge.
func HasPartner() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, PartnerTable, PartnerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPartnerWith applies the HasEdge predicate on the "partner" edge with a given conditions (other predicates).
func HasPartnerWith(preds ...predicate.Partner) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newPartnerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHomeOwner applies the HasEdge predicate on the "home_owner" edge.
func HasHomeOwner() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, HomeOwnerTable, HomeOwnerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHomeOwnerWith applies the HasEdge predicate on the "home_owner" edge with a given conditions (other predicates).
func HasHomeOwnerWith(preds ...predicate.HomeOwner) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newHomeOwnerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasSalesRep applies the HasEdge predicate on the "sales_rep" edge.
func HasSalesRep() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, SalesRepTable, SalesRepColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasSalesRepWith applies the HasEdge predicate on the "sales_rep" edge with a given conditions (other predicates).
func HasSalesRepWith(preds ...predicate.User) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newSalesRepStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCreator applies the HasEdge predicate on the "creator" edge.
func HasCreator() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CreatorTable, CreatorColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCreatorWith applies the HasEdge predicate on the "creator" edge with a given conditions (other predicates).
func HasCreatorWith(preds ...predicate.User) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newCreatorStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCreatorAPI applies the HasEdge predicate on the "creator_api" edge.
func HasCreatorAPI() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CreatorAPITable, CreatorAPIColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCreatorAPIWith applies the HasEdge predicate on the "creator_api" edge with a given conditions (other predicates).
func HasCreatorAPIWith(preds ...predicate.ApiUser) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newCreatorAPIStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasPdf applies the HasEdge predicate on the "pdf" edge.
func HasPdf() predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, PdfTable, PdfColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPdfWith applies the HasEdge predicate on the "pdf" edge with a given conditions (other predicates).
func HasPdfWith(preds ...predicate.Document) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		step := newPdfStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Estimate) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Estimate) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Estimate) predicate.Estimate {
	return predicate.Estimate(func(s *sql.Selector) {
		p(s.Not())
	})
}
