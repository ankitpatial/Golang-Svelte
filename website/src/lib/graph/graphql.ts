/* eslint-disable */
import type { OperationResultStore } from '@urql/svelte';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**  Go type interface{}  */
  Any: { input: any; output: any; }
  /**
   * Define a Relay Cursor type:
   * https://relay.dev/graphql/connections.htm#sec-Cursor
   */
  Cursor: { input: any; output: any; }
  Int64: { input: any; output: any; }
  /**  type Map(Go type: map[string]interface{}) */
  Map: { input: any; output: any; }
  /** Maps a Time GraphQL scalar to a Go time.Time struct. */
  Time: { input: any; output: any; }
  Upload: { input: any; output: any; }
  Void: { input: any; output: any; }
};

export enum AccountStatus {
  Active = 'ACTIVE',
  Disabled = 'DISABLED',
  Locked = 'LOCKED',
  Pending = 'PENDING'
}

export enum AdminNotifyTopic {
  ContactUsRequest = 'CONTACT_US_REQUEST',
  EagleViewEstimateNeed = 'EAGLE_VIEW_ESTIMATE_NEED',
  EagleViewEstimateProgress = 'EAGLE_VIEW_ESTIMATE_PROGRESS',
  JobInvitationExpired = 'JOB_INVITATION_EXPIRED',
  PartnerOnboardingDone = 'PARTNER_ONBOARDING_DONE'
}

export type ApiAccess = Node & {
  __typename?: 'ApiAccess';
  id: Scalars['ID']['output'];
  key?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  secret?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
  username?: Maybe<Scalars['String']['output']>;
};

export type ApiAccessConnection = {
  __typename?: 'ApiAccessConnection';
  edges?: Maybe<Array<ApiAccessEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ApiAccessEdge = {
  __typename?: 'ApiAccessEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<ApiAccess>;
};

export type ApiAccessInput = {
  id: Scalars['ID']['input'];
  key?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  password?: InputMaybe<Scalars['String']['input']>;
  secret?: InputMaybe<Scalars['String']['input']>;
  url: Scalars['String']['input'];
  username?: InputMaybe<Scalars['String']['input']>;
};

export type ApiAccessOrder = {
  direction: OrderDirection;
  field?: InputMaybe<ApiAccessOrderField>;
};

export enum ApiAccessOrderField {
  Created = 'CREATED'
}

/**
 * ApiAccessWhereInput is used for filtering ApiAccess objects.
 * Input was generated by ent.
 */
export type ApiAccessWhereInput = {
  /** access_token field predicates */
  accessToken?: InputMaybe<Scalars['String']['input']>;
  accessTokenContains?: InputMaybe<Scalars['String']['input']>;
  accessTokenContainsFold?: InputMaybe<Scalars['String']['input']>;
  accessTokenEqualFold?: InputMaybe<Scalars['String']['input']>;
  accessTokenGT?: InputMaybe<Scalars['String']['input']>;
  accessTokenGTE?: InputMaybe<Scalars['String']['input']>;
  accessTokenHasPrefix?: InputMaybe<Scalars['String']['input']>;
  accessTokenHasSuffix?: InputMaybe<Scalars['String']['input']>;
  accessTokenIn?: InputMaybe<Array<Scalars['String']['input']>>;
  accessTokenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  accessTokenLT?: InputMaybe<Scalars['String']['input']>;
  accessTokenLTE?: InputMaybe<Scalars['String']['input']>;
  accessTokenNEQ?: InputMaybe<Scalars['String']['input']>;
  accessTokenNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  accessTokenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ApiAccessWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** key field predicates */
  key?: InputMaybe<Scalars['String']['input']>;
  keyContains?: InputMaybe<Scalars['String']['input']>;
  keyContainsFold?: InputMaybe<Scalars['String']['input']>;
  keyEqualFold?: InputMaybe<Scalars['String']['input']>;
  keyGT?: InputMaybe<Scalars['String']['input']>;
  keyGTE?: InputMaybe<Scalars['String']['input']>;
  keyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  keyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  keyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  keyLT?: InputMaybe<Scalars['String']['input']>;
  keyLTE?: InputMaybe<Scalars['String']['input']>;
  keyNEQ?: InputMaybe<Scalars['String']['input']>;
  keyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ApiAccessWhereInput>;
  or?: InputMaybe<Array<ApiAccessWhereInput>>;
  /** password field predicates */
  password?: InputMaybe<Scalars['String']['input']>;
  passwordContains?: InputMaybe<Scalars['String']['input']>;
  passwordContainsFold?: InputMaybe<Scalars['String']['input']>;
  passwordEqualFold?: InputMaybe<Scalars['String']['input']>;
  passwordGT?: InputMaybe<Scalars['String']['input']>;
  passwordGTE?: InputMaybe<Scalars['String']['input']>;
  passwordHasPrefix?: InputMaybe<Scalars['String']['input']>;
  passwordHasSuffix?: InputMaybe<Scalars['String']['input']>;
  passwordIn?: InputMaybe<Array<Scalars['String']['input']>>;
  passwordLT?: InputMaybe<Scalars['String']['input']>;
  passwordLTE?: InputMaybe<Scalars['String']['input']>;
  passwordNEQ?: InputMaybe<Scalars['String']['input']>;
  passwordNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** refresh_token field predicates */
  refreshToken?: InputMaybe<Scalars['String']['input']>;
  refreshTokenContains?: InputMaybe<Scalars['String']['input']>;
  refreshTokenContainsFold?: InputMaybe<Scalars['String']['input']>;
  refreshTokenEqualFold?: InputMaybe<Scalars['String']['input']>;
  refreshTokenGT?: InputMaybe<Scalars['String']['input']>;
  refreshTokenGTE?: InputMaybe<Scalars['String']['input']>;
  refreshTokenHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refreshTokenHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refreshTokenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refreshTokenLT?: InputMaybe<Scalars['String']['input']>;
  refreshTokenLTE?: InputMaybe<Scalars['String']['input']>;
  refreshTokenNEQ?: InputMaybe<Scalars['String']['input']>;
  refreshTokenNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refreshTokenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** secret field predicates */
  secret?: InputMaybe<Scalars['String']['input']>;
  secretContains?: InputMaybe<Scalars['String']['input']>;
  secretContainsFold?: InputMaybe<Scalars['String']['input']>;
  secretEqualFold?: InputMaybe<Scalars['String']['input']>;
  secretGT?: InputMaybe<Scalars['String']['input']>;
  secretGTE?: InputMaybe<Scalars['String']['input']>;
  secretHasPrefix?: InputMaybe<Scalars['String']['input']>;
  secretHasSuffix?: InputMaybe<Scalars['String']['input']>;
  secretIn?: InputMaybe<Array<Scalars['String']['input']>>;
  secretLT?: InputMaybe<Scalars['String']['input']>;
  secretLTE?: InputMaybe<Scalars['String']['input']>;
  secretNEQ?: InputMaybe<Scalars['String']['input']>;
  secretNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>;
  urlContains?: InputMaybe<Scalars['String']['input']>;
  urlContainsFold?: InputMaybe<Scalars['String']['input']>;
  urlEqualFold?: InputMaybe<Scalars['String']['input']>;
  urlGT?: InputMaybe<Scalars['String']['input']>;
  urlGTE?: InputMaybe<Scalars['String']['input']>;
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>;
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>;
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>;
  urlLT?: InputMaybe<Scalars['String']['input']>;
  urlLTE?: InputMaybe<Scalars['String']['input']>;
  urlNEQ?: InputMaybe<Scalars['String']['input']>;
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** username field predicates */
  username?: InputMaybe<Scalars['String']['input']>;
  usernameContains?: InputMaybe<Scalars['String']['input']>;
  usernameContainsFold?: InputMaybe<Scalars['String']['input']>;
  usernameEqualFold?: InputMaybe<Scalars['String']['input']>;
  usernameGT?: InputMaybe<Scalars['String']['input']>;
  usernameGTE?: InputMaybe<Scalars['String']['input']>;
  usernameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  usernameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  usernameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  usernameLT?: InputMaybe<Scalars['String']['input']>;
  usernameLTE?: InputMaybe<Scalars['String']['input']>;
  usernameNEQ?: InputMaybe<Scalars['String']['input']>;
  usernameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ApiUser = Node & {
  __typename?: 'ApiUser';
  active: Scalars['Boolean']['output'];
  cbApiAuth?: Maybe<ApiUserCbApiAuth>;
  cbApiEndpoints?: Maybe<Scalars['Map']['output']>;
  cbApiPwd?: Maybe<Scalars['String']['output']>;
  cbApiToken?: Maybe<Scalars['String']['output']>;
  cbApiUrl?: Maybe<Scalars['String']['output']>;
  cbApiUser?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  username: Scalars['String']['output'];
};

export enum ApiUserCbApiAuth {
  Basic = 'BASIC',
  None = 'NONE',
  Oauth = 'OAUTH',
  Token = 'TOKEN'
}

export type ApiUserConnection = {
  __typename?: 'ApiUserConnection';
  edges?: Maybe<Array<ApiUserEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ApiUserEdge = {
  __typename?: 'ApiUserEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<ApiUser>;
};

export type ApiUserInfo = {
  __typename?: 'ApiUserInfo';
  id: Scalars['ID']['output'];
  username: Scalars['String']['output'];
};

export type ApiUserInput = {
  cbApiAuth?: InputMaybe<ApiUserCbApiAuth>;
  cbApiEndpoints?: InputMaybe<Scalars['Map']['input']>;
  cbApiPwd?: InputMaybe<Scalars['String']['input']>;
  cbApiToken?: InputMaybe<Scalars['String']['input']>;
  cbApiUrl?: InputMaybe<Scalars['String']['input']>;
  cbApiUser?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/**
 * ApiUserTokenWhereInput is used for filtering ApiUserToken objects.
 * Input was generated by ent.
 */
export type ApiUserTokenWhereInput = {
  and?: InputMaybe<Array<ApiUserTokenWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** api_user edge predicates */
  hasAPIUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasAPIUserWith?: InputMaybe<Array<ApiUserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ApiUserTokenWhereInput>;
  or?: InputMaybe<Array<ApiUserTokenWhereInput>>;
  /** refresh_token_id field predicates */
  refreshTokenID?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDContains?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDGT?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDGTE?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refreshTokenIDLT?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDLTE?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDNEQ?: InputMaybe<Scalars['String']['input']>;
  refreshTokenIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** token_id field predicates */
  tokenID?: InputMaybe<Scalars['String']['input']>;
  tokenIDContains?: InputMaybe<Scalars['String']['input']>;
  tokenIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  tokenIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  tokenIDGT?: InputMaybe<Scalars['String']['input']>;
  tokenIDGTE?: InputMaybe<Scalars['String']['input']>;
  tokenIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tokenIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tokenIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tokenIDLT?: InputMaybe<Scalars['String']['input']>;
  tokenIDLTE?: InputMaybe<Scalars['String']['input']>;
  tokenIDNEQ?: InputMaybe<Scalars['String']['input']>;
  tokenIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** token_type field predicates */
  tokenType?: InputMaybe<Scalars['String']['input']>;
  tokenTypeContains?: InputMaybe<Scalars['String']['input']>;
  tokenTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  tokenTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  tokenTypeGT?: InputMaybe<Scalars['String']['input']>;
  tokenTypeGTE?: InputMaybe<Scalars['String']['input']>;
  tokenTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tokenTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tokenTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tokenTypeLT?: InputMaybe<Scalars['String']['input']>;
  tokenTypeLTE?: InputMaybe<Scalars['String']['input']>;
  tokenTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  tokenTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

/**
 * ApiUserWhereInput is used for filtering ApiUser objects.
 * Input was generated by ent.
 */
export type ApiUserWhereInput = {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<ApiUserWhereInput>>;
  /** cb_api_auth field predicates */
  cbAPIAuth?: InputMaybe<ApiUserCbApiAuth>;
  cbAPIAuthIn?: InputMaybe<Array<ApiUserCbApiAuth>>;
  cbAPIAuthIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cbAPIAuthNEQ?: InputMaybe<ApiUserCbApiAuth>;
  cbAPIAuthNotIn?: InputMaybe<Array<ApiUserCbApiAuth>>;
  cbAPIAuthNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cb_api_pwd field predicates */
  cbAPIPwd?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdContains?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdContainsFold?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdEqualFold?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdGT?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdGTE?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPIPwdIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cbAPIPwdLT?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdLTE?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdNEQ?: InputMaybe<Scalars['String']['input']>;
  cbAPIPwdNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPIPwdNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cb_api_token field predicates */
  cbAPIToken?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenContains?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenContainsFold?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenEqualFold?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenGT?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenGTE?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPITokenIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cbAPITokenLT?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenLTE?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenNEQ?: InputMaybe<Scalars['String']['input']>;
  cbAPITokenNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPITokenNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cb_api_url field predicates */
  cbAPIURL?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLContains?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLGT?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLGTE?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPIURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cbAPIURLLT?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLLTE?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLNEQ?: InputMaybe<Scalars['String']['input']>;
  cbAPIURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPIURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** cb_api_user field predicates */
  cbAPIUser?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserContains?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserContainsFold?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserEqualFold?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserGT?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserGTE?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPIUserIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cbAPIUserLT?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserLTE?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserNEQ?: InputMaybe<Scalars['String']['input']>;
  cbAPIUserNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cbAPIUserNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** audit_logs edge predicates */
  hasAuditLogs?: InputMaybe<Scalars['Boolean']['input']>;
  hasAuditLogsWith?: InputMaybe<Array<AuditLogWhereInput>>;
  /** created_estimates edge predicates */
  hasCreatedEstimates?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedEstimatesWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** created_jobs edge predicates */
  hasCreatedJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedJobsWith?: InputMaybe<Array<JobWhereInput>>;
  /** created_partners edge predicates */
  hasCreatedPartners?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedPartnersWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** estimate_activities edge predicates */
  hasEstimateActivities?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimateActivitiesWith?: InputMaybe<Array<EstimateActivityWhereInput>>;
  /** job_activities edge predicates */
  hasJobActivities?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobActivitiesWith?: InputMaybe<Array<JobActivityWhereInput>>;
  /** job_progress_history edge predicates */
  hasJobProgressHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobProgressHistoryWith?: InputMaybe<Array<JobProgressHistoryWhereInput>>;
  /** notifications edge predicates */
  hasNotifications?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotificationsWith?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** survey_progress edge predicates */
  hasSurveyProgress?: InputMaybe<Scalars['Boolean']['input']>;
  hasSurveyProgressWith?: InputMaybe<Array<SurveyProgressWhereInput>>;
  /** tokens edge predicates */
  hasTokens?: InputMaybe<Scalars['Boolean']['input']>;
  hasTokensWith?: InputMaybe<Array<ApiUserTokenWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ApiUserWhereInput>;
  or?: InputMaybe<Array<ApiUserWhereInput>>;
  /** pwd_hash field predicates */
  pwdHash?: InputMaybe<Scalars['String']['input']>;
  pwdHashContains?: InputMaybe<Scalars['String']['input']>;
  pwdHashContainsFold?: InputMaybe<Scalars['String']['input']>;
  pwdHashEqualFold?: InputMaybe<Scalars['String']['input']>;
  pwdHashGT?: InputMaybe<Scalars['String']['input']>;
  pwdHashGTE?: InputMaybe<Scalars['String']['input']>;
  pwdHashHasPrefix?: InputMaybe<Scalars['String']['input']>;
  pwdHashHasSuffix?: InputMaybe<Scalars['String']['input']>;
  pwdHashIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pwdHashLT?: InputMaybe<Scalars['String']['input']>;
  pwdHashLTE?: InputMaybe<Scalars['String']['input']>;
  pwdHashNEQ?: InputMaybe<Scalars['String']['input']>;
  pwdHashNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** username field predicates */
  username?: InputMaybe<Scalars['String']['input']>;
  usernameContains?: InputMaybe<Scalars['String']['input']>;
  usernameContainsFold?: InputMaybe<Scalars['String']['input']>;
  usernameEqualFold?: InputMaybe<Scalars['String']['input']>;
  usernameGT?: InputMaybe<Scalars['String']['input']>;
  usernameGTE?: InputMaybe<Scalars['String']['input']>;
  usernameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  usernameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  usernameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  usernameLT?: InputMaybe<Scalars['String']['input']>;
  usernameLTE?: InputMaybe<Scalars['String']['input']>;
  usernameNEQ?: InputMaybe<Scalars['String']['input']>;
  usernameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export enum Approval {
  Approved = 'APPROVED',
  Denied = 'DENIED',
  Pending = 'PENDING'
}

export type ApproveEstimateInput = {
  agree?: InputMaybe<Scalars['Boolean']['input']>;
  epc?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
  ownerEmail?: InputMaybe<Scalars['String']['input']>;
  ownerPhone?: InputMaybe<Scalars['String']['input']>;
};

export type ApproveJobInput = {
  agree?: InputMaybe<Scalars['Boolean']['input']>;
  epc?: InputMaybe<Scalars['ID']['input']>;
  ownerEmail?: InputMaybe<Scalars['String']['input']>;
  ownerPhone?: InputMaybe<Scalars['String']['input']>;
};

export type AuditLog = Node & {
  __typename?: 'AuditLog';
  action: Scalars['String']['output'];
  apiUser?: Maybe<ApiUser>;
  createdAt: Scalars['Time']['output'];
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  ip: Scalars['String']['output'];
  user?: Maybe<User>;
};

export type AuditLogConnection = {
  __typename?: 'AuditLogConnection';
  edges?: Maybe<Array<AuditLogEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type AuditLogEdge = {
  __typename?: 'AuditLogEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<AuditLog>;
};

export type AuditLogOrder = {
  direction: OrderDirection;
  field?: InputMaybe<AuditLogOrderField>;
};

export enum AuditLogOrderField {
  Created = 'CREATED'
}

/**
 * AuditLogWhereInput is used for filtering AuditLog objects.
 * Input was generated by ent.
 */
export type AuditLogWhereInput = {
  /** action field predicates */
  action?: InputMaybe<Scalars['String']['input']>;
  actionContains?: InputMaybe<Scalars['String']['input']>;
  actionContainsFold?: InputMaybe<Scalars['String']['input']>;
  actionEqualFold?: InputMaybe<Scalars['String']['input']>;
  actionGT?: InputMaybe<Scalars['String']['input']>;
  actionGTE?: InputMaybe<Scalars['String']['input']>;
  actionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  actionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  actionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  actionLT?: InputMaybe<Scalars['String']['input']>;
  actionLTE?: InputMaybe<Scalars['String']['input']>;
  actionNEQ?: InputMaybe<Scalars['String']['input']>;
  actionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  and?: InputMaybe<Array<AuditLogWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** api_user edge predicates */
  hasAPIUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasAPIUserWith?: InputMaybe<Array<ApiUserWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** ip field predicates */
  ip?: InputMaybe<Scalars['String']['input']>;
  ipContains?: InputMaybe<Scalars['String']['input']>;
  ipContainsFold?: InputMaybe<Scalars['String']['input']>;
  ipEqualFold?: InputMaybe<Scalars['String']['input']>;
  ipGT?: InputMaybe<Scalars['String']['input']>;
  ipGTE?: InputMaybe<Scalars['String']['input']>;
  ipHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ipHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ipIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ipIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ipLT?: InputMaybe<Scalars['String']['input']>;
  ipLTE?: InputMaybe<Scalars['String']['input']>;
  ipNEQ?: InputMaybe<Scalars['String']['input']>;
  ipNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ipNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<AuditLogWhereInput>;
  or?: InputMaybe<Array<AuditLogWhereInput>>;
};

export enum AuthProvider {
  Fb = 'FB',
  Google = 'GOOGLE',
  Roofix = 'Roofix'
}

export enum Channel {
  Estimate = 'ESTIMATE',
  Job = 'JOB',
  JobChat = 'JOB_CHAT',
  JobNote = 'JOB_NOTE',
  Partner = 'PARTNER',
  PartnerUser = 'PARTNER_USER',
  Ping = 'PING',
  Task = 'TASK',
  TrainingVideo = 'TRAINING_VIDEO'
}

/**
 * ChannelMessageReadWhereInput is used for filtering ChannelMessageRead objects.
 * Input was generated by ent.
 */
export type ChannelMessageReadWhereInput = {
  and?: InputMaybe<Array<ChannelMessageReadWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** channel_message edge predicates */
  hasChannelMessage?: InputMaybe<Scalars['Boolean']['input']>;
  hasChannelMessageWith?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ChannelMessageReadWhereInput>;
  or?: InputMaybe<Array<ChannelMessageReadWhereInput>>;
  /** read field predicates */
  read?: InputMaybe<Scalars['Boolean']['input']>;
  readNEQ?: InputMaybe<Scalars['Boolean']['input']>;
};

/**
 * ChannelMessageWhereInput is used for filtering ChannelMessage objects.
 * Input was generated by ent.
 */
export type ChannelMessageWhereInput = {
  and?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** from_name field predicates */
  fromName?: InputMaybe<Scalars['String']['input']>;
  fromNameContains?: InputMaybe<Scalars['String']['input']>;
  fromNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  fromNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  fromNameGT?: InputMaybe<Scalars['String']['input']>;
  fromNameGTE?: InputMaybe<Scalars['String']['input']>;
  fromNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  fromNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  fromNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  fromNameLT?: InputMaybe<Scalars['String']['input']>;
  fromNameLTE?: InputMaybe<Scalars['String']['input']>;
  fromNameNEQ?: InputMaybe<Scalars['String']['input']>;
  fromNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** channel edge predicates */
  hasChannel?: InputMaybe<Scalars['Boolean']['input']>;
  hasChannelWith?: InputMaybe<Array<ChannelWhereInput>>;
  /** from edge predicates */
  hasFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** from_api_user edge predicates */
  hasFromAPIUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasFromAPIUserWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasFromWith?: InputMaybe<Array<UserWhereInput>>;
  /** reads edge predicates */
  hasReads?: InputMaybe<Scalars['Boolean']['input']>;
  hasReadsWith?: InputMaybe<Array<ChannelMessageReadWhereInput>>;
  /** to edge predicates */
  hasTo?: InputMaybe<Scalars['Boolean']['input']>;
  hasToWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** message field predicates */
  message?: InputMaybe<Scalars['String']['input']>;
  messageContains?: InputMaybe<Scalars['String']['input']>;
  messageContainsFold?: InputMaybe<Scalars['String']['input']>;
  messageEqualFold?: InputMaybe<Scalars['String']['input']>;
  messageGT?: InputMaybe<Scalars['String']['input']>;
  messageGTE?: InputMaybe<Scalars['String']['input']>;
  messageHasPrefix?: InputMaybe<Scalars['String']['input']>;
  messageHasSuffix?: InputMaybe<Scalars['String']['input']>;
  messageIn?: InputMaybe<Array<Scalars['String']['input']>>;
  messageLT?: InputMaybe<Scalars['String']['input']>;
  messageLTE?: InputMaybe<Scalars['String']['input']>;
  messageNEQ?: InputMaybe<Scalars['String']['input']>;
  messageNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ChannelMessageWhereInput>;
  or?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** private field predicates */
  private?: InputMaybe<Scalars['Boolean']['input']>;
  privateNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** to_name field predicates */
  toName?: InputMaybe<Scalars['String']['input']>;
  toNameContains?: InputMaybe<Scalars['String']['input']>;
  toNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  toNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  toNameGT?: InputMaybe<Scalars['String']['input']>;
  toNameGTE?: InputMaybe<Scalars['String']['input']>;
  toNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  toNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  toNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  toNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  toNameLT?: InputMaybe<Scalars['String']['input']>;
  toNameLTE?: InputMaybe<Scalars['String']['input']>;
  toNameNEQ?: InputMaybe<Scalars['String']['input']>;
  toNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  toNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** unread field predicates */
  unread?: InputMaybe<Scalars['Boolean']['input']>;
  unreadIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  unreadNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  unreadNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * ChannelSubWhereInput is used for filtering ChannelSub objects.
 * Input was generated by ent.
 */
export type ChannelSubWhereInput = {
  and?: InputMaybe<Array<ChannelSubWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** channel edge predicates */
  hasChannel?: InputMaybe<Scalars['Boolean']['input']>;
  hasChannelWith?: InputMaybe<Array<ChannelWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ChannelSubWhereInput>;
  or?: InputMaybe<Array<ChannelSubWhereInput>>;
  /** role field predicates */
  role?: InputMaybe<Role>;
  roleIn?: InputMaybe<Array<Role>>;
  roleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  roleNEQ?: InputMaybe<Role>;
  roleNotIn?: InputMaybe<Array<Role>>;
  roleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * ChannelWhereInput is used for filtering Channel objects.
 * Input was generated by ent.
 */
export type ChannelWhereInput = {
  and?: InputMaybe<Array<ChannelWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** messages edge predicates */
  hasMessages?: InputMaybe<Scalars['Boolean']['input']>;
  hasMessagesWith?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** subscriptions edge predicates */
  hasSubscriptions?: InputMaybe<Scalars['Boolean']['input']>;
  hasSubscriptionsWith?: InputMaybe<Array<ChannelSubWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Channel>;
  nameIn?: InputMaybe<Array<Channel>>;
  nameNEQ?: InputMaybe<Channel>;
  nameNotIn?: InputMaybe<Array<Channel>>;
  not?: InputMaybe<ChannelWhereInput>;
  or?: InputMaybe<Array<ChannelWhereInput>>;
  /** ref_id field predicates */
  refID?: InputMaybe<Scalars['String']['input']>;
  refIDContains?: InputMaybe<Scalars['String']['input']>;
  refIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  refIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  refIDGT?: InputMaybe<Scalars['String']['input']>;
  refIDGTE?: InputMaybe<Scalars['String']['input']>;
  refIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  refIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  refIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  refIDLT?: InputMaybe<Scalars['String']['input']>;
  refIDLTE?: InputMaybe<Scalars['String']['input']>;
  refIDNEQ?: InputMaybe<Scalars['String']['input']>;
  refIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  refIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** topic field predicates */
  topic?: InputMaybe<Topic>;
  topicIn?: InputMaybe<Array<Topic>>;
  topicNEQ?: InputMaybe<Topic>;
  topicNotIn?: InputMaybe<Array<Topic>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type City = {
  __typename?: 'City';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export enum CompanyDocName {
  GeneralLiability = 'GENERAL_LIABILITY',
  W9 = 'W9',
  WorkersCompensation = 'WORKERS_COMPENSATION'
}

export type ContactConnection = {
  __typename?: 'ContactConnection';
  edges?: Maybe<Array<PartnerContactEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

/**
 * ContactUsWhereInput is used for filtering ContactUs objects.
 * Input was generated by ent.
 */
export type ContactUsWhereInput = {
  and?: InputMaybe<Array<ContactUsWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<ContactUsWhereInput>;
  or?: InputMaybe<Array<ContactUsWhereInput>>;
  /** reason field predicates */
  reason?: InputMaybe<Scalars['String']['input']>;
  reasonContains?: InputMaybe<Scalars['String']['input']>;
  reasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  reasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  reasonGT?: InputMaybe<Scalars['String']['input']>;
  reasonGTE?: InputMaybe<Scalars['String']['input']>;
  reasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  reasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  reasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  reasonLT?: InputMaybe<Scalars['String']['input']>;
  reasonLTE?: InputMaybe<Scalars['String']['input']>;
  reasonNEQ?: InputMaybe<Scalars['String']['input']>;
  reasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type Counts = {
  __typename?: 'Counts';
  assignedJobCount: Scalars['Int']['output'];
  estimateCount: Scalars['Int']['output'];
  paymentsApproved: Scalars['Int']['output'];
  paymentsCompleted: Scalars['Int']['output'];
  paymentsPending: Scalars['Int']['output'];
  unassignedJobCount: Scalars['Int']['output'];
};

export type CourseVideos = {
  __typename?: 'CourseVideos';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  videos: TrainingVideoConnection;
};

export type CreateEstimateInput = {
  city: Scalars['String']['input'];
  companyName: Scalars['String']['input'];
  currentMaterial: Scalars['String']['input'];
  currentMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  layer2Material?: InputMaybe<Scalars['String']['input']>;
  layer3Material?: InputMaybe<Scalars['String']['input']>;
  layers: Scalars['Int']['input'];
  longitude?: InputMaybe<Scalars['Float']['input']>;
  lowSlope: Scalars['Boolean']['input'];
  measurementType: Scalars['String']['input'];
  newRoofingMaterial?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  ownerFirstName: Scalars['String']['input'];
  ownerLastName: Scalars['String']['input'];
  partial?: InputMaybe<Scalars['Int']['input']>;
  redeck: Scalars['Boolean']['input'];
  repEmail: Scalars['String']['input'];
  repFirstName: Scalars['String']['input'];
  repLastName: Scalars['String']['input'];
  repMobile: Scalars['String']['input'];
  state: Scalars['String']['input'];
  streetName: Scalars['String']['input'];
  streetNumber: Scalars['String']['input'];
  zip: Scalars['String']['input'];
};

/**
 * CreatePartnerServiceCityInput is used for create PartnerServiceCity object.
 * Input was generated by ent.
 */
export type CreatePartnerServiceCityInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  licenseNo?: InputMaybe<Scalars['String']['input']>;
  naicsCode: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  partnerID: Scalars['ID']['input'];
  postalID: Scalars['String']['input'];
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
};

/**
 * CreatePartnerServiceStateInput is used for create PartnerServiceState object.
 * Input was generated by ent.
 */
export type CreatePartnerServiceStateInput = {
  country: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDate?: InputMaybe<Scalars['Time']['input']>;
  licenseNo?: InputMaybe<Scalars['String']['input']>;
  partnerID: Scalars['ID']['input'];
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  state: Scalars['String']['input'];
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
};

export type CreateUserInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  role: Role;
};

export enum CurrentMaterial {
  ArchAsphaltShingles = 'ArchAsphaltShingles',
  LowSlopeOnly = 'LowSlopeOnly',
  MetalRPanelExpFastener = 'MetalRPanelExpFastener',
  MetalShakes = 'MetalShakes',
  MetalTitle = 'MetalTitle',
  Slate = 'Slate',
  StandingSeamMetal = 'StandingSeamMetal',
  ThreeTabAsphaltShingles = 'ThreeTabAsphaltShingles',
  TileClay = 'TileClay',
  TileConcrete = 'TileConcrete',
  WoodShakes = 'WoodShakes'
}

export enum DateRange {
  LastMonth = 'LAST_MONTH',
  LastWeek = 'LAST_WEEK',
  LastYear = 'LAST_YEAR',
  ThisMonth = 'THIS_MONTH',
  ThisWeek = 'THIS_WEEK',
  ThisYear = 'THIS_YEAR',
  Today = 'TODAY',
  Yesterday = 'YESTERDAY'
}

export type DenyEstimateInput = {
  id: Scalars['ID']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
};

export type Document = {
  __typename?: 'Document';
  contentSize: Scalars['Int64']['output'];
  contentType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['Time']['output']>;
  filename: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  key: Scalars['String']['output'];
  meta?: Maybe<Scalars['Any']['output']>;
  name: Scalars['String']['output'];
  publicUrl?: Maybe<Scalars['String']['output']>;
  ready: Scalars['Boolean']['output'];
  section: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['Time']['output']>;
  uploadUrl?: Maybe<Scalars['String']['output']>;
};

export enum DocumentFolder {
  JobDocs = 'JobDocs',
  PartnerDocs = 'PartnerDocs',
  PublicData = 'PublicData',
  Survey = 'Survey',
  TrainingVideos = 'TrainingVideos'
}

export type DocumentInfo = {
  __typename?: 'DocumentInfo';
  contentSize?: Maybe<Scalars['Int64']['output']>;
  contentType?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['Time']['output']>;
  id: Scalars['ID']['output'];
  key: Scalars['String']['output'];
  name: Scalars['String']['output'];
  ready: Scalars['Boolean']['output'];
  url: Scalars['String']['output'];
};

export enum DocumentSection {
  Avatar = 'Avatar',
  Docs = 'Docs',
  Image = 'Image',
  InspectionDocs = 'InspectionDocs',
  Logo = 'Logo',
  PricingPdf = 'PricingPDF',
  ProductionPics = 'ProductionPics',
  Proof = 'Proof',
  Proposal = 'Proposal',
  Video = 'Video'
}

/**
 * DocumentWhereInput is used for filtering Document objects.
 * Input was generated by ent.
 */
export type DocumentWhereInput = {
  and?: InputMaybe<Array<DocumentWhereInput>>;
  /** bucket field predicates */
  bucket?: InputMaybe<Scalars['String']['input']>;
  bucketContains?: InputMaybe<Scalars['String']['input']>;
  bucketContainsFold?: InputMaybe<Scalars['String']['input']>;
  bucketEqualFold?: InputMaybe<Scalars['String']['input']>;
  bucketGT?: InputMaybe<Scalars['String']['input']>;
  bucketGTE?: InputMaybe<Scalars['String']['input']>;
  bucketHasPrefix?: InputMaybe<Scalars['String']['input']>;
  bucketHasSuffix?: InputMaybe<Scalars['String']['input']>;
  bucketIn?: InputMaybe<Array<Scalars['String']['input']>>;
  bucketLT?: InputMaybe<Scalars['String']['input']>;
  bucketLTE?: InputMaybe<Scalars['String']['input']>;
  bucketNEQ?: InputMaybe<Scalars['String']['input']>;
  bucketNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** content_size field predicates */
  contentSize?: InputMaybe<Scalars['Int']['input']>;
  contentSizeGT?: InputMaybe<Scalars['Int']['input']>;
  contentSizeGTE?: InputMaybe<Scalars['Int']['input']>;
  contentSizeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  contentSizeLT?: InputMaybe<Scalars['Int']['input']>;
  contentSizeLTE?: InputMaybe<Scalars['Int']['input']>;
  contentSizeNEQ?: InputMaybe<Scalars['Int']['input']>;
  contentSizeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** content_type field predicates */
  contentType?: InputMaybe<Scalars['String']['input']>;
  contentTypeContains?: InputMaybe<Scalars['String']['input']>;
  contentTypeContainsFold?: InputMaybe<Scalars['String']['input']>;
  contentTypeEqualFold?: InputMaybe<Scalars['String']['input']>;
  contentTypeGT?: InputMaybe<Scalars['String']['input']>;
  contentTypeGTE?: InputMaybe<Scalars['String']['input']>;
  contentTypeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  contentTypeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  contentTypeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  contentTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  contentTypeLT?: InputMaybe<Scalars['String']['input']>;
  contentTypeLTE?: InputMaybe<Scalars['String']['input']>;
  contentTypeNEQ?: InputMaybe<Scalars['String']['input']>;
  contentTypeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  contentTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator_id field predicates */
  creatorID?: InputMaybe<Scalars['String']['input']>;
  creatorIDContains?: InputMaybe<Scalars['String']['input']>;
  creatorIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  creatorIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  creatorIDGT?: InputMaybe<Scalars['String']['input']>;
  creatorIDGTE?: InputMaybe<Scalars['String']['input']>;
  creatorIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  creatorIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  creatorIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  creatorIDLT?: InputMaybe<Scalars['String']['input']>;
  creatorIDLTE?: InputMaybe<Scalars['String']['input']>;
  creatorIDNEQ?: InputMaybe<Scalars['String']['input']>;
  creatorIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** dir field predicates */
  dir?: InputMaybe<Scalars['String']['input']>;
  dirContains?: InputMaybe<Scalars['String']['input']>;
  dirContainsFold?: InputMaybe<Scalars['String']['input']>;
  dirEqualFold?: InputMaybe<Scalars['String']['input']>;
  dirGT?: InputMaybe<Scalars['String']['input']>;
  dirGTE?: InputMaybe<Scalars['String']['input']>;
  dirHasPrefix?: InputMaybe<Scalars['String']['input']>;
  dirHasSuffix?: InputMaybe<Scalars['String']['input']>;
  dirIn?: InputMaybe<Array<Scalars['String']['input']>>;
  dirIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  dirLT?: InputMaybe<Scalars['String']['input']>;
  dirLTE?: InputMaybe<Scalars['String']['input']>;
  dirNEQ?: InputMaybe<Scalars['String']['input']>;
  dirNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  dirNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** filename field predicates */
  filename?: InputMaybe<Scalars['String']['input']>;
  filenameContains?: InputMaybe<Scalars['String']['input']>;
  filenameContainsFold?: InputMaybe<Scalars['String']['input']>;
  filenameEqualFold?: InputMaybe<Scalars['String']['input']>;
  filenameGT?: InputMaybe<Scalars['String']['input']>;
  filenameGTE?: InputMaybe<Scalars['String']['input']>;
  filenameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  filenameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  filenameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  filenameLT?: InputMaybe<Scalars['String']['input']>;
  filenameLTE?: InputMaybe<Scalars['String']['input']>;
  filenameNEQ?: InputMaybe<Scalars['String']['input']>;
  filenameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** folder field predicates */
  folder?: InputMaybe<DocumentFolder>;
  folderIn?: InputMaybe<Array<DocumentFolder>>;
  folderNEQ?: InputMaybe<DocumentFolder>;
  folderNotIn?: InputMaybe<Array<DocumentFolder>>;
  /** estimate_pdf edge predicates */
  hasEstimatePdf?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimatePdfWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** installation_job_item_image edge predicates */
  hasInstallationJobItemImage?: InputMaybe<Scalars['Boolean']['input']>;
  hasInstallationJobItemImageWith?: InputMaybe<Array<InstallationJobItemWhereInput>>;
  /** job_estimate_pdf edge predicates */
  hasJobEstimatePdf?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobEstimatePdfWith?: InputMaybe<Array<JobWhereInput>>;
  /** products_image edge predicates */
  hasProductsImage?: InputMaybe<Scalars['Boolean']['input']>;
  hasProductsImageWith?: InputMaybe<Array<ProductWhereInput>>;
  /** training_video edge predicates */
  hasTrainingVideo?: InputMaybe<Scalars['Boolean']['input']>;
  /** training_video_poster edge predicates */
  hasTrainingVideoPoster?: InputMaybe<Scalars['Boolean']['input']>;
  hasTrainingVideoPosterWith?: InputMaybe<Array<TrainingVideoWhereInput>>;
  hasTrainingVideoWith?: InputMaybe<Array<TrainingVideoWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** key field predicates */
  key?: InputMaybe<Scalars['String']['input']>;
  keyContains?: InputMaybe<Scalars['String']['input']>;
  keyContainsFold?: InputMaybe<Scalars['String']['input']>;
  keyEqualFold?: InputMaybe<Scalars['String']['input']>;
  keyGT?: InputMaybe<Scalars['String']['input']>;
  keyGTE?: InputMaybe<Scalars['String']['input']>;
  keyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  keyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  keyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  keyLT?: InputMaybe<Scalars['String']['input']>;
  keyLTE?: InputMaybe<Scalars['String']['input']>;
  keyNEQ?: InputMaybe<Scalars['String']['input']>;
  keyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<DocumentWhereInput>;
  or?: InputMaybe<Array<DocumentWhereInput>>;
  /** ready field predicates */
  ready?: InputMaybe<Scalars['Boolean']['input']>;
  readyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** section field predicates */
  section?: InputMaybe<DocumentSection>;
  sectionIn?: InputMaybe<Array<DocumentSection>>;
  sectionNEQ?: InputMaybe<DocumentSection>;
  sectionNotIn?: InputMaybe<Array<DocumentSection>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** updater_id field predicates */
  updaterID?: InputMaybe<Scalars['String']['input']>;
  updaterIDContains?: InputMaybe<Scalars['String']['input']>;
  updaterIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  updaterIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  updaterIDGT?: InputMaybe<Scalars['String']['input']>;
  updaterIDGTE?: InputMaybe<Scalars['String']['input']>;
  updaterIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  updaterIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  updaterIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updaterIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  updaterIDLT?: InputMaybe<Scalars['String']['input']>;
  updaterIDLTE?: InputMaybe<Scalars['String']['input']>;
  updaterIDNEQ?: InputMaybe<Scalars['String']['input']>;
  updaterIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  updaterIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Entity = {
  __typename?: 'Entity';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type Estimate = {
  __typename?: 'Estimate';
  bounds?: Maybe<Array<Point>>;
  companyName: Scalars['String']['output'];
  createdAt: Scalars['Time']['output'];
  creatorName: Scalars['String']['output'];
  currentMaterial: Scalars['String']['output'];
  currentMaterialLowSlope?: Maybe<Scalars['String']['output']>;
  estimatorRawResponse?: Maybe<Scalars['Map']['output']>;
  failureReason?: Maybe<Scalars['String']['output']>;
  homeOwner: HomeOwner;
  id: Scalars['ID']['output'];
  layer2Material?: Maybe<Scalars['String']['output']>;
  layer3Material?: Maybe<Scalars['String']['output']>;
  layers: Scalars['Int']['output'];
  lowSlope: Scalars['Boolean']['output'];
  measurementType: Measure;
  newRoofingMaterial?: Maybe<Scalars['String']['output']>;
  newRoofingMaterialLowSlope?: Maybe<Scalars['String']['output']>;
  partial?: Maybe<Scalars['Int']['output']>;
  pdf?: Maybe<DocumentInfo>;
  price?: Maybe<Scalars['Float']['output']>;
  priceSummary?: Maybe<Scalars['String']['output']>;
  primaryPitch?: Maybe<Scalars['Float']['output']>;
  redeck: Scalars['Boolean']['output'];
  salesRep?: Maybe<UserInfo>;
  status: EstimateStatus;
  totalSquares?: Maybe<Scalars['Float']['output']>;
};

/**
 * EstimateActivityWhereInput is used for filtering EstimateActivity objects.
 * Input was generated by ent.
 */
export type EstimateActivityWhereInput = {
  and?: InputMaybe<Array<EstimateActivityWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api edge predicates */
  hasCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** estimate edge predicates */
  hasEstimate?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimateWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<EstimateActivityWhereInput>;
  or?: InputMaybe<Array<EstimateActivityWhereInput>>;
};

export type EstimateConnection = {
  __typename?: 'EstimateConnection';
  edges?: Maybe<Array<EstimateEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type EstimateEdge = {
  __typename?: 'EstimateEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Estimate>;
};

export enum EstimateProvider {
  EagleView = 'EagleView',
  NearMap = 'NearMap',
  RoofixApi = 'RoofixAPI'
}

export type EstimateRequest = {
  city: Scalars['String']['input'];
  currentMaterial: CurrentMaterial;
  includeDetachedStructure?: InputMaybe<Scalars['Boolean']['input']>;
  latitude: Scalars['Float']['input'];
  layers: Scalars['Int']['input'];
  longitude: Scalars['Float']['input'];
  newRoofingMaterial: NewMaterial;
  ownerEmail: Scalars['String']['input'];
  ownerName: Scalars['String']['input'];
  ownerPhone: Scalars['String']['input'];
  partial?: InputMaybe<Scalars['Int']['input']>;
  redeck: Scalars['Boolean']['input'];
  state: Scalars['String']['input'];
  streetName: Scalars['String']['input'];
  streetNumber: Scalars['String']['input'];
  zip: Scalars['String']['input'];
};

export type EstimateResponse = {
  __typename?: 'EstimateResponse';
  createdAt: Scalars['Time']['output'];
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  need: Scalars['Boolean']['output'];
  raw?: Maybe<Scalars['Map']['output']>;
};

/**
 * EstimateResponseWhereInput is used for filtering EstimateResponse objects.
 * Input was generated by ent.
 */
export type EstimateResponseWhereInput = {
  and?: InputMaybe<Array<EstimateResponseWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** estimate edge predicates */
  hasEstimate?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimateWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** need field predicates */
  need?: InputMaybe<Scalars['Boolean']['input']>;
  needIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  needNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  needNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<EstimateResponseWhereInput>;
  or?: InputMaybe<Array<EstimateResponseWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum EstimateStatus {
  Approved = 'Approved',
  Denied = 'Denied',
  Failed = 'Failed',
  New = 'New',
  OnHold = 'OnHold',
  Pending = 'Pending'
}

/**
 * EstimateWhereInput is used for filtering Estimate objects.
 * Input was generated by ent.
 */
export type EstimateWhereInput = {
  and?: InputMaybe<Array<EstimateWhereInput>>;
  /** company_ref_id field predicates */
  companyRefID?: InputMaybe<Scalars['String']['input']>;
  companyRefIDContains?: InputMaybe<Scalars['String']['input']>;
  companyRefIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  companyRefIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  companyRefIDGT?: InputMaybe<Scalars['String']['input']>;
  companyRefIDGTE?: InputMaybe<Scalars['String']['input']>;
  companyRefIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  companyRefIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  companyRefIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyRefIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  companyRefIDLT?: InputMaybe<Scalars['String']['input']>;
  companyRefIDLTE?: InputMaybe<Scalars['String']['input']>;
  companyRefIDNEQ?: InputMaybe<Scalars['String']['input']>;
  companyRefIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyRefIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** company_ref_name field predicates */
  companyRefName?: InputMaybe<Scalars['String']['input']>;
  companyRefNameContains?: InputMaybe<Scalars['String']['input']>;
  companyRefNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  companyRefNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  companyRefNameGT?: InputMaybe<Scalars['String']['input']>;
  companyRefNameGTE?: InputMaybe<Scalars['String']['input']>;
  companyRefNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  companyRefNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  companyRefNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyRefNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  companyRefNameLT?: InputMaybe<Scalars['String']['input']>;
  companyRefNameLTE?: InputMaybe<Scalars['String']['input']>;
  companyRefNameNEQ?: InputMaybe<Scalars['String']['input']>;
  companyRefNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyRefNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** current_material field predicates */
  currentMaterial?: InputMaybe<Scalars['String']['input']>;
  currentMaterialContains?: InputMaybe<Scalars['String']['input']>;
  currentMaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialGT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialGTE?: InputMaybe<Scalars['String']['input']>;
  currentMaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  currentMaterialLT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLTE?: InputMaybe<Scalars['String']['input']>;
  /** current_material_low_slope field predicates */
  currentMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeContains?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeGT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeGTE?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialLowSlopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  currentMaterialLowSlopeLT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeLTE?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeNEQ?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialLowSlopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  currentMaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  currentMaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** estimator field predicates */
  estimator?: InputMaybe<Scalars['String']['input']>;
  estimatorContains?: InputMaybe<Scalars['String']['input']>;
  estimatorContainsFold?: InputMaybe<Scalars['String']['input']>;
  estimatorEqualFold?: InputMaybe<Scalars['String']['input']>;
  estimatorGT?: InputMaybe<Scalars['String']['input']>;
  estimatorGTE?: InputMaybe<Scalars['String']['input']>;
  estimatorHasPrefix?: InputMaybe<Scalars['String']['input']>;
  estimatorHasSuffix?: InputMaybe<Scalars['String']['input']>;
  estimatorIn?: InputMaybe<Array<Scalars['String']['input']>>;
  estimatorIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  estimatorLT?: InputMaybe<Scalars['String']['input']>;
  estimatorLTE?: InputMaybe<Scalars['String']['input']>;
  estimatorNEQ?: InputMaybe<Scalars['String']['input']>;
  estimatorNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  estimatorNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** estimator_order_id field predicates */
  estimatorOrderID?: InputMaybe<Scalars['Int']['input']>;
  estimatorOrderIDGT?: InputMaybe<Scalars['Int']['input']>;
  estimatorOrderIDGTE?: InputMaybe<Scalars['Int']['input']>;
  estimatorOrderIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  estimatorOrderIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  estimatorOrderIDLT?: InputMaybe<Scalars['Int']['input']>;
  estimatorOrderIDLTE?: InputMaybe<Scalars['Int']['input']>;
  estimatorOrderIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  estimatorOrderIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  estimatorOrderIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** estimator_report_id field predicates */
  estimatorReportID?: InputMaybe<Scalars['Int']['input']>;
  estimatorReportIDGT?: InputMaybe<Scalars['Int']['input']>;
  estimatorReportIDGTE?: InputMaybe<Scalars['Int']['input']>;
  estimatorReportIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  estimatorReportIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  estimatorReportIDLT?: InputMaybe<Scalars['Int']['input']>;
  estimatorReportIDLTE?: InputMaybe<Scalars['Int']['input']>;
  estimatorReportIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  estimatorReportIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  estimatorReportIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** extra_charge_note field predicates */
  extraChargeNote?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteContains?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteContainsFold?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteEqualFold?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteGT?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteGTE?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  extraChargeNoteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  extraChargeNoteLT?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteLTE?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteNEQ?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  extraChargeNoteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** extra_charge_type field predicates */
  extraChargeType?: InputMaybe<ExtraCharge>;
  extraChargeTypeIn?: InputMaybe<Array<ExtraCharge>>;
  extraChargeTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  extraChargeTypeNEQ?: InputMaybe<ExtraCharge>;
  extraChargeTypeNotIn?: InputMaybe<Array<ExtraCharge>>;
  extraChargeTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** extra_charges field predicates */
  extraCharges?: InputMaybe<Scalars['Float']['input']>;
  extraChargesGT?: InputMaybe<Scalars['Float']['input']>;
  extraChargesGTE?: InputMaybe<Scalars['Float']['input']>;
  extraChargesIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  extraChargesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  extraChargesLT?: InputMaybe<Scalars['Float']['input']>;
  extraChargesLTE?: InputMaybe<Scalars['Float']['input']>;
  extraChargesNEQ?: InputMaybe<Scalars['Float']['input']>;
  extraChargesNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  extraChargesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** failure_reason field predicates */
  failureReason?: InputMaybe<Scalars['String']['input']>;
  failureReasonContains?: InputMaybe<Scalars['String']['input']>;
  failureReasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  failureReasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  failureReasonGT?: InputMaybe<Scalars['String']['input']>;
  failureReasonGTE?: InputMaybe<Scalars['String']['input']>;
  failureReasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  failureReasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  failureReasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  failureReasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  failureReasonLT?: InputMaybe<Scalars['String']['input']>;
  failureReasonLTE?: InputMaybe<Scalars['String']['input']>;
  failureReasonNEQ?: InputMaybe<Scalars['String']['input']>;
  failureReasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  failureReasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** activities edge predicates */
  hasActivities?: InputMaybe<Scalars['Boolean']['input']>;
  hasActivitiesWith?: InputMaybe<Array<EstimateActivityWhereInput>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api edge predicates */
  hasCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** home_owner edge predicates */
  hasHomeOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasHomeOwnerWith?: InputMaybe<Array<HomeOwnerWhereInput>>;
  /** job_info edge predicates */
  hasJobInfo?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobInfoWith?: InputMaybe<Array<JobWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** pdf edge predicates */
  hasPdf?: InputMaybe<Scalars['Boolean']['input']>;
  hasPdfWith?: InputMaybe<Array<DocumentWhereInput>>;
  /** sales_rep edge predicates */
  hasSalesRep?: InputMaybe<Scalars['Boolean']['input']>;
  hasSalesRepWith?: InputMaybe<Array<UserWhereInput>>;
  /** updates edge predicates */
  hasUpdates?: InputMaybe<Scalars['Boolean']['input']>;
  hasUpdatesWith?: InputMaybe<Array<EstimateResponseWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** layer2_material field predicates */
  layer2Material?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialContains?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialGT?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialGTE?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer2MaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  layer2MaterialLT?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialLTE?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer2MaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** layer3_material field predicates */
  layer3Material?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialContains?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialGT?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialGTE?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer3MaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  layer3MaterialLT?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialLTE?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer3MaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** layers field predicates */
  layers?: InputMaybe<Scalars['Int']['input']>;
  layersGT?: InputMaybe<Scalars['Int']['input']>;
  layersGTE?: InputMaybe<Scalars['Int']['input']>;
  layersIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  layersLT?: InputMaybe<Scalars['Int']['input']>;
  layersLTE?: InputMaybe<Scalars['Int']['input']>;
  layersNEQ?: InputMaybe<Scalars['Int']['input']>;
  layersNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** lowSlope field predicates */
  lowslope?: InputMaybe<Scalars['Boolean']['input']>;
  lowslopeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** material_mapping_note field predicates */
  materialMappingNote?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteContains?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteContainsFold?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteEqualFold?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteGT?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteGTE?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  materialMappingNoteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  materialMappingNoteLT?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteLTE?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteNEQ?: InputMaybe<Scalars['String']['input']>;
  materialMappingNoteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  materialMappingNoteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** measure_type field predicates */
  measureType?: InputMaybe<Measure>;
  measureTypeIn?: InputMaybe<Array<Measure>>;
  measureTypeNEQ?: InputMaybe<Measure>;
  measureTypeNotIn?: InputMaybe<Array<Measure>>;
  /** new_roofing_material field predicates */
  newRoofingMaterial?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialContains?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialGT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialGTE?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  newRoofingMaterialLT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLTE?: InputMaybe<Scalars['String']['input']>;
  /** new_roofing_material_low_slope field predicates */
  newRoofingMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeContains?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeGT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeGTE?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialLowSlopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  newRoofingMaterialLowSlopeLT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeLTE?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeNEQ?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialLowSlopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  newRoofingMaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<EstimateWhereInput>;
  or?: InputMaybe<Array<EstimateWhereInput>>;
  /** partial_percentage field predicates */
  partialPercentage?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageGT?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageGTE?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  partialPercentageIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  partialPercentageLT?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageLTE?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageNEQ?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  partialPercentageNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** price field predicates */
  price?: InputMaybe<Scalars['Float']['input']>;
  priceGT?: InputMaybe<Scalars['Float']['input']>;
  priceGTE?: InputMaybe<Scalars['Float']['input']>;
  priceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  priceLT?: InputMaybe<Scalars['Float']['input']>;
  priceLTE?: InputMaybe<Scalars['Float']['input']>;
  priceNEQ?: InputMaybe<Scalars['Float']['input']>;
  priceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** price_summary field predicates */
  priceSummary?: InputMaybe<Scalars['String']['input']>;
  priceSummaryContains?: InputMaybe<Scalars['String']['input']>;
  priceSummaryContainsFold?: InputMaybe<Scalars['String']['input']>;
  priceSummaryEqualFold?: InputMaybe<Scalars['String']['input']>;
  priceSummaryGT?: InputMaybe<Scalars['String']['input']>;
  priceSummaryGTE?: InputMaybe<Scalars['String']['input']>;
  priceSummaryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  priceSummaryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  priceSummaryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  priceSummaryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  priceSummaryLT?: InputMaybe<Scalars['String']['input']>;
  priceSummaryLTE?: InputMaybe<Scalars['String']['input']>;
  priceSummaryNEQ?: InputMaybe<Scalars['String']['input']>;
  priceSummaryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  priceSummaryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** primary_pitch field predicates */
  primaryPitch?: InputMaybe<Scalars['Float']['input']>;
  primaryPitchGT?: InputMaybe<Scalars['Float']['input']>;
  primaryPitchGTE?: InputMaybe<Scalars['Float']['input']>;
  primaryPitchIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  primaryPitchLT?: InputMaybe<Scalars['Float']['input']>;
  primaryPitchLTE?: InputMaybe<Scalars['Float']['input']>;
  primaryPitchNEQ?: InputMaybe<Scalars['Float']['input']>;
  primaryPitchNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** redeck field predicates */
  redeck?: InputMaybe<Scalars['Boolean']['input']>;
  redeckNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** region_id field predicates */
  regionID?: InputMaybe<Scalars['Int']['input']>;
  regionIDGT?: InputMaybe<Scalars['Int']['input']>;
  regionIDGTE?: InputMaybe<Scalars['Int']['input']>;
  regionIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  regionIDLT?: InputMaybe<Scalars['Int']['input']>;
  regionIDLTE?: InputMaybe<Scalars['Int']['input']>;
  regionIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  regionIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** status field predicates */
  status?: InputMaybe<EstimateStatus>;
  statusIn?: InputMaybe<Array<EstimateStatus>>;
  statusNEQ?: InputMaybe<EstimateStatus>;
  statusNotIn?: InputMaybe<Array<EstimateStatus>>;
  /** total_squares field predicates */
  totalSquares?: InputMaybe<Scalars['Float']['input']>;
  totalSquaresGT?: InputMaybe<Scalars['Float']['input']>;
  totalSquaresGTE?: InputMaybe<Scalars['Float']['input']>;
  totalSquaresIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  totalSquaresLT?: InputMaybe<Scalars['Float']['input']>;
  totalSquaresLTE?: InputMaybe<Scalars['Float']['input']>;
  totalSquaresNEQ?: InputMaybe<Scalars['Float']['input']>;
  totalSquaresNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum ExtraCharge {
  Amount = 'AMOUNT',
  None = 'NONE',
  Percent = 'PERCENT',
  PerSq = 'PER_SQ'
}

export enum Filter {
  ByRegion = 'BY_REGION',
  ByState = 'BY_STATE'
}

export type HomeOwner = {
  __typename?: 'HomeOwner';
  city: Scalars['String']['output'];
  email?: Maybe<Scalars['String']['output']>;
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  latitude?: Maybe<Scalars['Float']['output']>;
  longitude?: Maybe<Scalars['Float']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  state: Scalars['String']['output'];
  streetName: Scalars['String']['output'];
  streetNumber: Scalars['String']['output'];
  zip: Scalars['String']['output'];
};

/**
 * HomeOwnerWhereInput is used for filtering HomeOwner objects.
 * Input was generated by ent.
 */
export type HomeOwnerWhereInput = {
  and?: InputMaybe<Array<HomeOwnerWhereInput>>;
  /** city field predicates */
  city?: InputMaybe<Scalars['String']['input']>;
  cityContains?: InputMaybe<Scalars['String']['input']>;
  cityContainsFold?: InputMaybe<Scalars['String']['input']>;
  cityEqualFold?: InputMaybe<Scalars['String']['input']>;
  cityGT?: InputMaybe<Scalars['String']['input']>;
  cityGTE?: InputMaybe<Scalars['String']['input']>;
  cityHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cityHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cityIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cityLT?: InputMaybe<Scalars['String']['input']>;
  cityLTE?: InputMaybe<Scalars['String']['input']>;
  cityNEQ?: InputMaybe<Scalars['String']['input']>;
  cityNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>;
  firstNameContains?: InputMaybe<Scalars['String']['input']>;
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  firstNameGT?: InputMaybe<Scalars['String']['input']>;
  firstNameGTE?: InputMaybe<Scalars['String']['input']>;
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameLT?: InputMaybe<Scalars['String']['input']>;
  firstNameLTE?: InputMaybe<Scalars['String']['input']>;
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** formatted_address field predicates */
  formattedAddress?: InputMaybe<Scalars['String']['input']>;
  formattedAddressContains?: InputMaybe<Scalars['String']['input']>;
  formattedAddressContainsFold?: InputMaybe<Scalars['String']['input']>;
  formattedAddressEqualFold?: InputMaybe<Scalars['String']['input']>;
  formattedAddressGT?: InputMaybe<Scalars['String']['input']>;
  formattedAddressGTE?: InputMaybe<Scalars['String']['input']>;
  formattedAddressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  formattedAddressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  formattedAddressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  formattedAddressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  formattedAddressLT?: InputMaybe<Scalars['String']['input']>;
  formattedAddressLTE?: InputMaybe<Scalars['String']['input']>;
  formattedAddressNEQ?: InputMaybe<Scalars['String']['input']>;
  formattedAddressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  formattedAddressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** estimates edge predicates */
  hasEstimates?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimatesWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** jobs edge predicates */
  hasJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobsWith?: InputMaybe<Array<JobWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** hash field predicates */
  hash?: InputMaybe<Scalars['String']['input']>;
  hashContains?: InputMaybe<Scalars['String']['input']>;
  hashContainsFold?: InputMaybe<Scalars['String']['input']>;
  hashEqualFold?: InputMaybe<Scalars['String']['input']>;
  hashGT?: InputMaybe<Scalars['String']['input']>;
  hashGTE?: InputMaybe<Scalars['String']['input']>;
  hashHasPrefix?: InputMaybe<Scalars['String']['input']>;
  hashHasSuffix?: InputMaybe<Scalars['String']['input']>;
  hashIn?: InputMaybe<Array<Scalars['String']['input']>>;
  hashIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  hashLT?: InputMaybe<Scalars['String']['input']>;
  hashLTE?: InputMaybe<Scalars['String']['input']>;
  hashNEQ?: InputMaybe<Scalars['String']['input']>;
  hashNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  hashNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>;
  lastNameContains?: InputMaybe<Scalars['String']['input']>;
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastNameGT?: InputMaybe<Scalars['String']['input']>;
  lastNameGTE?: InputMaybe<Scalars['String']['input']>;
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameLT?: InputMaybe<Scalars['String']['input']>;
  lastNameLTE?: InputMaybe<Scalars['String']['input']>;
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** latitude field predicates */
  latitude?: InputMaybe<Scalars['Float']['input']>;
  latitudeGT?: InputMaybe<Scalars['Float']['input']>;
  latitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  latitudeLT?: InputMaybe<Scalars['Float']['input']>;
  latitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  latitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** longitude field predicates */
  longitude?: InputMaybe<Scalars['Float']['input']>;
  longitudeGT?: InputMaybe<Scalars['Float']['input']>;
  longitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  longitudeLT?: InputMaybe<Scalars['Float']['input']>;
  longitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  longitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<HomeOwnerWhereInput>;
  or?: InputMaybe<Array<HomeOwnerWhereInput>>;
  /** phone field predicates */
  phone?: InputMaybe<Scalars['String']['input']>;
  phoneContains?: InputMaybe<Scalars['String']['input']>;
  phoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneGT?: InputMaybe<Scalars['String']['input']>;
  phoneGTE?: InputMaybe<Scalars['String']['input']>;
  phoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneLT?: InputMaybe<Scalars['String']['input']>;
  phoneLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** state field predicates */
  state?: InputMaybe<Scalars['String']['input']>;
  /** state_abbr field predicates */
  stateAbbr?: InputMaybe<Scalars['String']['input']>;
  stateAbbrContains?: InputMaybe<Scalars['String']['input']>;
  stateAbbrContainsFold?: InputMaybe<Scalars['String']['input']>;
  stateAbbrEqualFold?: InputMaybe<Scalars['String']['input']>;
  stateAbbrGT?: InputMaybe<Scalars['String']['input']>;
  stateAbbrGTE?: InputMaybe<Scalars['String']['input']>;
  stateAbbrHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stateAbbrHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stateAbbrIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateAbbrIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stateAbbrLT?: InputMaybe<Scalars['String']['input']>;
  stateAbbrLTE?: InputMaybe<Scalars['String']['input']>;
  stateAbbrNEQ?: InputMaybe<Scalars['String']['input']>;
  stateAbbrNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateAbbrNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  stateContains?: InputMaybe<Scalars['String']['input']>;
  stateContainsFold?: InputMaybe<Scalars['String']['input']>;
  stateEqualFold?: InputMaybe<Scalars['String']['input']>;
  stateGT?: InputMaybe<Scalars['String']['input']>;
  stateGTE?: InputMaybe<Scalars['String']['input']>;
  stateHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stateHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stateIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateLT?: InputMaybe<Scalars['String']['input']>;
  stateLTE?: InputMaybe<Scalars['String']['input']>;
  stateNEQ?: InputMaybe<Scalars['String']['input']>;
  stateNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** street_name field predicates */
  streetName?: InputMaybe<Scalars['String']['input']>;
  streetNameContains?: InputMaybe<Scalars['String']['input']>;
  streetNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  streetNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  streetNameGT?: InputMaybe<Scalars['String']['input']>;
  streetNameGTE?: InputMaybe<Scalars['String']['input']>;
  streetNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  streetNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  streetNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  streetNameLT?: InputMaybe<Scalars['String']['input']>;
  streetNameLTE?: InputMaybe<Scalars['String']['input']>;
  streetNameNEQ?: InputMaybe<Scalars['String']['input']>;
  streetNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** street_number field predicates */
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  streetNumberContains?: InputMaybe<Scalars['String']['input']>;
  streetNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  streetNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  streetNumberGT?: InputMaybe<Scalars['String']['input']>;
  streetNumberGTE?: InputMaybe<Scalars['String']['input']>;
  streetNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  streetNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  streetNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  streetNumberLT?: InputMaybe<Scalars['String']['input']>;
  streetNumberLTE?: InputMaybe<Scalars['String']['input']>;
  streetNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  streetNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** zip field predicates */
  zip?: InputMaybe<Scalars['String']['input']>;
  zipContains?: InputMaybe<Scalars['String']['input']>;
  zipContainsFold?: InputMaybe<Scalars['String']['input']>;
  zipEqualFold?: InputMaybe<Scalars['String']['input']>;
  zipGT?: InputMaybe<Scalars['String']['input']>;
  zipGTE?: InputMaybe<Scalars['String']['input']>;
  zipHasPrefix?: InputMaybe<Scalars['String']['input']>;
  zipHasSuffix?: InputMaybe<Scalars['String']['input']>;
  zipIn?: InputMaybe<Array<Scalars['String']['input']>>;
  zipLT?: InputMaybe<Scalars['String']['input']>;
  zipLTE?: InputMaybe<Scalars['String']['input']>;
  zipNEQ?: InputMaybe<Scalars['String']['input']>;
  zipNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type InputDocument = {
  contentSize: Scalars['Int64']['input'];
  contentType?: InputMaybe<Scalars['String']['input']>;
  dir: Scalars['String']['input'];
  fileName: Scalars['String']['input'];
  folder: DocumentFolder;
  name: Scalars['String']['input'];
  overwrite: Scalars['Boolean']['input'];
  section: DocumentSection;
};

export type InputFile = {
  contentSize: Scalars['Int64']['input'];
  contentType?: InputMaybe<Scalars['String']['input']>;
  fileName: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type InputMobileAppSettings = {
  hideTabs?: InputMaybe<Array<Scalars['String']['input']>>;
  logoURL?: InputMaybe<Scalars['String']['input']>;
  primaryColor?: InputMaybe<Scalars['String']['input']>;
};

export type InputPoint = {
  lat: Scalars['Float']['input'];
  lng: Scalars['Float']['input'];
};

export type InputTrainingVideo = {
  courseID: Scalars['ID']['input'];
  description: Scalars['String']['input'];
  id: Scalars['ID']['input'];
  kind: TrainingType;
  posterID: Scalars['ID']['input'];
  title: Scalars['String']['input'];
  videoID: Scalars['ID']['input'];
};

export type InputUserProfile = {
  confirmNewPwd?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  newPwd?: InputMaybe<Scalars['String']['input']>;
  oldPwd?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  picture?: InputMaybe<Scalars['String']['input']>;
};

export type InstallationApproveInput = {
  agree?: InputMaybe<Scalars['Boolean']['input']>;
  id: Scalars['ID']['input'];
  ownerEmail?: InputMaybe<Scalars['String']['input']>;
  ownerPhone?: InputMaybe<Scalars['String']['input']>;
};

export type InstallationJob = {
  __typename?: 'InstallationJob';
  approval: Approval;
  approvalAt: Scalars['Time']['output'];
  createdAt: Scalars['Time']['output'];
  id: Scalars['String']['output'];
  items?: Maybe<Array<InstallationJobItem>>;
  ownerAddress: Scalars['String']['output'];
  ownerAddressLat?: Maybe<Scalars['Float']['output']>;
  ownerAddressLng?: Maybe<Scalars['Float']['output']>;
  ownerEmail?: Maybe<Scalars['String']['output']>;
  ownerName: Scalars['String']['output'];
  ownerPhone: Scalars['String']['output'];
  pkg: Scalars['String']['output'];
  pkgDescription?: Maybe<Scalars['String']['output']>;
  pkgFeatures?: Maybe<Array<Scalars['String']['output']>>;
  price: Scalars['Float']['output'];
  salesRep: Entity;
  specialNote?: Maybe<Scalars['String']['output']>;
  status: InstallationStatus;
  statusAt: Scalars['Time']['output'];
};

export type InstallationJobConnection = {
  __typename?: 'InstallationJobConnection';
  edges?: Maybe<Array<InstallationJobEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type InstallationJobEdge = {
  __typename?: 'InstallationJobEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<InstallationJob>;
};

export type InstallationJobItem = {
  __typename?: 'InstallationJobItem';
  description: Scalars['String']['output'];
  features: Array<Scalars['String']['output']>;
  imageURL: Scalars['String']['output'];
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  specialNote?: Maybe<Scalars['String']['output']>;
};

/**
 * InstallationJobItemWhereInput is used for filtering InstallationJobItem objects.
 * Input was generated by ent.
 */
export type InstallationJobItemWhereInput = {
  and?: InputMaybe<Array<InstallationJobItemWhereInput>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** img_key field predicates */
  imgKey?: InputMaybe<Scalars['String']['input']>;
  imgKeyContains?: InputMaybe<Scalars['String']['input']>;
  imgKeyContainsFold?: InputMaybe<Scalars['String']['input']>;
  imgKeyEqualFold?: InputMaybe<Scalars['String']['input']>;
  imgKeyGT?: InputMaybe<Scalars['String']['input']>;
  imgKeyGTE?: InputMaybe<Scalars['String']['input']>;
  imgKeyHasPrefix?: InputMaybe<Scalars['String']['input']>;
  imgKeyHasSuffix?: InputMaybe<Scalars['String']['input']>;
  imgKeyIn?: InputMaybe<Array<Scalars['String']['input']>>;
  imgKeyLT?: InputMaybe<Scalars['String']['input']>;
  imgKeyLTE?: InputMaybe<Scalars['String']['input']>;
  imgKeyNEQ?: InputMaybe<Scalars['String']['input']>;
  imgKeyNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<InstallationJobItemWhereInput>;
  or?: InputMaybe<Array<InstallationJobItemWhereInput>>;
  /** price field predicates */
  price?: InputMaybe<Scalars['Float']['input']>;
  priceGT?: InputMaybe<Scalars['Float']['input']>;
  priceGTE?: InputMaybe<Scalars['Float']['input']>;
  priceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  priceLT?: InputMaybe<Scalars['Float']['input']>;
  priceLTE?: InputMaybe<Scalars['Float']['input']>;
  priceNEQ?: InputMaybe<Scalars['Float']['input']>;
  priceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** special_note field predicates */
  specialNote?: InputMaybe<Scalars['String']['input']>;
  specialNoteContains?: InputMaybe<Scalars['String']['input']>;
  specialNoteContainsFold?: InputMaybe<Scalars['String']['input']>;
  specialNoteEqualFold?: InputMaybe<Scalars['String']['input']>;
  specialNoteGT?: InputMaybe<Scalars['String']['input']>;
  specialNoteGTE?: InputMaybe<Scalars['String']['input']>;
  specialNoteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  specialNoteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  specialNoteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  specialNoteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  specialNoteLT?: InputMaybe<Scalars['String']['input']>;
  specialNoteLTE?: InputMaybe<Scalars['String']['input']>;
  specialNoteNEQ?: InputMaybe<Scalars['String']['input']>;
  specialNoteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  specialNoteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

/**
 * InstallationJobProgressWhereInput is used for filtering InstallationJobProgress objects.
 * Input was generated by ent.
 */
export type InstallationJobProgressWhereInput = {
  and?: InputMaybe<Array<InstallationJobProgressWhereInput>>;
  /** complete field predicates */
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  completeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  completeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  completeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<InstallationJobProgressWhereInput>;
  /** note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<InstallationJobProgressWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<InstallationStatus>;
  statusIn?: InputMaybe<Array<InstallationStatus>>;
  statusNEQ?: InputMaybe<InstallationStatus>;
  statusNotIn?: InputMaybe<Array<InstallationStatus>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * InstallationJobWhereInput is used for filtering InstallationJob objects.
 * Input was generated by ent.
 */
export type InstallationJobWhereInput = {
  and?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** approval field predicates */
  approval?: InputMaybe<Approval>;
  /** approval_at field predicates */
  approvalAt?: InputMaybe<Scalars['Time']['input']>;
  approvalAtGT?: InputMaybe<Scalars['Time']['input']>;
  approvalAtGTE?: InputMaybe<Scalars['Time']['input']>;
  approvalAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  approvalAtLT?: InputMaybe<Scalars['Time']['input']>;
  approvalAtLTE?: InputMaybe<Scalars['Time']['input']>;
  approvalAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  approvalAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  approvalIn?: InputMaybe<Array<Approval>>;
  approvalNEQ?: InputMaybe<Approval>;
  approvalNotIn?: InputMaybe<Array<Approval>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** deny_reason field predicates */
  denyReason?: InputMaybe<Scalars['String']['input']>;
  denyReasonContains?: InputMaybe<Scalars['String']['input']>;
  denyReasonContainsFold?: InputMaybe<Scalars['String']['input']>;
  denyReasonEqualFold?: InputMaybe<Scalars['String']['input']>;
  denyReasonGT?: InputMaybe<Scalars['String']['input']>;
  denyReasonGTE?: InputMaybe<Scalars['String']['input']>;
  denyReasonHasPrefix?: InputMaybe<Scalars['String']['input']>;
  denyReasonHasSuffix?: InputMaybe<Scalars['String']['input']>;
  denyReasonIn?: InputMaybe<Array<Scalars['String']['input']>>;
  denyReasonIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  denyReasonLT?: InputMaybe<Scalars['String']['input']>;
  denyReasonLTE?: InputMaybe<Scalars['String']['input']>;
  denyReasonNEQ?: InputMaybe<Scalars['String']['input']>;
  denyReasonNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  denyReasonNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** assigned_partner edge predicates */
  hasAssignedPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssignedPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** items edge predicates */
  hasItems?: InputMaybe<Scalars['Boolean']['input']>;
  hasItemsWith?: InputMaybe<Array<InstallationJobItemWhereInput>>;
  /** progress_history edge predicates */
  hasProgressHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgressHistoryWith?: InputMaybe<Array<InstallationJobProgressWhereInput>>;
  /** requesting_partner edge predicates */
  hasRequestingPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasRequestingPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** sales_rep edge predicates */
  hasSalesRep?: InputMaybe<Scalars['Boolean']['input']>;
  hasSalesRepWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<InstallationJobWhereInput>;
  or?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** owner_address field predicates */
  ownerAddress?: InputMaybe<Scalars['String']['input']>;
  ownerAddressContains?: InputMaybe<Scalars['String']['input']>;
  ownerAddressContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerAddressEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerAddressGT?: InputMaybe<Scalars['String']['input']>;
  ownerAddressGTE?: InputMaybe<Scalars['String']['input']>;
  ownerAddressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerAddressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerAddressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerAddressLT?: InputMaybe<Scalars['String']['input']>;
  ownerAddressLTE?: InputMaybe<Scalars['String']['input']>;
  /** owner_address_lat field predicates */
  ownerAddressLat?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLatGT?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLatGTE?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLatIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  ownerAddressLatIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerAddressLatLT?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLatLTE?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLatNEQ?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLatNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  ownerAddressLatNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner_address_lng field predicates */
  ownerAddressLng?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLngGT?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLngGTE?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLngIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  ownerAddressLngIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerAddressLngLT?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLngLTE?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLngNEQ?: InputMaybe<Scalars['Float']['input']>;
  ownerAddressLngNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  ownerAddressLngNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerAddressNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerAddressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** owner_email field predicates */
  ownerEmail?: InputMaybe<Scalars['String']['input']>;
  ownerEmailContains?: InputMaybe<Scalars['String']['input']>;
  ownerEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerEmailGT?: InputMaybe<Scalars['String']['input']>;
  ownerEmailGTE?: InputMaybe<Scalars['String']['input']>;
  ownerEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerEmailLT?: InputMaybe<Scalars['String']['input']>;
  ownerEmailLTE?: InputMaybe<Scalars['String']['input']>;
  ownerEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner_name field predicates */
  ownerName?: InputMaybe<Scalars['String']['input']>;
  ownerNameContains?: InputMaybe<Scalars['String']['input']>;
  ownerNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerNameGT?: InputMaybe<Scalars['String']['input']>;
  ownerNameGTE?: InputMaybe<Scalars['String']['input']>;
  ownerNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerNameLT?: InputMaybe<Scalars['String']['input']>;
  ownerNameLTE?: InputMaybe<Scalars['String']['input']>;
  ownerNameNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** owner_phone field predicates */
  ownerPhone?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneContains?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneGT?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneGTE?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerPhoneLT?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneLTE?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** pkg field predicates */
  pkg?: InputMaybe<Scalars['String']['input']>;
  pkgContains?: InputMaybe<Scalars['String']['input']>;
  pkgContainsFold?: InputMaybe<Scalars['String']['input']>;
  /** pkg_description field predicates */
  pkgDescription?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionContains?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionGT?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionGTE?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pkgDescriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  pkgDescriptionLT?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionLTE?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  pkgDescriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pkgDescriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  pkgEqualFold?: InputMaybe<Scalars['String']['input']>;
  pkgGT?: InputMaybe<Scalars['String']['input']>;
  pkgGTE?: InputMaybe<Scalars['String']['input']>;
  pkgHasPrefix?: InputMaybe<Scalars['String']['input']>;
  pkgHasSuffix?: InputMaybe<Scalars['String']['input']>;
  pkgIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pkgLT?: InputMaybe<Scalars['String']['input']>;
  pkgLTE?: InputMaybe<Scalars['String']['input']>;
  pkgNEQ?: InputMaybe<Scalars['String']['input']>;
  pkgNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** price field predicates */
  price?: InputMaybe<Scalars['Float']['input']>;
  priceGT?: InputMaybe<Scalars['Float']['input']>;
  priceGTE?: InputMaybe<Scalars['Float']['input']>;
  priceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  priceLT?: InputMaybe<Scalars['Float']['input']>;
  priceLTE?: InputMaybe<Scalars['Float']['input']>;
  priceNEQ?: InputMaybe<Scalars['Float']['input']>;
  priceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** special_note field predicates */
  specialNote?: InputMaybe<Scalars['String']['input']>;
  specialNoteContains?: InputMaybe<Scalars['String']['input']>;
  specialNoteContainsFold?: InputMaybe<Scalars['String']['input']>;
  specialNoteEqualFold?: InputMaybe<Scalars['String']['input']>;
  specialNoteGT?: InputMaybe<Scalars['String']['input']>;
  specialNoteGTE?: InputMaybe<Scalars['String']['input']>;
  specialNoteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  specialNoteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  specialNoteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  specialNoteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  specialNoteLT?: InputMaybe<Scalars['String']['input']>;
  specialNoteLTE?: InputMaybe<Scalars['String']['input']>;
  specialNoteNEQ?: InputMaybe<Scalars['String']['input']>;
  specialNoteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  specialNoteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<InstallationStatus>;
  /** status_at field predicates */
  statusAt?: InputMaybe<Scalars['Time']['input']>;
  statusAtGT?: InputMaybe<Scalars['Time']['input']>;
  statusAtGTE?: InputMaybe<Scalars['Time']['input']>;
  statusAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  statusAtLT?: InputMaybe<Scalars['Time']['input']>;
  statusAtLTE?: InputMaybe<Scalars['Time']['input']>;
  statusAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  statusAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  statusIn?: InputMaybe<Array<InstallationStatus>>;
  statusNEQ?: InputMaybe<InstallationStatus>;
  statusNotIn?: InputMaybe<Array<InstallationStatus>>;
  /** type field predicates */
  type?: InputMaybe<InstallationType>;
  typeIn?: InputMaybe<Array<InstallationType>>;
  typeNEQ?: InputMaybe<InstallationType>;
  typeNotIn?: InputMaybe<Array<InstallationType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type InstallationOwnerInput = {
  address: Scalars['String']['input'];
  email: Scalars['String']['input'];
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  specialNote?: InputMaybe<Scalars['String']['input']>;
};

export type InstallationPackageInput = {
  description: Scalars['String']['input'];
  features?: InputMaybe<Array<Scalars['String']['input']>>;
  items: Array<InstallationPackageItemInput>;
  name: Scalars['String']['input'];
  price: Scalars['Float']['input'];
};

export type InstallationPackageItemInput = {
  description: Scalars['String']['input'];
  features?: InputMaybe<Array<Scalars['String']['input']>>;
  name: Scalars['String']['input'];
  specialNote?: InputMaybe<Scalars['String']['input']>;
};

export enum InstallationStatus {
  Installed = 'INSTALLED',
  New = 'NEW',
  Pending = 'PENDING',
  Scheduled = 'SCHEDULED'
}

export enum InstallationType {
  Hvac = 'HVAC',
  SmartHome = 'SMART_HOME'
}

export type Invite = {
  __typename?: 'Invite';
  companyName: Scalars['String']['output'];
  contactID?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['Time']['output']>;
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  phone: Scalars['String']['output'];
  type: PartnerType;
  userID?: Maybe<Scalars['String']['output']>;
};

export type InvitePartnerInput = {
  companyName: Scalars['String']['input'];
  contactID?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  id: Scalars['ID']['input'];
  lastName: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  type: PartnerType;
  userID?: InputMaybe<Scalars['String']['input']>;
};

export type Job = Node & {
  __typename?: 'Job';
  companyName: Scalars['String']['output'];
  completionDate?: Maybe<Scalars['Time']['output']>;
  contractor?: Maybe<Entity>;
  createdAt: Scalars['Time']['output'];
  creator?: Maybe<UserInfo>;
  creatorName: Scalars['String']['output'];
  epcName: Scalars['String']['output'];
  estimate?: Maybe<Estimate>;
  homeOwner?: Maybe<HomeOwner>;
  id: Scalars['ID']['output'];
  inspectionDate?: Maybe<Scalars['Time']['output']>;
  inspectionRequired?: Maybe<Scalars['Boolean']['output']>;
  installDate?: Maybe<Scalars['Time']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  permitRequired?: Maybe<Scalars['Boolean']['output']>;
  price: Scalars['Float']['output'];
  progress?: Maybe<JobProgress>;
  progressAt?: Maybe<Scalars['Time']['output']>;
  progressFlagged?: Maybe<Scalars['Boolean']['output']>;
  salesRep?: Maybe<UserInfo>;
  updatedAt: Scalars['Time']['output'];
  workOrderPrice: Scalars['Float']['output'];
};

/**
 * JobActivityWhereInput is used for filtering JobActivity objects.
 * Input was generated by ent.
 */
export type JobActivityWhereInput = {
  and?: InputMaybe<Array<JobActivityWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api edge predicates */
  hasCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<JobWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<JobActivityWhereInput>;
  or?: InputMaybe<Array<JobActivityWhereInput>>;
};

/**
 * JobAssignmentHistoryWhereInput is used for filtering JobAssignmentHistory objects.
 * Input was generated by ent.
 */
export type JobAssignmentHistoryWhereInput = {
  and?: InputMaybe<Array<JobAssignmentHistoryWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<JobWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<JobAssignmentHistoryWhereInput>;
  /** Note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<JobAssignmentHistoryWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<JobAssignmentStatus>;
  statusIn?: InputMaybe<Array<JobAssignmentStatus>>;
  statusNEQ?: InputMaybe<JobAssignmentStatus>;
  statusNotIn?: InputMaybe<Array<JobAssignmentStatus>>;
};

export enum JobAssignmentStatus {
  Accepted = 'Accepted',
  Assigned = 'Assigned',
  Expired = 'Expired',
  Rejected = 'Rejected'
}

export type JobConnection = {
  __typename?: 'JobConnection';
  edges?: Maybe<Array<JobEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type JobDatesInput = {
  completionDate?: InputMaybe<Scalars['Time']['input']>;
  installDate?: InputMaybe<Scalars['Time']['input']>;
  materialDate?: InputMaybe<Scalars['Time']['input']>;
  removeDate?: InputMaybe<Scalars['Time']['input']>;
};

export enum JobDocSection {
  Docs = 'Docs',
  InspectionDocs = 'InspectionDocs',
  PricingPdf = 'PricingPDF',
  ProductionPics = 'ProductionPics'
}

/**
 * JobDocURLWhereInput is used for filtering JobDocURL objects.
 * Input was generated by ent.
 */
export type JobDocUrlWhereInput = {
  and?: InputMaybe<Array<JobDocUrlWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<JobWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<JobDocUrlWhereInput>;
  or?: InputMaybe<Array<JobDocUrlWhereInput>>;
  /** type field predicates */
  type?: InputMaybe<JobDocUrlType>;
  typeIn?: InputMaybe<Array<JobDocUrlType>>;
  typeNEQ?: InputMaybe<JobDocUrlType>;
  typeNotIn?: InputMaybe<Array<JobDocUrlType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** url field predicates */
  url?: InputMaybe<Scalars['String']['input']>;
  urlContains?: InputMaybe<Scalars['String']['input']>;
  urlContainsFold?: InputMaybe<Scalars['String']['input']>;
  urlEqualFold?: InputMaybe<Scalars['String']['input']>;
  urlGT?: InputMaybe<Scalars['String']['input']>;
  urlGTE?: InputMaybe<Scalars['String']['input']>;
  urlHasPrefix?: InputMaybe<Scalars['String']['input']>;
  urlHasSuffix?: InputMaybe<Scalars['String']['input']>;
  urlIn?: InputMaybe<Array<Scalars['String']['input']>>;
  urlLT?: InputMaybe<Scalars['String']['input']>;
  urlLTE?: InputMaybe<Scalars['String']['input']>;
  urlNEQ?: InputMaybe<Scalars['String']['input']>;
  urlNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export enum JobDocUrlType {
  InspectionDocs = 'InspectionDocs',
  ProductionPics = 'ProductionPics'
}

export type JobEdge = {
  __typename?: 'JobEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Job>;
};

export type JobEstimates = {
  __typename?: 'JobEstimates';
  estimates?: Maybe<Array<Estimate>>;
  id: Scalars['ID']['output'];
  status: Scalars['String']['output'];
};

export enum JobInspectionRequired {
  No = 'No',
  Yes = 'Yes'
}

export type JobNote = {
  __typename?: 'JobNote';
  createdAt: Scalars['Time']['output'];
  creator: UserInfo;
  id: Scalars['ID']['output'];
  note: Scalars['String']['output'];
  updatedAt: Scalars['Time']['output'];
};

/**
 * JobNoteWhereInput is used for filtering JobNote objects.
 * Input was generated by ent.
 */
export type JobNoteWhereInput = {
  and?: InputMaybe<Array<JobNoteWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<JobWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<JobNoteWhereInput>;
  /** note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  or?: InputMaybe<Array<JobNoteWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type JobOrder = {
  direction: OrderDirection;
  field?: InputMaybe<JobOrderField>;
};

export enum JobOrderField {
  Created = 'CREATED',
  ProgressAt = 'PROGRESS_AT',
  StatusAt = 'STATUS_AT'
}

export enum JobPermitRequired {
  No = 'No',
  Yes = 'Yes'
}

export enum JobProgress {
  CustomerContacted = 'CustomerContacted',
  Delayed = 'Delayed',
  InProgress = 'InProgress',
  Installed = 'Installed',
  InvoiceApproved = 'InvoiceApproved',
  InvoicePaid = 'InvoicePaid',
  Invoiced = 'Invoiced',
  JobDetailsConfirmed = 'JobDetailsConfirmed',
  New = 'New',
  Permitting = 'Permitting',
  Scheduled = 'Scheduled'
}

export type JobProgressData = {
  __typename?: 'JobProgressData';
  answer: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  question: Scalars['String']['output'];
};

export type JobProgressHistory = {
  __typename?: 'JobProgressHistory';
  complete: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  note: Scalars['String']['output'];
  status: JobProgress;
  statusAt: Scalars['Time']['output'];
};

export type JobProgressHistoryConnection = {
  __typename?: 'JobProgressHistoryConnection';
  edges?: Maybe<Array<JobProgressHistoryEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type JobProgressHistoryEdge = {
  __typename?: 'JobProgressHistoryEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<JobProgressHistory>;
};

/**
 * JobProgressHistoryWhereInput is used for filtering JobProgressHistory objects.
 * Input was generated by ent.
 */
export type JobProgressHistoryWhereInput = {
  and?: InputMaybe<Array<JobProgressHistoryWhereInput>>;
  /** complete field predicates */
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  completeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  completeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  completeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api_user edge predicates */
  hasCreatorAPIUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIUserWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<JobWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<JobProgressHistoryWhereInput>;
  /** note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<JobProgressHistoryWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<JobProgress>;
  statusIn?: InputMaybe<Array<JobProgress>>;
  statusNEQ?: InputMaybe<JobProgress>;
  statusNotIn?: InputMaybe<Array<JobProgress>>;
};

export type JobProgressInput = {
  answer: Scalars['String']['input'];
  order: Scalars['Int']['input'];
  question: Scalars['String']['input'];
};

export enum JobShingleColor {
  Blue = 'Blue',
  Brown = 'Brown',
  Sandstorm = 'Sandstorm'
}

export enum JobSource {
  External = 'External',
  Manual = 'Manual'
}

export enum JobStatus {
  Accepted = 'Accepted',
  Approved = 'Approved',
  Assigned = 'Assigned',
  Denied = 'Denied',
  Estimated = 'Estimated',
  Estimating = 'Estimating',
  Request = 'Request'
}

/**
 * JobWhereInput is used for filtering Job objects.
 * Input was generated by ent.
 */
export type JobWhereInput = {
  /** agree field predicates */
  agree?: InputMaybe<Scalars['Boolean']['input']>;
  /** agree_at field predicates */
  agreeAt?: InputMaybe<Scalars['Time']['input']>;
  agreeAtGT?: InputMaybe<Scalars['Time']['input']>;
  agreeAtGTE?: InputMaybe<Scalars['Time']['input']>;
  agreeAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  agreeAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  agreeAtLT?: InputMaybe<Scalars['Time']['input']>;
  agreeAtLTE?: InputMaybe<Scalars['Time']['input']>;
  agreeAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  agreeAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  agreeAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  agreeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  agreeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  agreeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<JobWhereInput>>;
  /** change_order_price field predicates */
  changeOrderPrice?: InputMaybe<Scalars['Float']['input']>;
  changeOrderPriceGT?: InputMaybe<Scalars['Float']['input']>;
  changeOrderPriceGTE?: InputMaybe<Scalars['Float']['input']>;
  changeOrderPriceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  changeOrderPriceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  changeOrderPriceLT?: InputMaybe<Scalars['Float']['input']>;
  changeOrderPriceLTE?: InputMaybe<Scalars['Float']['input']>;
  changeOrderPriceNEQ?: InputMaybe<Scalars['Float']['input']>;
  changeOrderPriceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  changeOrderPriceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** city field predicates */
  city?: InputMaybe<Scalars['String']['input']>;
  cityContains?: InputMaybe<Scalars['String']['input']>;
  cityContainsFold?: InputMaybe<Scalars['String']['input']>;
  cityEqualFold?: InputMaybe<Scalars['String']['input']>;
  cityGT?: InputMaybe<Scalars['String']['input']>;
  cityGTE?: InputMaybe<Scalars['String']['input']>;
  cityHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cityHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cityIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cityIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  cityLT?: InputMaybe<Scalars['String']['input']>;
  cityLTE?: InputMaybe<Scalars['String']['input']>;
  cityNEQ?: InputMaybe<Scalars['String']['input']>;
  cityNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cityNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** company_name field predicates */
  companyName?: InputMaybe<Scalars['String']['input']>;
  companyNameContains?: InputMaybe<Scalars['String']['input']>;
  companyNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  companyNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  companyNameGT?: InputMaybe<Scalars['String']['input']>;
  companyNameGTE?: InputMaybe<Scalars['String']['input']>;
  companyNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  companyNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  companyNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  companyNameLT?: InputMaybe<Scalars['String']['input']>;
  companyNameLTE?: InputMaybe<Scalars['String']['input']>;
  companyNameNEQ?: InputMaybe<Scalars['String']['input']>;
  companyNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** company_ref_id field predicates */
  companyRefID?: InputMaybe<Scalars['String']['input']>;
  companyRefIDContains?: InputMaybe<Scalars['String']['input']>;
  companyRefIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  companyRefIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  companyRefIDGT?: InputMaybe<Scalars['String']['input']>;
  companyRefIDGTE?: InputMaybe<Scalars['String']['input']>;
  companyRefIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  companyRefIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  companyRefIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyRefIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  companyRefIDLT?: InputMaybe<Scalars['String']['input']>;
  companyRefIDLTE?: InputMaybe<Scalars['String']['input']>;
  companyRefIDNEQ?: InputMaybe<Scalars['String']['input']>;
  companyRefIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  companyRefIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** completion_date field predicates */
  completionDate?: InputMaybe<Scalars['Time']['input']>;
  completionDateGT?: InputMaybe<Scalars['Time']['input']>;
  completionDateGTE?: InputMaybe<Scalars['Time']['input']>;
  completionDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  completionDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  completionDateLT?: InputMaybe<Scalars['Time']['input']>;
  completionDateLTE?: InputMaybe<Scalars['Time']['input']>;
  completionDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  completionDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  completionDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** contract_price field predicates */
  contractPrice?: InputMaybe<Scalars['Float']['input']>;
  contractPriceGT?: InputMaybe<Scalars['Float']['input']>;
  contractPriceGTE?: InputMaybe<Scalars['Float']['input']>;
  contractPriceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  contractPriceIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  contractPriceLT?: InputMaybe<Scalars['Float']['input']>;
  contractPriceLTE?: InputMaybe<Scalars['Float']['input']>;
  contractPriceNEQ?: InputMaybe<Scalars['Float']['input']>;
  contractPriceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  contractPriceNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** current_material field predicates */
  currentMaterial?: InputMaybe<Scalars['String']['input']>;
  currentMaterialContains?: InputMaybe<Scalars['String']['input']>;
  currentMaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialGT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialGTE?: InputMaybe<Scalars['String']['input']>;
  currentMaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  currentMaterialLT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLTE?: InputMaybe<Scalars['String']['input']>;
  /** current_material_low_slope field predicates */
  currentMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeContains?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeGT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeGTE?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialLowSlopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  currentMaterialLowSlopeLT?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeLTE?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeNEQ?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialLowSlopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  currentMaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  currentMaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  currentMaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** external_id field predicates */
  externalID?: InputMaybe<Scalars['String']['input']>;
  externalIDContains?: InputMaybe<Scalars['String']['input']>;
  externalIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  externalIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  externalIDGT?: InputMaybe<Scalars['String']['input']>;
  externalIDGTE?: InputMaybe<Scalars['String']['input']>;
  externalIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  externalIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  externalIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  externalIDLT?: InputMaybe<Scalars['String']['input']>;
  externalIDLTE?: InputMaybe<Scalars['String']['input']>;
  externalIDNEQ?: InputMaybe<Scalars['String']['input']>;
  externalIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** extra_charge_note field predicates */
  extraChargeNote?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteContains?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteContainsFold?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteEqualFold?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteGT?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteGTE?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  extraChargeNoteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  extraChargeNoteLT?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteLTE?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteNEQ?: InputMaybe<Scalars['String']['input']>;
  extraChargeNoteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  extraChargeNoteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** extra_charge_type field predicates */
  extraChargeType?: InputMaybe<ExtraCharge>;
  extraChargeTypeIn?: InputMaybe<Array<ExtraCharge>>;
  extraChargeTypeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  extraChargeTypeNEQ?: InputMaybe<ExtraCharge>;
  extraChargeTypeNotIn?: InputMaybe<Array<ExtraCharge>>;
  extraChargeTypeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** extra_charges field predicates */
  extraCharges?: InputMaybe<Scalars['Float']['input']>;
  extraChargesGT?: InputMaybe<Scalars['Float']['input']>;
  extraChargesGTE?: InputMaybe<Scalars['Float']['input']>;
  extraChargesIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  extraChargesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  extraChargesLT?: InputMaybe<Scalars['Float']['input']>;
  extraChargesLTE?: InputMaybe<Scalars['Float']['input']>;
  extraChargesNEQ?: InputMaybe<Scalars['Float']['input']>;
  extraChargesNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  extraChargesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** activities edge predicates */
  hasActivities?: InputMaybe<Scalars['Boolean']['input']>;
  hasActivitiesWith?: InputMaybe<Array<JobActivityWhereInput>>;
  /** assignment_history edge predicates */
  hasAssignmentHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssignmentHistoryWith?: InputMaybe<Array<JobAssignmentHistoryWhereInput>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api edge predicates */
  hasCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** doc_urls edge predicates */
  hasDocUrls?: InputMaybe<Scalars['Boolean']['input']>;
  hasDocUrlsWith?: InputMaybe<Array<JobDocUrlWhereInput>>;
  /** epc edge predicates */
  hasEpc?: InputMaybe<Scalars['Boolean']['input']>;
  /** epc_partner edge predicates */
  hasEpcPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasEpcPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  hasEpcWith?: InputMaybe<Array<OptionListWhereInput>>;
  /** estimate edge predicates */
  hasEstimate?: InputMaybe<Scalars['Boolean']['input']>;
  /** estimate_pdf edge predicates */
  hasEstimatePdf?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimatePdfWith?: InputMaybe<Array<DocumentWhereInput>>;
  hasEstimateWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** home_owner edge predicates */
  hasHomeOwner?: InputMaybe<Scalars['Boolean']['input']>;
  hasHomeOwnerWith?: InputMaybe<Array<HomeOwnerWhereInput>>;
  /** integration_partner edge predicates */
  hasIntegrationPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** notes edge predicates */
  hasNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotesWith?: InputMaybe<Array<JobNoteWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** payments edge predicates */
  hasPayments?: InputMaybe<Scalars['Boolean']['input']>;
  hasPaymentsWith?: InputMaybe<Array<PaymentWhereInput>>;
  /** progress_history edge predicates */
  hasProgressHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgressHistoryWith?: InputMaybe<Array<JobProgressHistoryWhereInput>>;
  /** requester edge predicates */
  hasRequester?: InputMaybe<Scalars['Boolean']['input']>;
  hasRequesterWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** sales_rep edge predicates */
  hasSalesRep?: InputMaybe<Scalars['Boolean']['input']>;
  hasSalesRepWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** inspection_date field predicates */
  inspectionDate?: InputMaybe<Scalars['Time']['input']>;
  inspectionDateGT?: InputMaybe<Scalars['Time']['input']>;
  inspectionDateGTE?: InputMaybe<Scalars['Time']['input']>;
  inspectionDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  inspectionDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  inspectionDateLT?: InputMaybe<Scalars['Time']['input']>;
  inspectionDateLTE?: InputMaybe<Scalars['Time']['input']>;
  inspectionDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  inspectionDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  inspectionDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** inspection_doc_url field predicates */
  inspectionDocURL?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLContains?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLGT?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLGTE?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  inspectionDocURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  inspectionDocURLLT?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLLTE?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLNEQ?: InputMaybe<Scalars['String']['input']>;
  inspectionDocURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  inspectionDocURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** inspection_required field predicates */
  inspectionRequired?: InputMaybe<Scalars['Boolean']['input']>;
  inspectionRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  inspectionRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  inspectionRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** install_date field predicates */
  installDate?: InputMaybe<Scalars['Time']['input']>;
  installDateGT?: InputMaybe<Scalars['Time']['input']>;
  installDateGTE?: InputMaybe<Scalars['Time']['input']>;
  installDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  installDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  installDateLT?: InputMaybe<Scalars['Time']['input']>;
  installDateLTE?: InputMaybe<Scalars['Time']['input']>;
  installDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  installDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  installDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** latitude field predicates */
  latitude?: InputMaybe<Scalars['Float']['input']>;
  latitudeGT?: InputMaybe<Scalars['Float']['input']>;
  latitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  latitudeLT?: InputMaybe<Scalars['Float']['input']>;
  latitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  latitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** layer2_material field predicates */
  layer2Material?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialContains?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialGT?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialGTE?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer2MaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  layer2MaterialLT?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialLTE?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  layer2MaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer2MaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** layer3_material field predicates */
  layer3Material?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialContains?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialGT?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialGTE?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer3MaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  layer3MaterialLT?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialLTE?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  layer3MaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  layer3MaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** layers field predicates */
  layers?: InputMaybe<Scalars['Int']['input']>;
  layersGT?: InputMaybe<Scalars['Int']['input']>;
  layersGTE?: InputMaybe<Scalars['Int']['input']>;
  layersIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  layersIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  layersLT?: InputMaybe<Scalars['Int']['input']>;
  layersLTE?: InputMaybe<Scalars['Int']['input']>;
  layersNEQ?: InputMaybe<Scalars['Int']['input']>;
  layersNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  layersNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** longitude field predicates */
  longitude?: InputMaybe<Scalars['Float']['input']>;
  longitudeGT?: InputMaybe<Scalars['Float']['input']>;
  longitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  longitudeLT?: InputMaybe<Scalars['Float']['input']>;
  longitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  longitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** lowSlope field predicates */
  lowslope?: InputMaybe<Scalars['Boolean']['input']>;
  lowslopeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** material_delivery_date field predicates */
  materialDeliveryDate?: InputMaybe<Scalars['Time']['input']>;
  materialDeliveryDateGT?: InputMaybe<Scalars['Time']['input']>;
  materialDeliveryDateGTE?: InputMaybe<Scalars['Time']['input']>;
  materialDeliveryDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  materialDeliveryDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  materialDeliveryDateLT?: InputMaybe<Scalars['Time']['input']>;
  materialDeliveryDateLTE?: InputMaybe<Scalars['Time']['input']>;
  materialDeliveryDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  materialDeliveryDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  materialDeliveryDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** measurement_type field predicates */
  measurementType?: InputMaybe<Scalars['Int']['input']>;
  measurementTypeGT?: InputMaybe<Scalars['Int']['input']>;
  measurementTypeGTE?: InputMaybe<Scalars['Int']['input']>;
  measurementTypeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  measurementTypeLT?: InputMaybe<Scalars['Int']['input']>;
  measurementTypeLTE?: InputMaybe<Scalars['Int']['input']>;
  measurementTypeNEQ?: InputMaybe<Scalars['Int']['input']>;
  measurementTypeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** new_roofing_material field predicates */
  newRoofingMaterial?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialContains?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialContainsFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialEqualFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialGT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialGTE?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialHasPrefix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialHasSuffix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  newRoofingMaterialLT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLTE?: InputMaybe<Scalars['String']['input']>;
  /** new_roofing_material_low_slope field predicates */
  newRoofingMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeContains?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeContainsFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeEqualFold?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeGT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeGTE?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialLowSlopeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  newRoofingMaterialLowSlopeLT?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeLTE?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeNEQ?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlopeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialLowSlopeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  newRoofingMaterialNEQ?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  newRoofingMaterialNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<JobWhereInput>;
  /** note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<JobWhereInput>>;
  /** override_summary field predicates */
  overrideSummary?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryContains?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryContainsFold?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryEqualFold?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryGT?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryGTE?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  overrideSummaryIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  overrideSummaryLT?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryLTE?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryNEQ?: InputMaybe<Scalars['String']['input']>;
  overrideSummaryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  overrideSummaryNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner_email field predicates */
  ownerEmail?: InputMaybe<Scalars['String']['input']>;
  ownerEmailContains?: InputMaybe<Scalars['String']['input']>;
  ownerEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerEmailGT?: InputMaybe<Scalars['String']['input']>;
  ownerEmailGTE?: InputMaybe<Scalars['String']['input']>;
  ownerEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerEmailLT?: InputMaybe<Scalars['String']['input']>;
  ownerEmailLTE?: InputMaybe<Scalars['String']['input']>;
  ownerEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner_first_name field predicates */
  ownerFirstName?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameContains?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameGT?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameGTE?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerFirstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerFirstNameLT?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameLTE?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerFirstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerFirstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner_last_name field predicates */
  ownerLastName?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameContains?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameGT?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameGTE?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerLastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerLastNameLT?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameLTE?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerLastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerLastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** owner_phone field predicates */
  ownerPhone?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneContains?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneGT?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneGTE?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerPhoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  ownerPhoneLT?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneLTE?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneNEQ?: InputMaybe<Scalars['String']['input']>;
  ownerPhoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ownerPhoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** partial_percentage field predicates */
  partialPercentage?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageGT?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageGTE?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  partialPercentageIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  partialPercentageLT?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageLTE?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageNEQ?: InputMaybe<Scalars['Float']['input']>;
  partialPercentageNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  partialPercentageNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** permit_required field predicates */
  permitRequired?: InputMaybe<Scalars['Boolean']['input']>;
  permitRequiredIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  permitRequiredNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  permitRequiredNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** po_number field predicates */
  poNumber?: InputMaybe<Scalars['String']['input']>;
  poNumberContains?: InputMaybe<Scalars['String']['input']>;
  poNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  poNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  poNumberGT?: InputMaybe<Scalars['String']['input']>;
  poNumberGTE?: InputMaybe<Scalars['String']['input']>;
  poNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  poNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  poNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  poNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  poNumberLT?: InputMaybe<Scalars['String']['input']>;
  poNumberLTE?: InputMaybe<Scalars['String']['input']>;
  poNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  poNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  poNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** price field predicates */
  price?: InputMaybe<Scalars['Float']['input']>;
  priceGT?: InputMaybe<Scalars['Float']['input']>;
  priceGTE?: InputMaybe<Scalars['Float']['input']>;
  priceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  priceLT?: InputMaybe<Scalars['Float']['input']>;
  priceLTE?: InputMaybe<Scalars['Float']['input']>;
  priceNEQ?: InputMaybe<Scalars['Float']['input']>;
  priceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** prod_images_url field predicates */
  prodImagesURL?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLContains?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLGT?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLGTE?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  prodImagesURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  prodImagesURLLT?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLLTE?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLNEQ?: InputMaybe<Scalars['String']['input']>;
  prodImagesURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  prodImagesURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** progress field predicates */
  progress?: InputMaybe<JobProgress>;
  /** progress_at field predicates */
  progressAt?: InputMaybe<Scalars['Time']['input']>;
  progressAtGT?: InputMaybe<Scalars['Time']['input']>;
  progressAtGTE?: InputMaybe<Scalars['Time']['input']>;
  progressAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressAtLT?: InputMaybe<Scalars['Time']['input']>;
  progressAtLTE?: InputMaybe<Scalars['Time']['input']>;
  progressAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  progressAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** progress_flag_at field predicates */
  progressFlagAt?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtGT?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtGTE?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressFlagAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressFlagAtLT?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtLTE?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressFlagAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressIn?: InputMaybe<Array<JobProgress>>;
  /** progress_inspection_date field predicates */
  progressInspectionDate?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDateGT?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDateGTE?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressInspectionDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressInspectionDateLT?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDateLTE?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressInspectionDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressNEQ?: InputMaybe<JobProgress>;
  progressNotIn?: InputMaybe<Array<JobProgress>>;
  progressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** redeck field predicates */
  redeck?: InputMaybe<Scalars['Boolean']['input']>;
  redeckNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** region_id field predicates */
  regionID?: InputMaybe<Scalars['Int']['input']>;
  regionIDGT?: InputMaybe<Scalars['Int']['input']>;
  regionIDGTE?: InputMaybe<Scalars['Int']['input']>;
  regionIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  regionIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  regionIDLT?: InputMaybe<Scalars['Int']['input']>;
  regionIDLTE?: InputMaybe<Scalars['Int']['input']>;
  regionIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  regionIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  regionIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** rep_email field predicates */
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repEmailContains?: InputMaybe<Scalars['String']['input']>;
  repEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  repEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  repEmailGT?: InputMaybe<Scalars['String']['input']>;
  repEmailGTE?: InputMaybe<Scalars['String']['input']>;
  repEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  repEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  repEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  repEmailLT?: InputMaybe<Scalars['String']['input']>;
  repEmailLTE?: InputMaybe<Scalars['String']['input']>;
  repEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  repEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** rep_first_name field predicates */
  repFirstName?: InputMaybe<Scalars['String']['input']>;
  repFirstNameContains?: InputMaybe<Scalars['String']['input']>;
  repFirstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  repFirstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  repFirstNameGT?: InputMaybe<Scalars['String']['input']>;
  repFirstNameGTE?: InputMaybe<Scalars['String']['input']>;
  repFirstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  repFirstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  repFirstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repFirstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  repFirstNameLT?: InputMaybe<Scalars['String']['input']>;
  repFirstNameLTE?: InputMaybe<Scalars['String']['input']>;
  repFirstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  repFirstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repFirstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** rep_last_name field predicates */
  repLastName?: InputMaybe<Scalars['String']['input']>;
  repLastNameContains?: InputMaybe<Scalars['String']['input']>;
  repLastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  repLastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  repLastNameGT?: InputMaybe<Scalars['String']['input']>;
  repLastNameGTE?: InputMaybe<Scalars['String']['input']>;
  repLastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  repLastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  repLastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repLastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  repLastNameLT?: InputMaybe<Scalars['String']['input']>;
  repLastNameLTE?: InputMaybe<Scalars['String']['input']>;
  repLastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  repLastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repLastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** rep_mobile field predicates */
  repMobile?: InputMaybe<Scalars['String']['input']>;
  repMobileContains?: InputMaybe<Scalars['String']['input']>;
  repMobileContainsFold?: InputMaybe<Scalars['String']['input']>;
  repMobileEqualFold?: InputMaybe<Scalars['String']['input']>;
  repMobileGT?: InputMaybe<Scalars['String']['input']>;
  repMobileGTE?: InputMaybe<Scalars['String']['input']>;
  repMobileHasPrefix?: InputMaybe<Scalars['String']['input']>;
  repMobileHasSuffix?: InputMaybe<Scalars['String']['input']>;
  repMobileIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repMobileIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  repMobileLT?: InputMaybe<Scalars['String']['input']>;
  repMobileLTE?: InputMaybe<Scalars['String']['input']>;
  repMobileNEQ?: InputMaybe<Scalars['String']['input']>;
  repMobileNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  repMobileNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** shingle_color field predicates */
  shingleColor?: InputMaybe<Scalars['String']['input']>;
  shingleColorContains?: InputMaybe<Scalars['String']['input']>;
  shingleColorContainsFold?: InputMaybe<Scalars['String']['input']>;
  shingleColorEqualFold?: InputMaybe<Scalars['String']['input']>;
  shingleColorGT?: InputMaybe<Scalars['String']['input']>;
  shingleColorGTE?: InputMaybe<Scalars['String']['input']>;
  shingleColorHasPrefix?: InputMaybe<Scalars['String']['input']>;
  shingleColorHasSuffix?: InputMaybe<Scalars['String']['input']>;
  shingleColorIn?: InputMaybe<Array<Scalars['String']['input']>>;
  shingleColorIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  shingleColorLT?: InputMaybe<Scalars['String']['input']>;
  shingleColorLTE?: InputMaybe<Scalars['String']['input']>;
  shingleColorNEQ?: InputMaybe<Scalars['String']['input']>;
  shingleColorNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  shingleColorNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** source field predicates */
  source?: InputMaybe<JobSource>;
  sourceIn?: InputMaybe<Array<JobSource>>;
  sourceNEQ?: InputMaybe<JobSource>;
  sourceNotIn?: InputMaybe<Array<JobSource>>;
  /** state field predicates */
  state?: InputMaybe<Scalars['String']['input']>;
  stateContains?: InputMaybe<Scalars['String']['input']>;
  stateContainsFold?: InputMaybe<Scalars['String']['input']>;
  stateEqualFold?: InputMaybe<Scalars['String']['input']>;
  stateGT?: InputMaybe<Scalars['String']['input']>;
  stateGTE?: InputMaybe<Scalars['String']['input']>;
  stateHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stateHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stateIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  stateLT?: InputMaybe<Scalars['String']['input']>;
  stateLTE?: InputMaybe<Scalars['String']['input']>;
  stateNEQ?: InputMaybe<Scalars['String']['input']>;
  stateNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status field predicates */
  status?: InputMaybe<JobStatus>;
  /** status_at field predicates */
  statusAt?: InputMaybe<Scalars['Time']['input']>;
  statusAtGT?: InputMaybe<Scalars['Time']['input']>;
  statusAtGTE?: InputMaybe<Scalars['Time']['input']>;
  statusAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  statusAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusAtLT?: InputMaybe<Scalars['Time']['input']>;
  statusAtLTE?: InputMaybe<Scalars['Time']['input']>;
  statusAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  statusAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  statusAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** status_flag_at field predicates */
  statusFlagAt?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAtGT?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAtGTE?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  statusFlagAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusFlagAtLT?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAtLTE?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  statusFlagAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  statusIn?: InputMaybe<Array<JobStatus>>;
  statusNEQ?: InputMaybe<JobStatus>;
  statusNotIn?: InputMaybe<Array<JobStatus>>;
  /** street_name field predicates */
  streetName?: InputMaybe<Scalars['String']['input']>;
  streetNameContains?: InputMaybe<Scalars['String']['input']>;
  streetNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  streetNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  streetNameGT?: InputMaybe<Scalars['String']['input']>;
  streetNameGTE?: InputMaybe<Scalars['String']['input']>;
  streetNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  streetNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  streetNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  streetNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  streetNameLT?: InputMaybe<Scalars['String']['input']>;
  streetNameLTE?: InputMaybe<Scalars['String']['input']>;
  streetNameNEQ?: InputMaybe<Scalars['String']['input']>;
  streetNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  streetNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** street_number field predicates */
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  streetNumberContains?: InputMaybe<Scalars['String']['input']>;
  streetNumberContainsFold?: InputMaybe<Scalars['String']['input']>;
  streetNumberEqualFold?: InputMaybe<Scalars['String']['input']>;
  streetNumberGT?: InputMaybe<Scalars['String']['input']>;
  streetNumberGTE?: InputMaybe<Scalars['String']['input']>;
  streetNumberHasPrefix?: InputMaybe<Scalars['String']['input']>;
  streetNumberHasSuffix?: InputMaybe<Scalars['String']['input']>;
  streetNumberIn?: InputMaybe<Array<Scalars['String']['input']>>;
  streetNumberIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  streetNumberLT?: InputMaybe<Scalars['String']['input']>;
  streetNumberLTE?: InputMaybe<Scalars['String']['input']>;
  streetNumberNEQ?: InputMaybe<Scalars['String']['input']>;
  streetNumberNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  streetNumberNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** webhook_url field predicates */
  webhookURL?: InputMaybe<Scalars['String']['input']>;
  webhookURLContains?: InputMaybe<Scalars['String']['input']>;
  webhookURLContainsFold?: InputMaybe<Scalars['String']['input']>;
  webhookURLEqualFold?: InputMaybe<Scalars['String']['input']>;
  webhookURLGT?: InputMaybe<Scalars['String']['input']>;
  webhookURLGTE?: InputMaybe<Scalars['String']['input']>;
  webhookURLHasPrefix?: InputMaybe<Scalars['String']['input']>;
  webhookURLHasSuffix?: InputMaybe<Scalars['String']['input']>;
  webhookURLIn?: InputMaybe<Array<Scalars['String']['input']>>;
  webhookURLIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  webhookURLLT?: InputMaybe<Scalars['String']['input']>;
  webhookURLLTE?: InputMaybe<Scalars['String']['input']>;
  webhookURLNEQ?: InputMaybe<Scalars['String']['input']>;
  webhookURLNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  webhookURLNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** work_order_price field predicates */
  workOrderPrice?: InputMaybe<Scalars['Float']['input']>;
  workOrderPriceGT?: InputMaybe<Scalars['Float']['input']>;
  workOrderPriceGTE?: InputMaybe<Scalars['Float']['input']>;
  workOrderPriceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  workOrderPriceLT?: InputMaybe<Scalars['Float']['input']>;
  workOrderPriceLTE?: InputMaybe<Scalars['Float']['input']>;
  workOrderPriceNEQ?: InputMaybe<Scalars['Float']['input']>;
  workOrderPriceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** zip field predicates */
  zip?: InputMaybe<Scalars['String']['input']>;
  zipContains?: InputMaybe<Scalars['String']['input']>;
  zipContainsFold?: InputMaybe<Scalars['String']['input']>;
  zipEqualFold?: InputMaybe<Scalars['String']['input']>;
  zipGT?: InputMaybe<Scalars['String']['input']>;
  zipGTE?: InputMaybe<Scalars['String']['input']>;
  zipHasPrefix?: InputMaybe<Scalars['String']['input']>;
  zipHasSuffix?: InputMaybe<Scalars['String']['input']>;
  zipIn?: InputMaybe<Array<Scalars['String']['input']>>;
  zipIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  zipLT?: InputMaybe<Scalars['String']['input']>;
  zipLTE?: InputMaybe<Scalars['String']['input']>;
  zipNEQ?: InputMaybe<Scalars['String']['input']>;
  zipNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  zipNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LoginInput = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type LoginResult = {
  __typename?: 'LoginResult';
  token: Scalars['String']['output'];
  user: SessionUser;
};

export enum Measure {
  AllStructuresOnParcel = 'AllStructuresOnParcel',
  PrimaryPlusDetachedGarage = 'PrimaryPlusDetachedGarage',
  PrimaryStructureOnly = 'PrimaryStructureOnly'
}

export type Measurement = {
  pitch: Scalars['String']['input'];
  squares: Scalars['Float']['input'];
};

export type MobileAppSettings = {
  __typename?: 'MobileAppSettings';
  hideTabs: Array<Scalars['String']['output']>;
  logoURL: Scalars['String']['output'];
  primaryColor: Scalars['String']['output'];
};

export type Mutation = {
  __typename?: 'Mutation';
  /** request reset password email */
  accForgotPwd: Scalars['Boolean']['output'];
  /**  creates a new api user and returns its pwd  */
  addApiUser: Scalars['String']['output'];
  /** approve estimate request */
  approveEstimate: Scalars['Boolean']['output'];
  approveInstallation: Scalars['Boolean']['output'];
  /** DEPRECATED approve job request */
  approveJob: Scalars['Boolean']['output'];
  /**  Invite a partner to job  */
  assignPartnerToJob: Scalars['String']['output'];
  bookInstallation: Scalars['Boolean']['output'];
  /**  enable | disabled api user access  */
  changeApiUserStatus: Scalars['Boolean']['output'];
  contactUs: Scalars['Boolean']['output'];
  /** create Job Note */
  creatJobNote: Scalars['Boolean']['output'];
  /** create a new job manually */
  createEstimate: Scalars['ID']['output'];
  /** create a new training course */
  createTrainingCourse: TrainingCourse;
  /**  creates a new  system user  */
  createUser: Scalars['String']['output'];
  /**  delete a document from storage and db  */
  deleteDoc: Scalars['Boolean']['output'];
  /** deny estimate request */
  denyEstimate: Scalars['Boolean']['output'];
  denyInstallation: Scalars['Boolean']['output'];
  /** DEPRECATED disapprove job request */
  disapproveJob: Scalars['Boolean']['output'];
  /**  document upload url  */
  documentUploadUrl: Document;
  editApiUser: Scalars['Boolean']['output'];
  /** update Job Note */
  editJobNote: Scalars['Boolean']['output'];
  /**  save partner basic detail  */
  invitePartner: Invite;
  jobDelay: Scalars['Boolean']['output'];
  /**  job doc upload url  */
  jobDocUploadUrl: Document;
  /**  update job progress  */
  jobProgressUpdate: Scalars['Boolean']['output'];
  login: LoginResult;
  logout: Scalars['Boolean']['output'];
  markServiceArea: Scalars['Boolean']['output'];
  notificationRead: Scalars['Boolean']['output'];
  /** set user password reset email instruction */
  partnerContactSendPwdResetEmail: Scalars['Boolean']['output'];
  /**  company doc upload url  */
  partnerDocUploadUrl: Document;
  /**  partner video access */
  partnerTrainingVideoAccess: Scalars['Boolean']['output'];
  /**  public upload url  */
  publicDataUploadUrl: Document;
  /**  set new pwd to give api username  */
  refreshApiUserPwd: Scalars['String']['output'];
  /**
   * remove denied status of an estimate
   * only estimate owner(submitted by), company-admin or site-admin can do it
   */
  removeDenied: Scalars['Boolean']['output'];
  /**  request an estimate used by mobile app  */
  requestAnEstimate: Scalars['String']['output'];
  /**  api access save  */
  saveApiAccess: Scalars['Boolean']['output'];
  /** save partner lead time */
  saveLeadTime: Scalars['Boolean']['output'];
  saveNotifySettings: Scalars['Boolean']['output'];
  /**  save partner basic detail  */
  savePartner: Scalars['Boolean']['output'];
  /**  steps completed in save-partner process */
  savePartnerCompletedSteps: Scalars['Boolean']['output'];
  /** save a partner contact */
  savePartnerContact: Scalars['Boolean']['output'];
  /** partner, create primary contact */
  savePartnerContacts: Array<PartnerContact>;
  savePartnerMobileSettings: Scalars['Boolean']['output'];
  /**  save operations detail  */
  savePartnerOperations: Scalars['Boolean']['output'];
  saveProduct: Scalars['Boolean']['output'];
  saveProductPackage: Scalars['Boolean']['output'];
  /** save partner service */
  saveService: Scalars['Boolean']['output'];
  /** save partner work city */
  saveServiceCity: Scalars['Boolean']['output'];
  /** save partner work state */
  saveServiceState: Scalars['Boolean']['output'];
  /**  save a training video  */
  saveTrainingVideo: Scalars['Boolean']['output'];
  /** set session user account password */
  setMyPwd: Scalars['Boolean']['output'];
  /**  set partner active status as true or false  */
  setPartnerActive: Scalars['Boolean']['output'];
  /** set user password */
  setUserPwd: Scalars['Boolean']['output'];
  /**  survey docs */
  surveyDocUploadUrl: Document;
  /** hold a survey slot to reserve */
  surveyRequest: Scalars['ID']['output'];
  /** reserve a survey slot */
  surveyReserve: Survey;
  /**  test job price calc  */
  testPricing: PriceSummary;
  undoDenyInstallation: Scalars['Boolean']['output'];
  /** update user profile info */
  updateProfile: Scalars['Boolean']['output'];
  updateUser: Scalars['Boolean']['output'];
};


export type MutationAccForgotPwdArgs = {
  email: Scalars['String']['input'];
};


export type MutationAddApiUserArgs = {
  username: Scalars['String']['input'];
};


export type MutationApproveEstimateArgs = {
  input: ApproveEstimateInput;
};


export type MutationApproveInstallationArgs = {
  input: InstallationApproveInput;
};


export type MutationApproveJobArgs = {
  id: Scalars['ID']['input'];
  input?: InputMaybe<ApproveJobInput>;
};


export type MutationAssignPartnerToJobArgs = {
  jobID: Scalars['ID']['input'];
  partnerID: Scalars['ID']['input'];
};


export type MutationBookInstallationArgs = {
  owner: InstallationOwnerInput;
  pkgID: Scalars['ID']['input'];
  productID?: InputMaybe<Scalars['ID']['input']>;
  type: InstallationType;
};


export type MutationChangeApiUserStatusArgs = {
  id: Scalars['ID']['input'];
  isActive: Scalars['Boolean']['input'];
};


export type MutationContactUsArgs = {
  reason: Scalars['String']['input'];
};


export type MutationCreatJobNoteArgs = {
  jobID: Scalars['ID']['input'];
  note: Scalars['String']['input'];
};


export type MutationCreateEstimateArgs = {
  input: CreateEstimateInput;
};


export type MutationCreateTrainingCourseArgs = {
  name: Scalars['String']['input'];
};


export type MutationCreateUserArgs = {
  input?: InputMaybe<CreateUserInput>;
};


export type MutationDeleteDocArgs = {
  id: Scalars['ID']['input'];
};


export type MutationDenyEstimateArgs = {
  input: DenyEstimateInput;
};


export type MutationDenyInstallationArgs = {
  id: Scalars['ID']['input'];
  reason: Scalars['String']['input'];
};


export type MutationDisapproveJobArgs = {
  id: Scalars['ID']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
};


export type MutationDocumentUploadUrlArgs = {
  doc: InputDocument;
};


export type MutationEditApiUserArgs = {
  input: ApiUserInput;
};


export type MutationEditJobNoteArgs = {
  jobID: Scalars['ID']['input'];
  note: Scalars['String']['input'];
  noteID: Scalars['ID']['input'];
};


export type MutationInvitePartnerArgs = {
  input: InvitePartnerInput;
};


export type MutationJobDelayArgs = {
  flag: Scalars['Boolean']['input'];
  id: Scalars['ID']['input'];
  reason: Scalars['String']['input'];
};


export type MutationJobDocUploadUrlArgs = {
  doc: InputFile;
  jobID: Scalars['ID']['input'];
  section: DocumentSection;
};


export type MutationJobProgressUpdateArgs = {
  data?: InputMaybe<ProgressInput>;
  id: Scalars['ID']['input'];
  note: Scalars['String']['input'];
  step: JobProgress;
  stepComplete: Scalars['Boolean']['input'];
};


export type MutationLoginArgs = {
  input?: InputMaybe<LoginInput>;
};


export type MutationMarkServiceAreaArgs = {
  id: Scalars['ID']['input'];
  value: Scalars['Boolean']['input'];
};


export type MutationNotificationReadArgs = {
  messageID: Scalars['ID']['input'];
};


export type MutationPartnerContactSendPwdResetEmailArgs = {
  partnerID: Scalars['ID']['input'];
  userID: Scalars['ID']['input'];
};


export type MutationPartnerDocUploadUrlArgs = {
  doc: InputFile;
  partnerID: Scalars['ID']['input'];
  section: DocumentSection;
};


export type MutationPartnerTrainingVideoAccessArgs = {
  enabled: Scalars['Boolean']['input'];
  partnerID: Scalars['ID']['input'];
  videoID: Scalars['ID']['input'];
};


export type MutationPublicDataUploadUrlArgs = {
  doc: InputFile;
  entityID: Scalars['ID']['input'];
  section: PublicDataSection;
};


export type MutationRefreshApiUserPwdArgs = {
  id: Scalars['ID']['input'];
};


export type MutationRemoveDeniedArgs = {
  id: Scalars['ID']['input'];
};


export type MutationRequestAnEstimateArgs = {
  inp?: InputMaybe<EstimateRequest>;
};


export type MutationSaveApiAccessArgs = {
  input: ApiAccessInput;
};


export type MutationSaveLeadTimeArgs = {
  asphalt?: InputMaybe<Scalars['String']['input']>;
  metal?: InputMaybe<Scalars['String']['input']>;
  partnerID: Scalars['ID']['input'];
  tile?: InputMaybe<Scalars['String']['input']>;
};


export type MutationSaveNotifySettingsArgs = {
  email: Scalars['Boolean']['input'];
  topicID: Scalars['String']['input'];
  userID: Scalars['ID']['input'];
};


export type MutationSavePartnerArgs = {
  input: PartnerInput;
};


export type MutationSavePartnerCompletedStepsArgs = {
  done?: InputMaybe<Scalars['Boolean']['input']>;
  partnerID: Scalars['ID']['input'];
  step: Scalars['Int']['input'];
};


export type MutationSavePartnerContactArgs = {
  contact: PartnerContactInput;
  partnerID: Scalars['ID']['input'];
};


export type MutationSavePartnerContactsArgs = {
  contacts: Array<PartnerContactInput>;
  partnerID: Scalars['ID']['input'];
};


export type MutationSavePartnerMobileSettingsArgs = {
  id: Scalars['ID']['input'];
  inp: InputMobileAppSettings;
};


export type MutationSavePartnerOperationsArgs = {
  inp: PartnerOperationInput;
  partnerID: Scalars['ID']['input'];
};


export type MutationSaveProductArgs = {
  input: ProductInput;
};


export type MutationSaveProductPackageArgs = {
  input: ProductPackageInput;
};


export type MutationSaveServiceArgs = {
  active: Scalars['Boolean']['input'];
  id: Scalars['ID']['input'];
  partnerID: Scalars['ID']['input'];
  service: Service;
};


export type MutationSaveServiceCityArgs = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  licNo?: InputMaybe<Scalars['String']['input']>;
  partnerID: Scalars['ID']['input'];
  postalID: Scalars['ID']['input'];
  proofDocID?: InputMaybe<Scalars['String']['input']>;
};


export type MutationSaveServiceStateArgs = {
  expDate?: InputMaybe<Scalars['Time']['input']>;
  licNo?: InputMaybe<Scalars['String']['input']>;
  partnerID: Scalars['ID']['input'];
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  state: Scalars['String']['input'];
};


export type MutationSaveTrainingVideoArgs = {
  inp?: InputMaybe<InputTrainingVideo>;
};


export type MutationSetMyPwdArgs = {
  confirmPwd: Scalars['String']['input'];
  oldPwd: Scalars['String']['input'];
  pwd: Scalars['String']['input'];
};


export type MutationSetPartnerActiveArgs = {
  partnerID: Scalars['ID']['input'];
  value: Scalars['Boolean']['input'];
};


export type MutationSetUserPwdArgs = {
  confirmPwd: Scalars['String']['input'];
  pwd: Scalars['String']['input'];
  userID: Scalars['ID']['input'];
};


export type MutationSurveyDocUploadUrlArgs = {
  doc: InputFile;
  section: DocumentSection;
  surveyID: Scalars['ID']['input'];
};


export type MutationSurveyRequestArgs = {
  date: Scalars['String']['input'];
  slotID: Scalars['ID']['input'];
};


export type MutationSurveyReserveArgs = {
  input: SurveyInput;
};


export type MutationTestPricingArgs = {
  job: CreateEstimateInput;
  measure: Array<Measurement>;
};


export type MutationUndoDenyInstallationArgs = {
  id: Scalars['ID']['input'];
};


export type MutationUpdateProfileArgs = {
  input?: InputMaybe<InputUserProfile>;
};


export type MutationUpdateUserArgs = {
  input?: InputMaybe<UpdateUserInput>;
};

export type NearmapEstimateDetail = {
  __typename?: 'NearmapEstimateDetail';
  dominantRoofMaterial: Scalars['String']['output'];
  dominantRoofMaterialID: Scalars['Int']['output'];
  dutchGableArea: Scalars['Float']['output'];
  dutchGableRatio: Scalars['Float']['output'];
  flatArea: Scalars['Float']['output'];
  flatRatio: Scalars['Float']['output'];
  gableArea: Scalars['Float']['output'];
  gableRatio: Scalars['Float']['output'];
  hipArea: Scalars['Float']['output'];
  hipRatio: Scalars['Float']['output'];
  metalArea: Scalars['Float']['output'];
  metalRatio: Scalars['Float']['output'];
  price: Scalars['Float']['output'];
  primaryPitch: Scalars['Float']['output'];
  primaryPitchInDegrees: Scalars['Float']['output'];
  roofCount: Scalars['Int']['output'];
  roofMaterialRatioTotal: Scalars['Float']['output'];
  roofMaterialSurfaceAreaTotal: Scalars['Float']['output'];
  roofTypeRatioTotal: Scalars['Float']['output'];
  roofTypeSurfaceAreaTotal: Scalars['Float']['output'];
  shingleArea: Scalars['Float']['output'];
  shingleRatio: Scalars['Float']['output'];
  tileArea: Scalars['Float']['output'];
  tileRatio: Scalars['Float']['output'];
  totalUnclippedArea: Scalars['Float']['output'];
  treeOverhangAreaPrimaryRoof: Scalars['Float']['output'];
  treeOverhangConfidencePrimaryRoof: Scalars['Float']['output'];
  treeOverhangCount: Scalars['Int']['output'];
  treeOverhangPresenceConfidence: Scalars['Float']['output'];
  treeOverhangPresent: Scalars['Boolean']['output'];
  treeOverhangRatioPrimaryRoof: Scalars['Float']['output'];
  treeOverhangTotalClippedArea: Scalars['Float']['output'];
  treeOverhangTotalUnClippedArea: Scalars['Float']['output'];
  turretArea: Scalars['Float']['output'];
  turretRatio: Scalars['Float']['output'];
};

export type NearmapResponse = {
  __typename?: 'NearmapResponse';
  detail: NearmapEstimateDetail;
  raw: Scalars['Map']['output'];
};

export enum NewMaterial {
  ArchBestValue = 'ArchBestValue',
  ArchMoreExpensive = 'ArchMoreExpensive',
  ModBit = 'ModBit',
  Repaper = 'Repaper',
  StandingSeamMetal = 'StandingSeamMetal',
  TileClayBarrel = 'TileClayBarrel',
  TileConcrete = 'TileConcrete'
}

export type Node = {
  /** The id of the object. */
  id: Scalars['ID']['output'];
};

export type Notify = {
  __typename?: 'Notify';
  id: Scalars['ID']['output'];
  receiveEmail: Scalars['Boolean']['output'];
  receiveSMS: Scalars['Boolean']['output'];
  topic: Scalars['String']['output'];
};

export type NotifyMessage = {
  __typename?: 'NotifyMessage';
  channel: Channel;
  createdAt: Scalars['Time']['output'];
  from: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  message: Scalars['String']['output'];
  refID?: Maybe<Scalars['String']['output']>;
  title: Scalars['String']['output'];
  topic: Topic;
  unread: Scalars['Boolean']['output'];
};

export type NotifyMessageConnection = {
  __typename?: 'NotifyMessageConnection';
  edges?: Maybe<Array<NotifyMessageEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type NotifyMessageEdge = {
  __typename?: 'NotifyMessageEdge';
  cursor: Scalars['Cursor']['output'];
  node: NotifyMessage;
};

/**
 * NotifySettingWhereInput is used for filtering NotifySetting objects.
 * Input was generated by ent.
 */
export type NotifySettingWhereInput = {
  and?: InputMaybe<Array<NotifySettingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NotifySettingWhereInput>;
  or?: InputMaybe<Array<NotifySettingWhereInput>>;
  /** receive_email field predicates */
  receiveEmail?: InputMaybe<Scalars['Boolean']['input']>;
  receiveEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  receiveEmailNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  receiveEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** receive_sms field predicates */
  receiveSms?: InputMaybe<Scalars['Boolean']['input']>;
  receiveSmsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  receiveSmsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  receiveSmsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** topic_id field predicates */
  topicID?: InputMaybe<Scalars['String']['input']>;
  topicIDContains?: InputMaybe<Scalars['String']['input']>;
  topicIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  topicIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  topicIDGT?: InputMaybe<Scalars['String']['input']>;
  topicIDGTE?: InputMaybe<Scalars['String']['input']>;
  topicIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  topicIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  topicIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  topicIDLT?: InputMaybe<Scalars['String']['input']>;
  topicIDLTE?: InputMaybe<Scalars['String']['input']>;
  topicIDNEQ?: InputMaybe<Scalars['String']['input']>;
  topicIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export enum NotifyType {
  Email = 'EMAIL',
  Sms = 'SMS'
}

export enum OptionListType {
  Epc = 'EPC',
  Finance = 'FINANCE'
}

/**
 * OptionListWhereInput is used for filtering OptionList objects.
 * Input was generated by ent.
 */
export type OptionListWhereInput = {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<OptionListWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** display_name field predicates */
  displayName?: InputMaybe<Scalars['String']['input']>;
  displayNameContains?: InputMaybe<Scalars['String']['input']>;
  displayNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  displayNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  displayNameGT?: InputMaybe<Scalars['String']['input']>;
  displayNameGTE?: InputMaybe<Scalars['String']['input']>;
  displayNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  displayNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  displayNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  displayNameLT?: InputMaybe<Scalars['String']['input']>;
  displayNameLTE?: InputMaybe<Scalars['String']['input']>;
  displayNameNEQ?: InputMaybe<Scalars['String']['input']>;
  displayNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** epc edge predicates */
  hasEpc?: InputMaybe<Scalars['Boolean']['input']>;
  /** epc_options edge predicates */
  hasEpcOptions?: InputMaybe<Scalars['Boolean']['input']>;
  hasEpcOptionsWith?: InputMaybe<Array<PartnerWhereInput>>;
  hasEpcWith?: InputMaybe<Array<JobWhereInput>>;
  /** finance_options edge predicates */
  hasFinanceOptions?: InputMaybe<Scalars['Boolean']['input']>;
  hasFinanceOptionsWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<OptionListWhereInput>;
  or?: InputMaybe<Array<OptionListWhereInput>>;
  /** order field predicates */
  order?: InputMaybe<Scalars['Int']['input']>;
  orderGT?: InputMaybe<Scalars['Int']['input']>;
  orderGTE?: InputMaybe<Scalars['Int']['input']>;
  orderIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  orderLT?: InputMaybe<Scalars['Int']['input']>;
  orderLTE?: InputMaybe<Scalars['Int']['input']>;
  orderNEQ?: InputMaybe<Scalars['Int']['input']>;
  orderNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** type field predicates */
  type?: InputMaybe<OptionListType>;
  typeIn?: InputMaybe<Array<OptionListType>>;
  typeNEQ?: InputMaybe<OptionListType>;
  typeNotIn?: InputMaybe<Array<OptionListType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type Options = {
  __typename?: 'Options';
  options?: Maybe<Array<Entity>>;
  type: OptionListType;
};

export enum OrderDirection {
  Asc = 'ASC',
  Desc = 'DESC'
}

export type Overview = {
  __typename?: 'Overview';
  id: Filter;
  items?: Maybe<Array<Maybe<OverviewItem>>>;
  total: Scalars['Int']['output'];
};

export type OverviewItem = {
  __typename?: 'OverviewItem';
  count: Scalars['Int']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
};

export type Package = {
  __typename?: 'Package';
  category: ProductType;
  description: Scalars['String']['output'];
  features: Array<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  items: Array<ProductInfo>;
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  soldAs: SoldAs;
};

export type PackageConnection = {
  __typename?: 'PackageConnection';
  edges?: Maybe<Array<PackageEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PackageEdge = {
  __typename?: 'PackageEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Package>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  hasNextPage: Scalars['Boolean']['output'];
  hasPreviousPage: Scalars['Boolean']['output'];
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type PageInput = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type Partner = Node & {
  __typename?: 'Partner';
  address?: Maybe<Scalars['String']['output']>;
  asphaltLeadT?: Maybe<Scalars['String']['output']>;
  contacts?: Maybe<Array<PartnerContact>>;
  createdAt: Scalars['Time']['output'];
  crewCount: Scalars['Int']['output'];
  downPayment?: Maybe<Scalars['Int']['output']>;
  epcOptions?: Maybe<Array<Scalars['ID']['output']>>;
  financeOptions?: Maybe<Array<Scalars['ID']['output']>>;
  id: Scalars['ID']['output'];
  installInHouse?: Maybe<Scalars['Boolean']['output']>;
  isActive: Scalars['Boolean']['output'];
  isNationWide?: Maybe<Scalars['Boolean']['output']>;
  jobCapacity: Scalars['Int']['output'];
  metalLeadT?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  pifDate?: Maybe<Scalars['Int']['output']>;
  salesVolume?: Maybe<Scalars['Int']['output']>;
  setupStepsCompleted: Scalars['Int']['output'];
  status: PartnerStatus;
  tileLeadT?: Maybe<Scalars['String']['output']>;
  type: PartnerType;
  website?: Maybe<Scalars['String']['output']>;
  yearsInBusiness?: Maybe<Scalars['Int']['output']>;
};

export type PartnerConnection = {
  __typename?: 'PartnerConnection';
  edges?: Maybe<Array<PartnerEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type PartnerContact = {
  __typename?: 'PartnerContact';
  accountStatus?: Maybe<AccountStatus>;
  createdAt: Scalars['Time']['output'];
  description?: Maybe<Scalars['String']['output']>;
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  otherEmail?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  picture?: Maybe<Scalars['String']['output']>;
  role?: Maybe<PartnerContactRole>;
  title?: Maybe<Scalars['String']['output']>;
  type?: Maybe<PartnerContactType>;
  userID: Scalars['ID']['output'];
};

export type PartnerContactEdge = {
  __typename?: 'PartnerContactEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<PartnerContact>;
};

export type PartnerContactInfo = {
  __typename?: 'PartnerContactInfo';
  contactType?: Maybe<PartnerContactType>;
  id: Scalars['ID']['output'];
  mobileAppSettings: MobileAppSettings;
  partnerName: Scalars['String']['output'];
  role?: Maybe<PartnerContactRole>;
  status: PartnerStatus;
  type: PartnerType;
};

export type PartnerContactInput = {
  accountStatus?: InputMaybe<AccountStatus>;
  description?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  id?: InputMaybe<Scalars['ID']['input']>;
  lastName: Scalars['String']['input'];
  otherEmail?: InputMaybe<Scalars['String']['input']>;
  phone: Scalars['String']['input'];
  role?: InputMaybe<PartnerContactRole>;
  title?: InputMaybe<Scalars['String']['input']>;
  type: PartnerContactType;
  userID?: InputMaybe<Scalars['ID']['input']>;
};

export enum PartnerContactRole {
  Admin = 'ADMIN',
  SalesRep = 'SALES_REP'
}

export enum PartnerContactType {
  Accounting = 'ACCOUNTING',
  Custom = 'CUSTOM',
  CustomerService = 'CUSTOMER_SERVICE',
  Invoicing = 'INVOICING',
  Operations = 'OPERATIONS',
  Primary = 'PRIMARY'
}

/**
 * PartnerContactWhereInput is used for filtering PartnerContact objects.
 * Input was generated by ent.
 */
export type PartnerContactWhereInput = {
  and?: InputMaybe<Array<PartnerContactWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** invoicing_email field predicates */
  invoicingEmail?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailContains?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailContainsFold?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailEqualFold?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailGT?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailGTE?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  invoicingEmailIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  invoicingEmailLT?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailLTE?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailNEQ?: InputMaybe<Scalars['String']['input']>;
  invoicingEmailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  invoicingEmailNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<PartnerContactWhereInput>;
  or?: InputMaybe<Array<PartnerContactWhereInput>>;
  /** role field predicates */
  role?: InputMaybe<PartnerContactRole>;
  roleIn?: InputMaybe<Array<PartnerContactRole>>;
  roleNEQ?: InputMaybe<PartnerContactRole>;
  roleNotIn?: InputMaybe<Array<PartnerContactRole>>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** type field predicates */
  type?: InputMaybe<PartnerContactType>;
  typeIn?: InputMaybe<Array<PartnerContactType>>;
  typeNEQ?: InputMaybe<PartnerContactType>;
  typeNotIn?: InputMaybe<Array<PartnerContactType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type PartnerEdge = {
  __typename?: 'PartnerEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Partner>;
};

export type PartnerInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  crewCount?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isNationWide?: InputMaybe<Scalars['Boolean']['input']>;
  jobCapacity?: InputMaybe<Scalars['Int']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  name: Scalars['String']['input'];
  type: PartnerType;
  website?: InputMaybe<Scalars['String']['input']>;
  yearsInBusiness?: InputMaybe<Scalars['Int']['input']>;
};

export type PartnerJob = {
  __typename?: 'PartnerJob';
  city: Scalars['String']['output'];
  companyName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
  notes?: Maybe<Scalars['String']['output']>;
  ownerFirstName: Scalars['String']['output'];
  ownerLastName: Scalars['String']['output'];
  price?: Maybe<Scalars['Float']['output']>;
  region: Scalars['String']['output'];
  repEmail: Scalars['String']['output'];
  repFirstName: Scalars['String']['output'];
  repLastName: Scalars['String']['output'];
  repMobile: Scalars['String']['output'];
  state: Scalars['String']['output'];
  status: Scalars['String']['output'];
  statusAt: Scalars['Time']['output'];
  streetName: Scalars['String']['output'];
  streetNumber: Scalars['String']['output'];
  zip: Scalars['String']['output'];
};

export type PartnerJobStats = {
  __typename?: 'PartnerJobStats';
  confirmedCount: Scalars['Int']['output'];
  confirmedCountFlagged: Scalars['Int']['output'];
  contactedCount: Scalars['Int']['output'];
  contactedCountFlagged: Scalars['Int']['output'];
  delayedCount: Scalars['Int']['output'];
  id: Scalars['ID']['output'];
  inProgressCount: Scalars['Int']['output'];
  inProgressCountFlagged: Scalars['Int']['output'];
  installedCount: Scalars['Int']['output'];
  installedCountFlagged: Scalars['Int']['output'];
  invoicedCount: Scalars['Int']['output'];
  invoicedCountFlagged: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  newCount: Scalars['Int']['output'];
  newCountFlagged: Scalars['Int']['output'];
  permittingCount: Scalars['Int']['output'];
  permittingCountFlagged: Scalars['Int']['output'];
  scheduledCount: Scalars['Int']['output'];
  scheduledCountFlagged: Scalars['Int']['output'];
  status: PartnerStatus;
  total: Scalars['Int']['output'];
  totalFlagged: Scalars['Int']['output'];
};

export type PartnerOperationInput = {
  downPayment?: InputMaybe<Scalars['Int']['input']>;
  epcOptions?: InputMaybe<Array<Scalars['ID']['input']>>;
  financeOptions?: InputMaybe<Array<Scalars['ID']['input']>>;
  installInHouse?: InputMaybe<Scalars['Boolean']['input']>;
  pifDate?: InputMaybe<Scalars['Int']['input']>;
  salesVolume?: InputMaybe<Scalars['Int']['input']>;
};

export type PartnerOrder = {
  direction: OrderDirection;
  field?: InputMaybe<PartnerOrderField>;
};

export enum PartnerOrderField {
  Created = 'CREATED'
}

export type PartnerService = {
  __typename?: 'PartnerService';
  active: Scalars['Boolean']['output'];
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  service: Service;
};

/**
 * PartnerServiceCityWhereInput is used for filtering PartnerServiceCity objects.
 * Input was generated by ent.
 */
export type PartnerServiceCityWhereInput = {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<PartnerServiceCityWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** license_no field predicates */
  licenseNo?: InputMaybe<Scalars['String']['input']>;
  licenseNoContains?: InputMaybe<Scalars['String']['input']>;
  licenseNoContainsFold?: InputMaybe<Scalars['String']['input']>;
  licenseNoEqualFold?: InputMaybe<Scalars['String']['input']>;
  licenseNoGT?: InputMaybe<Scalars['String']['input']>;
  licenseNoGTE?: InputMaybe<Scalars['String']['input']>;
  licenseNoHasPrefix?: InputMaybe<Scalars['String']['input']>;
  licenseNoHasSuffix?: InputMaybe<Scalars['String']['input']>;
  licenseNoIn?: InputMaybe<Array<Scalars['String']['input']>>;
  licenseNoIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  licenseNoLT?: InputMaybe<Scalars['String']['input']>;
  licenseNoLTE?: InputMaybe<Scalars['String']['input']>;
  licenseNoNEQ?: InputMaybe<Scalars['String']['input']>;
  licenseNoNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  licenseNoNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** naics_code field predicates */
  naicsCode?: InputMaybe<Scalars['Int']['input']>;
  naicsCodeGT?: InputMaybe<Scalars['Int']['input']>;
  naicsCodeGTE?: InputMaybe<Scalars['Int']['input']>;
  naicsCodeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  naicsCodeLT?: InputMaybe<Scalars['Int']['input']>;
  naicsCodeLTE?: InputMaybe<Scalars['Int']['input']>;
  naicsCodeNEQ?: InputMaybe<Scalars['Int']['input']>;
  naicsCodeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<PartnerServiceCityWhereInput>;
  or?: InputMaybe<Array<PartnerServiceCityWhereInput>>;
  /** postal_id field predicates */
  postalID?: InputMaybe<Scalars['String']['input']>;
  postalIDContains?: InputMaybe<Scalars['String']['input']>;
  postalIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  postalIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  postalIDGT?: InputMaybe<Scalars['String']['input']>;
  postalIDGTE?: InputMaybe<Scalars['String']['input']>;
  postalIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  postalIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  postalIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  postalIDLT?: InputMaybe<Scalars['String']['input']>;
  postalIDLTE?: InputMaybe<Scalars['String']['input']>;
  postalIDNEQ?: InputMaybe<Scalars['String']['input']>;
  postalIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** proof_doc_id field predicates */
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  proofDocIDContains?: InputMaybe<Scalars['String']['input']>;
  proofDocIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  proofDocIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  proofDocIDGT?: InputMaybe<Scalars['String']['input']>;
  proofDocIDGTE?: InputMaybe<Scalars['String']['input']>;
  proofDocIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  proofDocIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  proofDocIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  proofDocIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  proofDocIDLT?: InputMaybe<Scalars['String']['input']>;
  proofDocIDLTE?: InputMaybe<Scalars['String']['input']>;
  proofDocIDNEQ?: InputMaybe<Scalars['String']['input']>;
  proofDocIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  proofDocIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * PartnerServiceStateWhereInput is used for filtering PartnerServiceState objects.
 * Input was generated by ent.
 */
export type PartnerServiceStateWhereInput = {
  and?: InputMaybe<Array<PartnerServiceStateWhereInput>>;
  /** country field predicates */
  country?: InputMaybe<Scalars['String']['input']>;
  countryContains?: InputMaybe<Scalars['String']['input']>;
  countryContainsFold?: InputMaybe<Scalars['String']['input']>;
  countryEqualFold?: InputMaybe<Scalars['String']['input']>;
  countryGT?: InputMaybe<Scalars['String']['input']>;
  countryGTE?: InputMaybe<Scalars['String']['input']>;
  countryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  countryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  countryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  countryLT?: InputMaybe<Scalars['String']['input']>;
  countryLTE?: InputMaybe<Scalars['String']['input']>;
  countryNEQ?: InputMaybe<Scalars['String']['input']>;
  countryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** license_exp_date field predicates */
  licenseExpDate?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDateGT?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDateGTE?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDateIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  licenseExpDateIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  licenseExpDateLT?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDateLTE?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDateNEQ?: InputMaybe<Scalars['Time']['input']>;
  licenseExpDateNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  licenseExpDateNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** license_no field predicates */
  licenseNo?: InputMaybe<Scalars['String']['input']>;
  licenseNoContains?: InputMaybe<Scalars['String']['input']>;
  licenseNoContainsFold?: InputMaybe<Scalars['String']['input']>;
  licenseNoEqualFold?: InputMaybe<Scalars['String']['input']>;
  licenseNoGT?: InputMaybe<Scalars['String']['input']>;
  licenseNoGTE?: InputMaybe<Scalars['String']['input']>;
  licenseNoHasPrefix?: InputMaybe<Scalars['String']['input']>;
  licenseNoHasSuffix?: InputMaybe<Scalars['String']['input']>;
  licenseNoIn?: InputMaybe<Array<Scalars['String']['input']>>;
  licenseNoIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  licenseNoLT?: InputMaybe<Scalars['String']['input']>;
  licenseNoLTE?: InputMaybe<Scalars['String']['input']>;
  licenseNoNEQ?: InputMaybe<Scalars['String']['input']>;
  licenseNoNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  licenseNoNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<PartnerServiceStateWhereInput>;
  or?: InputMaybe<Array<PartnerServiceStateWhereInput>>;
  /** proof_doc_id field predicates */
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  proofDocIDContains?: InputMaybe<Scalars['String']['input']>;
  proofDocIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  proofDocIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  proofDocIDGT?: InputMaybe<Scalars['String']['input']>;
  proofDocIDGTE?: InputMaybe<Scalars['String']['input']>;
  proofDocIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  proofDocIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  proofDocIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  proofDocIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  proofDocIDLT?: InputMaybe<Scalars['String']['input']>;
  proofDocIDLTE?: InputMaybe<Scalars['String']['input']>;
  proofDocIDNEQ?: InputMaybe<Scalars['String']['input']>;
  proofDocIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  proofDocIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** state field predicates */
  state?: InputMaybe<Scalars['String']['input']>;
  stateContains?: InputMaybe<Scalars['String']['input']>;
  stateContainsFold?: InputMaybe<Scalars['String']['input']>;
  stateEqualFold?: InputMaybe<Scalars['String']['input']>;
  stateGT?: InputMaybe<Scalars['String']['input']>;
  stateGTE?: InputMaybe<Scalars['String']['input']>;
  stateHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stateHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stateIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateLT?: InputMaybe<Scalars['String']['input']>;
  stateLTE?: InputMaybe<Scalars['String']['input']>;
  stateNEQ?: InputMaybe<Scalars['String']['input']>;
  stateNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * PartnerServiceWhereInput is used for filtering PartnerService objects.
 * Input was generated by ent.
 */
export type PartnerServiceWhereInput = {
  /** active field predicates */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  activeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<PartnerServiceWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<PartnerServiceWhereInput>;
  or?: InputMaybe<Array<PartnerServiceWhereInput>>;
  /** service_id field predicates */
  serviceID?: InputMaybe<Scalars['Int']['input']>;
  serviceIDGT?: InputMaybe<Scalars['Int']['input']>;
  serviceIDGTE?: InputMaybe<Scalars['Int']['input']>;
  serviceIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  serviceIDLT?: InputMaybe<Scalars['Int']['input']>;
  serviceIDLTE?: InputMaybe<Scalars['Int']['input']>;
  serviceIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  serviceIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum PartnerStatus {
  Active = 'Active',
  InActive = 'InActive',
  Onboarding = 'Onboarding',
  OnboardingDone = 'OnboardingDone'
}

/**
 * PartnerTrainingVideoWhereInput is used for filtering PartnerTrainingVideo objects.
 * Input was generated by ent.
 */
export type PartnerTrainingVideoWhereInput = {
  and?: InputMaybe<Array<PartnerTrainingVideoWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** enabled field predicates */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  enabledNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** video edge predicates */
  hasVideo?: InputMaybe<Scalars['Boolean']['input']>;
  hasVideoWith?: InputMaybe<Array<TrainingVideoWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<PartnerTrainingVideoWhereInput>;
  or?: InputMaybe<Array<PartnerTrainingVideoWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum PartnerType {
  Epc = 'EPC',
  Integration = 'INTEGRATION',
  Roofing = 'ROOFING',
  Solar = 'SOLAR'
}

export type PartnerUser = {
  __typename?: 'PartnerUser';
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  partnerName: Scalars['String']['output'];
  partnerUserRole: PartnerContactRole;
  partnerUserType: PartnerContactType;
  phone: Scalars['String']['output'];
  picture: Scalars['String']['output'];
};

/**
 * PartnerWhereInput is used for filtering Partner objects.
 * Input was generated by ent.
 */
export type PartnerWhereInput = {
  /** address field predicates */
  address?: InputMaybe<Scalars['String']['input']>;
  addressContains?: InputMaybe<Scalars['String']['input']>;
  addressContainsFold?: InputMaybe<Scalars['String']['input']>;
  addressEqualFold?: InputMaybe<Scalars['String']['input']>;
  addressGT?: InputMaybe<Scalars['String']['input']>;
  addressGTE?: InputMaybe<Scalars['String']['input']>;
  addressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  addressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  addressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  addressLT?: InputMaybe<Scalars['String']['input']>;
  addressLTE?: InputMaybe<Scalars['String']['input']>;
  addressNEQ?: InputMaybe<Scalars['String']['input']>;
  addressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<PartnerWhereInput>>;
  /** asphalt_lead_t field predicates */
  asphaltLeadT?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTContains?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTContainsFold?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTEqualFold?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTGT?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTGTE?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTHasPrefix?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTHasSuffix?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTIn?: InputMaybe<Array<Scalars['String']['input']>>;
  asphaltLeadTIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  asphaltLeadTLT?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTLTE?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTNEQ?: InputMaybe<Scalars['String']['input']>;
  asphaltLeadTNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  asphaltLeadTNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator_id field predicates */
  creatorID?: InputMaybe<Scalars['ID']['input']>;
  creatorIDContains?: InputMaybe<Scalars['ID']['input']>;
  creatorIDContainsFold?: InputMaybe<Scalars['ID']['input']>;
  creatorIDEqualFold?: InputMaybe<Scalars['ID']['input']>;
  creatorIDGT?: InputMaybe<Scalars['ID']['input']>;
  creatorIDGTE?: InputMaybe<Scalars['ID']['input']>;
  creatorIDHasPrefix?: InputMaybe<Scalars['ID']['input']>;
  creatorIDHasSuffix?: InputMaybe<Scalars['ID']['input']>;
  creatorIDIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  creatorIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  creatorIDLT?: InputMaybe<Scalars['ID']['input']>;
  creatorIDLTE?: InputMaybe<Scalars['ID']['input']>;
  creatorIDNEQ?: InputMaybe<Scalars['ID']['input']>;
  creatorIDNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  creatorIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** crew_count field predicates */
  crewCount?: InputMaybe<Scalars['Int']['input']>;
  crewCountGT?: InputMaybe<Scalars['Int']['input']>;
  crewCountGTE?: InputMaybe<Scalars['Int']['input']>;
  crewCountIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  crewCountLT?: InputMaybe<Scalars['Int']['input']>;
  crewCountLTE?: InputMaybe<Scalars['Int']['input']>;
  crewCountNEQ?: InputMaybe<Scalars['Int']['input']>;
  crewCountNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** down_payment field predicates */
  downPayment?: InputMaybe<Scalars['Int']['input']>;
  downPaymentGT?: InputMaybe<Scalars['Int']['input']>;
  downPaymentGTE?: InputMaybe<Scalars['Int']['input']>;
  downPaymentIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  downPaymentIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  downPaymentLT?: InputMaybe<Scalars['Int']['input']>;
  downPaymentLTE?: InputMaybe<Scalars['Int']['input']>;
  downPaymentNEQ?: InputMaybe<Scalars['Int']['input']>;
  downPaymentNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  downPaymentNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** external_id field predicates */
  externalID?: InputMaybe<Scalars['String']['input']>;
  externalIDContains?: InputMaybe<Scalars['String']['input']>;
  externalIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  externalIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  externalIDGT?: InputMaybe<Scalars['String']['input']>;
  externalIDGTE?: InputMaybe<Scalars['String']['input']>;
  externalIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  externalIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  externalIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalIDIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  externalIDLT?: InputMaybe<Scalars['String']['input']>;
  externalIDLTE?: InputMaybe<Scalars['String']['input']>;
  externalIDNEQ?: InputMaybe<Scalars['String']['input']>;
  externalIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  externalIDNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** assigned_installation_jobs edge predicates */
  hasAssignedInstallationJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasAssignedInstallationJobsWith?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** channels edge predicates */
  hasChannels?: InputMaybe<Scalars['Boolean']['input']>;
  hasChannelsWith?: InputMaybe<Array<ChannelSubWhereInput>>;
  /** contact_us_requests edge predicates */
  hasContactUsRequests?: InputMaybe<Scalars['Boolean']['input']>;
  hasContactUsRequestsWith?: InputMaybe<Array<ContactUsWhereInput>>;
  /** contacts edge predicates */
  hasContacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasContactsWith?: InputMaybe<Array<UserWhereInput>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api edge predicates */
  hasCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** epc_jobs edge predicates */
  hasEpcJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasEpcJobsWith?: InputMaybe<Array<JobWhereInput>>;
  /** epc_options edge predicates */
  hasEpcOptions?: InputMaybe<Scalars['Boolean']['input']>;
  hasEpcOptionsWith?: InputMaybe<Array<OptionListWhereInput>>;
  /** estimate_home_owners edge predicates */
  hasEstimateHomeOwners?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimateHomeOwnersWith?: InputMaybe<Array<HomeOwnerWhereInput>>;
  /** finance_options edge predicates */
  hasFinanceOptions?: InputMaybe<Scalars['Boolean']['input']>;
  hasFinanceOptionsWith?: InputMaybe<Array<OptionListWhereInput>>;
  /** integration_jobs edge predicates */
  hasIntegrationJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasIntegrationJobsWith?: InputMaybe<Array<JobWhereInput>>;
  /** job_assignment_history edge predicates */
  hasJobAssignmentHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobAssignmentHistoryWith?: InputMaybe<Array<JobAssignmentHistoryWhereInput>>;
  /** job_notes edge predicates */
  hasJobNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobNotesWith?: InputMaybe<Array<JobNoteWhereInput>>;
  /** job_requests edge predicates */
  hasJobRequests?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobRequestsWith?: InputMaybe<Array<JobWhereInput>>;
  /** jobs edge predicates */
  hasJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobsWith?: InputMaybe<Array<JobWhereInput>>;
  /** partner_contacts edge predicates */
  hasPartnerContacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerContactsWith?: InputMaybe<Array<PartnerContactWhereInput>>;
  /** requested_estimates edge predicates */
  hasRequestedEstimates?: InputMaybe<Scalars['Boolean']['input']>;
  hasRequestedEstimatesWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** requested_installation_jobs edge predicates */
  hasRequestedInstallationJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasRequestedInstallationJobsWith?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** service_cities edge predicates */
  hasServiceCities?: InputMaybe<Scalars['Boolean']['input']>;
  hasServiceCitiesWith?: InputMaybe<Array<PartnerServiceCityWhereInput>>;
  /** service_states edge predicates */
  hasServiceStates?: InputMaybe<Scalars['Boolean']['input']>;
  hasServiceStatesWith?: InputMaybe<Array<PartnerServiceStateWhereInput>>;
  /** services edge predicates */
  hasServices?: InputMaybe<Scalars['Boolean']['input']>;
  hasServicesWith?: InputMaybe<Array<PartnerServiceWhereInput>>;
  /** sessions edge predicates */
  hasSessions?: InputMaybe<Scalars['Boolean']['input']>;
  hasSessionsWith?: InputMaybe<Array<UserSessionWhereInput>>;
  /** surveys edge predicates */
  hasSurveys?: InputMaybe<Scalars['Boolean']['input']>;
  hasSurveysWith?: InputMaybe<Array<SurveyWhereInput>>;
  /** training_videos edge predicates */
  hasTrainingVideos?: InputMaybe<Scalars['Boolean']['input']>;
  hasTrainingVideosWith?: InputMaybe<Array<PartnerTrainingVideoWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** install_in_house field predicates */
  installInHouse?: InputMaybe<Scalars['Boolean']['input']>;
  installInHouseIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  installInHouseNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  installInHouseNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** is_nation_wide field predicates */
  isNationWide?: InputMaybe<Scalars['Boolean']['input']>;
  isNationWideNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** job_capacity field predicates */
  jobCapacity?: InputMaybe<Scalars['Int']['input']>;
  jobCapacityGT?: InputMaybe<Scalars['Int']['input']>;
  jobCapacityGTE?: InputMaybe<Scalars['Int']['input']>;
  jobCapacityIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  jobCapacityLT?: InputMaybe<Scalars['Int']['input']>;
  jobCapacityLTE?: InputMaybe<Scalars['Int']['input']>;
  jobCapacityNEQ?: InputMaybe<Scalars['Int']['input']>;
  jobCapacityNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** latitude field predicates */
  latitude?: InputMaybe<Scalars['Float']['input']>;
  latitudeGT?: InputMaybe<Scalars['Float']['input']>;
  latitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  latitudeLT?: InputMaybe<Scalars['Float']['input']>;
  latitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  latitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** longitude field predicates */
  longitude?: InputMaybe<Scalars['Float']['input']>;
  longitudeGT?: InputMaybe<Scalars['Float']['input']>;
  longitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  longitudeLT?: InputMaybe<Scalars['Float']['input']>;
  longitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  longitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** metal_lead_t field predicates */
  metalLeadT?: InputMaybe<Scalars['String']['input']>;
  metalLeadTContains?: InputMaybe<Scalars['String']['input']>;
  metalLeadTContainsFold?: InputMaybe<Scalars['String']['input']>;
  metalLeadTEqualFold?: InputMaybe<Scalars['String']['input']>;
  metalLeadTGT?: InputMaybe<Scalars['String']['input']>;
  metalLeadTGTE?: InputMaybe<Scalars['String']['input']>;
  metalLeadTHasPrefix?: InputMaybe<Scalars['String']['input']>;
  metalLeadTHasSuffix?: InputMaybe<Scalars['String']['input']>;
  metalLeadTIn?: InputMaybe<Array<Scalars['String']['input']>>;
  metalLeadTIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  metalLeadTLT?: InputMaybe<Scalars['String']['input']>;
  metalLeadTLTE?: InputMaybe<Scalars['String']['input']>;
  metalLeadTNEQ?: InputMaybe<Scalars['String']['input']>;
  metalLeadTNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  metalLeadTNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<PartnerWhereInput>;
  or?: InputMaybe<Array<PartnerWhereInput>>;
  /** phone field predicates */
  phone?: InputMaybe<Scalars['String']['input']>;
  phoneContains?: InputMaybe<Scalars['String']['input']>;
  phoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneGT?: InputMaybe<Scalars['String']['input']>;
  phoneGTE?: InputMaybe<Scalars['String']['input']>;
  phoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneLT?: InputMaybe<Scalars['String']['input']>;
  phoneLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** pif field predicates */
  pif?: InputMaybe<Scalars['Int']['input']>;
  pifGT?: InputMaybe<Scalars['Int']['input']>;
  pifGTE?: InputMaybe<Scalars['Int']['input']>;
  pifIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  pifIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  pifLT?: InputMaybe<Scalars['Int']['input']>;
  pifLTE?: InputMaybe<Scalars['Int']['input']>;
  pifNEQ?: InputMaybe<Scalars['Int']['input']>;
  pifNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  pifNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** sales_volume field predicates */
  salesVolume?: InputMaybe<Scalars['Int']['input']>;
  salesVolumeGT?: InputMaybe<Scalars['Int']['input']>;
  salesVolumeGTE?: InputMaybe<Scalars['Int']['input']>;
  salesVolumeIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  salesVolumeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  salesVolumeLT?: InputMaybe<Scalars['Int']['input']>;
  salesVolumeLTE?: InputMaybe<Scalars['Int']['input']>;
  salesVolumeNEQ?: InputMaybe<Scalars['Int']['input']>;
  salesVolumeNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  salesVolumeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** setup_steps_completed field predicates */
  setupStepsCompleted?: InputMaybe<Scalars['Int']['input']>;
  setupStepsCompletedGT?: InputMaybe<Scalars['Int']['input']>;
  setupStepsCompletedGTE?: InputMaybe<Scalars['Int']['input']>;
  setupStepsCompletedIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  setupStepsCompletedLT?: InputMaybe<Scalars['Int']['input']>;
  setupStepsCompletedLTE?: InputMaybe<Scalars['Int']['input']>;
  setupStepsCompletedNEQ?: InputMaybe<Scalars['Int']['input']>;
  setupStepsCompletedNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** status field predicates */
  status?: InputMaybe<PartnerStatus>;
  statusIn?: InputMaybe<Array<PartnerStatus>>;
  statusNEQ?: InputMaybe<PartnerStatus>;
  statusNotIn?: InputMaybe<Array<PartnerStatus>>;
  /** tile_lead_t field predicates */
  tileLeadT?: InputMaybe<Scalars['String']['input']>;
  tileLeadTContains?: InputMaybe<Scalars['String']['input']>;
  tileLeadTContainsFold?: InputMaybe<Scalars['String']['input']>;
  tileLeadTEqualFold?: InputMaybe<Scalars['String']['input']>;
  tileLeadTGT?: InputMaybe<Scalars['String']['input']>;
  tileLeadTGTE?: InputMaybe<Scalars['String']['input']>;
  tileLeadTHasPrefix?: InputMaybe<Scalars['String']['input']>;
  tileLeadTHasSuffix?: InputMaybe<Scalars['String']['input']>;
  tileLeadTIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tileLeadTIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  tileLeadTLT?: InputMaybe<Scalars['String']['input']>;
  tileLeadTLTE?: InputMaybe<Scalars['String']['input']>;
  tileLeadTNEQ?: InputMaybe<Scalars['String']['input']>;
  tileLeadTNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  tileLeadTNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** type field predicates */
  type?: InputMaybe<PartnerType>;
  typeIn?: InputMaybe<Array<PartnerType>>;
  typeNEQ?: InputMaybe<PartnerType>;
  typeNotIn?: InputMaybe<Array<PartnerType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** website field predicates */
  website?: InputMaybe<Scalars['String']['input']>;
  websiteContains?: InputMaybe<Scalars['String']['input']>;
  websiteContainsFold?: InputMaybe<Scalars['String']['input']>;
  websiteEqualFold?: InputMaybe<Scalars['String']['input']>;
  websiteGT?: InputMaybe<Scalars['String']['input']>;
  websiteGTE?: InputMaybe<Scalars['String']['input']>;
  websiteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  websiteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  websiteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  websiteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  websiteLT?: InputMaybe<Scalars['String']['input']>;
  websiteLTE?: InputMaybe<Scalars['String']['input']>;
  websiteNEQ?: InputMaybe<Scalars['String']['input']>;
  websiteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  websiteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** years_in_business field predicates */
  yearsInBusiness?: InputMaybe<Scalars['Int']['input']>;
  yearsInBusinessGT?: InputMaybe<Scalars['Int']['input']>;
  yearsInBusinessGTE?: InputMaybe<Scalars['Int']['input']>;
  yearsInBusinessIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  yearsInBusinessIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  yearsInBusinessLT?: InputMaybe<Scalars['Int']['input']>;
  yearsInBusinessLTE?: InputMaybe<Scalars['Int']['input']>;
  yearsInBusinessNEQ?: InputMaybe<Scalars['Int']['input']>;
  yearsInBusinessNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  yearsInBusinessNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

/**
 * PaymentWhereInput is used for filtering Payment objects.
 * Input was generated by ent.
 */
export type PaymentWhereInput = {
  /** amount field predicates */
  amount?: InputMaybe<Scalars['Float']['input']>;
  amountGT?: InputMaybe<Scalars['Float']['input']>;
  amountGTE?: InputMaybe<Scalars['Float']['input']>;
  amountIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  amountLT?: InputMaybe<Scalars['Float']['input']>;
  amountLTE?: InputMaybe<Scalars['Float']['input']>;
  amountNEQ?: InputMaybe<Scalars['Float']['input']>;
  amountNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  and?: InputMaybe<Array<PaymentWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** job edge predicates */
  hasJob?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobWith?: InputMaybe<Array<JobWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<PaymentWhereInput>;
  or?: InputMaybe<Array<PaymentWhereInput>>;
  /** status_id field predicates */
  statusID?: InputMaybe<Scalars['Int']['input']>;
  statusIDGT?: InputMaybe<Scalars['Int']['input']>;
  statusIDGTE?: InputMaybe<Scalars['Int']['input']>;
  statusIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  statusIDLT?: InputMaybe<Scalars['Int']['input']>;
  statusIDLTE?: InputMaybe<Scalars['Int']['input']>;
  statusIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  statusIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type Point = {
  __typename?: 'Point';
  lat: Scalars['Float']['output'];
  lng: Scalars['Float']['output'];
};

/**
 * PostalCodeWhereInput is used for filtering PostalCode objects.
 * Input was generated by ent.
 */
export type PostalCodeWhereInput = {
  /** accuracy field predicates */
  accuracy?: InputMaybe<Scalars['Int']['input']>;
  accuracyGT?: InputMaybe<Scalars['Int']['input']>;
  accuracyGTE?: InputMaybe<Scalars['Int']['input']>;
  accuracyIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  accuracyLT?: InputMaybe<Scalars['Int']['input']>;
  accuracyLTE?: InputMaybe<Scalars['Int']['input']>;
  accuracyNEQ?: InputMaybe<Scalars['Int']['input']>;
  accuracyNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  and?: InputMaybe<Array<PostalCodeWhereInput>>;
  /** city field predicates */
  city?: InputMaybe<Scalars['String']['input']>;
  cityContains?: InputMaybe<Scalars['String']['input']>;
  cityContainsFold?: InputMaybe<Scalars['String']['input']>;
  cityEqualFold?: InputMaybe<Scalars['String']['input']>;
  cityGT?: InputMaybe<Scalars['String']['input']>;
  cityGTE?: InputMaybe<Scalars['String']['input']>;
  cityHasPrefix?: InputMaybe<Scalars['String']['input']>;
  cityHasSuffix?: InputMaybe<Scalars['String']['input']>;
  cityIn?: InputMaybe<Array<Scalars['String']['input']>>;
  cityLT?: InputMaybe<Scalars['String']['input']>;
  cityLTE?: InputMaybe<Scalars['String']['input']>;
  cityNEQ?: InputMaybe<Scalars['String']['input']>;
  cityNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** code field predicates */
  code?: InputMaybe<Scalars['String']['input']>;
  codeContains?: InputMaybe<Scalars['String']['input']>;
  codeContainsFold?: InputMaybe<Scalars['String']['input']>;
  codeEqualFold?: InputMaybe<Scalars['String']['input']>;
  codeGT?: InputMaybe<Scalars['String']['input']>;
  codeGTE?: InputMaybe<Scalars['String']['input']>;
  codeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  codeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  codeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  codeLT?: InputMaybe<Scalars['String']['input']>;
  codeLTE?: InputMaybe<Scalars['String']['input']>;
  codeNEQ?: InputMaybe<Scalars['String']['input']>;
  codeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** country field predicates */
  country?: InputMaybe<Scalars['String']['input']>;
  countryContains?: InputMaybe<Scalars['String']['input']>;
  countryContainsFold?: InputMaybe<Scalars['String']['input']>;
  countryEqualFold?: InputMaybe<Scalars['String']['input']>;
  countryGT?: InputMaybe<Scalars['String']['input']>;
  countryGTE?: InputMaybe<Scalars['String']['input']>;
  countryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  countryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  countryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  countryLT?: InputMaybe<Scalars['String']['input']>;
  countryLTE?: InputMaybe<Scalars['String']['input']>;
  countryNEQ?: InputMaybe<Scalars['String']['input']>;
  countryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** pricing edge predicates */
  hasPricing?: InputMaybe<Scalars['Boolean']['input']>;
  hasPricingWith?: InputMaybe<Array<PricingWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** latitude field predicates */
  latitude?: InputMaybe<Scalars['Float']['input']>;
  latitudeGT?: InputMaybe<Scalars['Float']['input']>;
  latitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  latitudeLT?: InputMaybe<Scalars['Float']['input']>;
  latitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  latitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  latitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** longitude field predicates */
  longitude?: InputMaybe<Scalars['Float']['input']>;
  longitudeGT?: InputMaybe<Scalars['Float']['input']>;
  longitudeGTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  longitudeLT?: InputMaybe<Scalars['Float']['input']>;
  longitudeLTE?: InputMaybe<Scalars['Float']['input']>;
  longitudeNEQ?: InputMaybe<Scalars['Float']['input']>;
  longitudeNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  not?: InputMaybe<PostalCodeWhereInput>;
  or?: InputMaybe<Array<PostalCodeWhereInput>>;
  /** region_id field predicates */
  regionID?: InputMaybe<Scalars['Int']['input']>;
  regionIDGT?: InputMaybe<Scalars['Int']['input']>;
  regionIDGTE?: InputMaybe<Scalars['Int']['input']>;
  regionIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  regionIDLT?: InputMaybe<Scalars['Int']['input']>;
  regionIDLTE?: InputMaybe<Scalars['Int']['input']>;
  regionIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  regionIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** service_area field predicates */
  serviceArea?: InputMaybe<Scalars['Boolean']['input']>;
  serviceAreaNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** state field predicates */
  state?: InputMaybe<Scalars['String']['input']>;
  /** state_abr field predicates */
  stateAbr?: InputMaybe<Scalars['String']['input']>;
  stateAbrContains?: InputMaybe<Scalars['String']['input']>;
  stateAbrContainsFold?: InputMaybe<Scalars['String']['input']>;
  stateAbrEqualFold?: InputMaybe<Scalars['String']['input']>;
  stateAbrGT?: InputMaybe<Scalars['String']['input']>;
  stateAbrGTE?: InputMaybe<Scalars['String']['input']>;
  stateAbrHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stateAbrHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stateAbrIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateAbrLT?: InputMaybe<Scalars['String']['input']>;
  stateAbrLTE?: InputMaybe<Scalars['String']['input']>;
  stateAbrNEQ?: InputMaybe<Scalars['String']['input']>;
  stateAbrNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateContains?: InputMaybe<Scalars['String']['input']>;
  stateContainsFold?: InputMaybe<Scalars['String']['input']>;
  stateEqualFold?: InputMaybe<Scalars['String']['input']>;
  stateGT?: InputMaybe<Scalars['String']['input']>;
  stateGTE?: InputMaybe<Scalars['String']['input']>;
  stateHasPrefix?: InputMaybe<Scalars['String']['input']>;
  stateHasSuffix?: InputMaybe<Scalars['String']['input']>;
  stateIn?: InputMaybe<Array<Scalars['String']['input']>>;
  stateLT?: InputMaybe<Scalars['String']['input']>;
  stateLTE?: InputMaybe<Scalars['String']['input']>;
  stateNEQ?: InputMaybe<Scalars['String']['input']>;
  stateNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type Price = {
  __typename?: 'Price';
  city: Scalars['String']['output'];
  country: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  price: Scalars['Float']['output'];
  pricePer: Scalars['String']['output'];
  productId: Scalars['Int']['output'];
  state: Scalars['String']['output'];
  stateAbr: Scalars['String']['output'];
  zip: Scalars['String']['output'];
};

export type PriceSummary = {
  __typename?: 'PriceSummary';
  summary: Scalars['String']['output'];
  total: Scalars['Float']['output'];
};

/**
 * PricingWhereInput is used for filtering Pricing objects.
 * Input was generated by ent.
 */
export type PricingWhereInput = {
  and?: InputMaybe<Array<PricingWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** postal edge predicates */
  hasPostal?: InputMaybe<Scalars['Boolean']['input']>;
  hasPostalWith?: InputMaybe<Array<PostalCodeWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<PricingWhereInput>;
  or?: InputMaybe<Array<PricingWhereInput>>;
  /** postal_code field predicates */
  postalCode?: InputMaybe<Scalars['String']['input']>;
  postalCodeContains?: InputMaybe<Scalars['String']['input']>;
  postalCodeContainsFold?: InputMaybe<Scalars['String']['input']>;
  postalCodeEqualFold?: InputMaybe<Scalars['String']['input']>;
  postalCodeGT?: InputMaybe<Scalars['String']['input']>;
  postalCodeGTE?: InputMaybe<Scalars['String']['input']>;
  postalCodeHasPrefix?: InputMaybe<Scalars['String']['input']>;
  postalCodeHasSuffix?: InputMaybe<Scalars['String']['input']>;
  postalCodeIn?: InputMaybe<Array<Scalars['String']['input']>>;
  postalCodeLT?: InputMaybe<Scalars['String']['input']>;
  postalCodeLTE?: InputMaybe<Scalars['String']['input']>;
  postalCodeNEQ?: InputMaybe<Scalars['String']['input']>;
  postalCodeNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** postal_country field predicates */
  postalCountry?: InputMaybe<Scalars['String']['input']>;
  postalCountryContains?: InputMaybe<Scalars['String']['input']>;
  postalCountryContainsFold?: InputMaybe<Scalars['String']['input']>;
  postalCountryEqualFold?: InputMaybe<Scalars['String']['input']>;
  postalCountryGT?: InputMaybe<Scalars['String']['input']>;
  postalCountryGTE?: InputMaybe<Scalars['String']['input']>;
  postalCountryHasPrefix?: InputMaybe<Scalars['String']['input']>;
  postalCountryHasSuffix?: InputMaybe<Scalars['String']['input']>;
  postalCountryIn?: InputMaybe<Array<Scalars['String']['input']>>;
  postalCountryLT?: InputMaybe<Scalars['String']['input']>;
  postalCountryLTE?: InputMaybe<Scalars['String']['input']>;
  postalCountryNEQ?: InputMaybe<Scalars['String']['input']>;
  postalCountryNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** price field predicates */
  price?: InputMaybe<Scalars['Float']['input']>;
  priceGT?: InputMaybe<Scalars['Float']['input']>;
  priceGTE?: InputMaybe<Scalars['Float']['input']>;
  priceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  priceLT?: InputMaybe<Scalars['Float']['input']>;
  priceLTE?: InputMaybe<Scalars['Float']['input']>;
  priceNEQ?: InputMaybe<Scalars['Float']['input']>;
  priceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** price_per field predicates */
  pricePer?: InputMaybe<Scalars['String']['input']>;
  pricePerContains?: InputMaybe<Scalars['String']['input']>;
  pricePerContainsFold?: InputMaybe<Scalars['String']['input']>;
  pricePerEqualFold?: InputMaybe<Scalars['String']['input']>;
  pricePerGT?: InputMaybe<Scalars['String']['input']>;
  pricePerGTE?: InputMaybe<Scalars['String']['input']>;
  pricePerHasPrefix?: InputMaybe<Scalars['String']['input']>;
  pricePerHasSuffix?: InputMaybe<Scalars['String']['input']>;
  pricePerIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pricePerLT?: InputMaybe<Scalars['String']['input']>;
  pricePerLTE?: InputMaybe<Scalars['String']['input']>;
  pricePerNEQ?: InputMaybe<Scalars['String']['input']>;
  pricePerNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** product_id field predicates */
  productID?: InputMaybe<Scalars['Int']['input']>;
  productIDGT?: InputMaybe<Scalars['Int']['input']>;
  productIDGTE?: InputMaybe<Scalars['Int']['input']>;
  productIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  productIDLT?: InputMaybe<Scalars['Int']['input']>;
  productIDLTE?: InputMaybe<Scalars['Int']['input']>;
  productIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  productIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type Product = {
  __typename?: 'Product';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

export type ProductConnection = {
  __typename?: 'ProductConnection';
  edges?: Maybe<Array<ProductEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ProductDetail = {
  __typename?: 'ProductDetail';
  id: Scalars['ID']['output'];
  image: Document;
  name: Scalars['String']['output'];
};

export type ProductEdge = {
  __typename?: 'ProductEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<ProductInfo>;
};

export type ProductInfo = {
  __typename?: 'ProductInfo';
  category: ProductType;
  description: Scalars['String']['output'];
  features: Array<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  image: Document;
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  specialNote?: Maybe<Scalars['String']['output']>;
};

export type ProductInput = {
  category: ProductType;
  description: Scalars['String']['input'];
  features: Array<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  imageID: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  price: Scalars['Float']['input'];
  specialNote?: InputMaybe<Scalars['String']['input']>;
};

export type ProductPackage = {
  __typename?: 'ProductPackage';
  category: ProductType;
  description: Scalars['String']['output'];
  features: Array<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  items: Array<ProductDetail>;
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  soldAs: SoldAs;
};

export type ProductPackageConnection = {
  __typename?: 'ProductPackageConnection';
  edges?: Maybe<Array<ProductPackageEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ProductPackageEdge = {
  __typename?: 'ProductPackageEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<ProductPackage>;
};

export type ProductPackageInput = {
  category: ProductType;
  description: Scalars['String']['input'];
  features: Array<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  price: Scalars['Float']['input'];
  productIDs: Array<Scalars['ID']['input']>;
  soldAs: SoldAs;
};

/**
 * ProductPackageWhereInput is used for filtering ProductPackage objects.
 * Input was generated by ent.
 */
export type ProductPackageWhereInput = {
  and?: InputMaybe<Array<ProductPackageWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** discontinued field predicates */
  discontinued?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** items edge predicates */
  hasItems?: InputMaybe<Scalars['Boolean']['input']>;
  hasItemsWith?: InputMaybe<Array<ProductWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ProductPackageWhereInput>;
  or?: InputMaybe<Array<ProductPackageWhereInput>>;
  /** price field predicates */
  price?: InputMaybe<Scalars['Float']['input']>;
  priceGT?: InputMaybe<Scalars['Float']['input']>;
  priceGTE?: InputMaybe<Scalars['Float']['input']>;
  priceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  priceLT?: InputMaybe<Scalars['Float']['input']>;
  priceLTE?: InputMaybe<Scalars['Float']['input']>;
  priceNEQ?: InputMaybe<Scalars['Float']['input']>;
  priceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** sold_as field predicates */
  soldAs?: InputMaybe<SoldAs>;
  soldAsIn?: InputMaybe<Array<SoldAs>>;
  soldAsNEQ?: InputMaybe<SoldAs>;
  soldAsNotIn?: InputMaybe<Array<SoldAs>>;
  /** type field predicates */
  type?: InputMaybe<ProductType>;
  typeIn?: InputMaybe<Array<ProductType>>;
  typeNEQ?: InputMaybe<ProductType>;
  typeNotIn?: InputMaybe<Array<ProductType>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type ProductPricing = {
  __typename?: 'ProductPricing';
  id: Scalars['String']['output'];
  items?: Maybe<Array<Price>>;
  products?: Maybe<Array<Product>>;
};

export enum ProductType {
  Hvac = 'HVAC',
  SmartHome = 'SMART_HOME'
}

/**
 * ProductWhereInput is used for filtering Product objects.
 * Input was generated by ent.
 */
export type ProductWhereInput = {
  and?: InputMaybe<Array<ProductWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** discontinued field predicates */
  discontinued?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  discontinuedNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** image edge predicates */
  hasImage?: InputMaybe<Scalars['Boolean']['input']>;
  hasImageWith?: InputMaybe<Array<DocumentWhereInput>>;
  /** package edge predicates */
  hasPackage?: InputMaybe<Scalars['Boolean']['input']>;
  hasPackageWith?: InputMaybe<Array<ProductPackageWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<ProductWhereInput>;
  or?: InputMaybe<Array<ProductWhereInput>>;
  /** special_note field predicates */
  specialNote?: InputMaybe<Scalars['String']['input']>;
  specialNoteContains?: InputMaybe<Scalars['String']['input']>;
  specialNoteContainsFold?: InputMaybe<Scalars['String']['input']>;
  specialNoteEqualFold?: InputMaybe<Scalars['String']['input']>;
  specialNoteGT?: InputMaybe<Scalars['String']['input']>;
  specialNoteGTE?: InputMaybe<Scalars['String']['input']>;
  specialNoteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  specialNoteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  specialNoteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  specialNoteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  specialNoteLT?: InputMaybe<Scalars['String']['input']>;
  specialNoteLTE?: InputMaybe<Scalars['String']['input']>;
  specialNoteNEQ?: InputMaybe<Scalars['String']['input']>;
  specialNoteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  specialNoteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** type field predicates */
  type?: InputMaybe<ProductType>;
  typeIn?: InputMaybe<Array<ProductType>>;
  typeNEQ?: InputMaybe<ProductType>;
  typeNotIn?: InputMaybe<Array<ProductType>>;
  /** unit_price field predicates */
  unitPrice?: InputMaybe<Scalars['Float']['input']>;
  unitPriceGT?: InputMaybe<Scalars['Float']['input']>;
  unitPriceGTE?: InputMaybe<Scalars['Float']['input']>;
  unitPriceIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  unitPriceLT?: InputMaybe<Scalars['Float']['input']>;
  unitPriceLTE?: InputMaybe<Scalars['Float']['input']>;
  unitPriceNEQ?: InputMaybe<Scalars['Float']['input']>;
  unitPriceNotIn?: InputMaybe<Array<Scalars['Float']['input']>>;
  /** units_in_stock field predicates */
  unitsInStock?: InputMaybe<Scalars['Int']['input']>;
  unitsInStockGT?: InputMaybe<Scalars['Int']['input']>;
  unitsInStockGTE?: InputMaybe<Scalars['Int']['input']>;
  unitsInStockIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  unitsInStockIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  unitsInStockLT?: InputMaybe<Scalars['Int']['input']>;
  unitsInStockLTE?: InputMaybe<Scalars['Int']['input']>;
  unitsInStockNEQ?: InputMaybe<Scalars['Int']['input']>;
  unitsInStockNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  unitsInStockNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** units_on_order field predicates */
  unitsOnOrder?: InputMaybe<Scalars['Int']['input']>;
  unitsOnOrderGT?: InputMaybe<Scalars['Int']['input']>;
  unitsOnOrderGTE?: InputMaybe<Scalars['Int']['input']>;
  unitsOnOrderIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  unitsOnOrderIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  unitsOnOrderLT?: InputMaybe<Scalars['Int']['input']>;
  unitsOnOrderLTE?: InputMaybe<Scalars['Int']['input']>;
  unitsOnOrderNEQ?: InputMaybe<Scalars['Int']['input']>;
  unitsOnOrderNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  unitsOnOrderNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export type ProgressFlag = {
  __typename?: 'ProgressFlag';
  flagged: Scalars['Boolean']['output'];
  status: JobProgress;
};

export type ProgressInput = {
  completionDate?: InputMaybe<Scalars['Time']['input']>;
  inspectionDate?: InputMaybe<Scalars['Time']['input']>;
  inspectionRequired?: InputMaybe<Scalars['Boolean']['input']>;
  installDate?: InputMaybe<Scalars['Time']['input']>;
  permitRequired?: InputMaybe<Scalars['Boolean']['input']>;
  shingleColor?: InputMaybe<Scalars['String']['input']>;
};

export enum PublicDataSection {
  Avatar = 'Avatar',
  Image = 'Image',
  Logo = 'Logo'
}

export type Query = {
  __typename?: 'Query';
  allServiceAreas?: Maybe<Array<State>>;
  /**  api access list */
  apiAccess?: Maybe<ApiAccessConnection>;
  apiUser?: Maybe<ApiUser>;
  apiUserAuditLogs?: Maybe<AuditLogConnection>;
  /**  list api users */
  apiUsers?: Maybe<ApiUserConnection>;
  approvedInstallations: InstallationJobConnection;
  /**  approved jobs as per the logged in user. */
  approvedJobs?: Maybe<JobConnection>;
  /**  assigned jobs  */
  assignedJobs?: Maybe<JobConnection>;
  /**  audit logs */
  auditLogs?: Maybe<AuditLogConnection>;
  cities?: Maybe<Array<City>>;
  counts?: Maybe<Counts>;
  /**  estimate by its id  */
  estimate?: Maybe<Estimate>;
  /**  estimate response from measurement provider  */
  estimateResponses?: Maybe<Array<EstimateResponse>>;
  /**  estimates  */
  estimates?: Maybe<EstimateConnection>;
  /**  zip & product pricing info  */
  getPricing: ProductPricing;
  hvacPackages: PackageConnection;
  /** get current ios app version */
  iosAppVersion: Scalars['String']['output'];
  /** get job by ID */
  job?: Maybe<Job>;
  /**  completed steps history  */
  jobCompletedProgress: Array<Maybe<JobProgressHistory>>;
  /**  all job docs  */
  jobDocs: Array<Maybe<Document>>;
  /**  all job docs byt section  */
  jobDocsBySection: Array<SectionDocs>;
  /** DEPRECATED get a job estimates list  */
  jobEstimates?: Maybe<JobEstimates>;
  /**  get job geocode  */
  jobGeoCode: Array<Maybe<Point>>;
  /** job note list */
  jobNotes?: Maybe<Array<JobNote>>;
  jobProgress?: Maybe<JobProgressHistoryConnection>;
  jobsByProgress?: Maybe<JobConnection>;
  me?: Maybe<SessionUser>;
  /**  search users in my company  */
  myCompanyUsers?: Maybe<UserConnection>;
  /** assigned job detail */
  myJob?: Maybe<Job>;
  myNotifications: NotifyMessageConnection;
  /** training video categories */
  myTrainingVideoCourses?: Maybe<Array<Maybe<CourseVideos>>>;
  /**  training kinds | types as per assigned videos  */
  myTrainingVideoKinds?: Maybe<Array<Entity>>;
  /** training videos */
  myTrainingVideos?: Maybe<TrainingVideoConnection>;
  myUnreadNotificationsCount: Scalars['Int']['output'];
  /**  nearmap api response data  */
  nearmapResponse?: Maybe<NearmapResponse>;
  newULID: Scalars['ID']['output'];
  optionList?: Maybe<Array<Options>>;
  overview: Overview;
  /**  get partner detail by its ID  */
  partner: Partner;
  /** query partner contacts */
  partnerContacts?: Maybe<ContactConnection>;
  /**  get partner detail by its ID  */
  partnerDocs: Array<Document>;
  /**  partner jobs stats  */
  partnerJobStats?: Maybe<Array<PartnerJobStats>>;
  /**
   *  job assigned to partner.
   *    This will include the jobs that are accepted & Job Invites that are waiting partner response
   */
  partnerJobs?: Maybe<JobConnection>;
  partnerMobileSettings: MobileAppSettings;
  /**  check if a partner with same name already exists  */
  partnerNameAvailable: Scalars['Boolean']['output'];
  /** Partner Finance & EPC options */
  partnerOptions?: Maybe<Array<Maybe<Options>>>;
  /**  partner service states  */
  partnerServiceStates: Array<ServiceState>;
  /**  list of partner services  */
  partnerServices: Array<PartnerService>;
  /**  partners list */
  partners: PartnerConnection;
  pendingInstallations: InstallationJobConnection;
  productPackages: ProductPackageConnection;
  products: ProductConnection;
  serviceStates?: Maybe<Array<State>>;
  /** check if user session is still alive */
  sessionAlive: Scalars['Boolean']['output'];
  smartHomePackages: PackageConnection;
  states?: Maybe<Array<State>>;
  /**  completed steps history  */
  surveyCompletedProgress: Array<Maybe<SurveyProgressDetail>>;
  /**  get survey by id  */
  surveyDetails?: Maybe<Survey>;
  /**  all survey docs  */
  surveyDocs: Array<Maybe<Document>>;
  surveyProgress?: Maybe<SurveyProgressConnection>;
  /**  survey schedule for given data  */
  surveySlotAvailability?: Maybe<Array<SurveySlot>>;
  /**  surveys list  */
  surveys: SurveyConnection;
  /**  search training course by its name */
  trainingCourses: TrainingCourseConnection;
  /** training video categories */
  trainingVideoCourses?: Maybe<Array<Maybe<CourseVideos>>>;
  /**  training kinds | types  */
  trainingVideoKinds?: Maybe<Array<Entity>>;
  /** training videos */
  trainingVideos?: Maybe<TrainingVideoConnection>;
  /**  unassigned jobs  */
  unassignedJobs?: Maybe<JobConnection>;
  /**  user detail by its ID  */
  user?: Maybe<User>;
  /**  user email available */
  userEmailAvailable: Scalars['Boolean']['output'];
  userNotifySettings?: Maybe<Array<Maybe<Notify>>>;
  /**  users list */
  users?: Maybe<UserConnection>;
  /**  users search */
  usersSearch?: Maybe<Array<Maybe<UserSearchResult>>>;
  /** doc view url */
  viewDocURL: Scalars['String']['output'];
};


export type QueryApiAccessArgs = {
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryApiUserArgs = {
  id: Scalars['ID']['input'];
};


export type QueryApiUserAuditLogsArgs = {
  id: Scalars['ID']['input'];
  orderBy?: InputMaybe<AuditLogOrder>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryApiUsersArgs = {
  page: PageInput;
  where?: InputMaybe<ApiUserWhereInput>;
};


export type QueryApprovedInstallationsArgs = {
  betweenDates?: InputMaybe<Array<Scalars['String']['input']>>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<InstallationStatus>;
  type: InstallationType;
};


export type QueryApprovedJobsArgs = {
  dates?: InputMaybe<Array<Scalars['String']['input']>>;
  page: PageInput;
  progress?: InputMaybe<JobProgress>;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryAssignedJobsArgs = {
  betweenDates?: InputMaybe<Array<Scalars['String']['input']>>;
  orderBy?: InputMaybe<JobOrder>;
  page: PageInput;
  progress?: InputMaybe<JobProgress>;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryAuditLogsArgs = {
  orderBy?: InputMaybe<AuditLogOrder>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryCitiesArgs = {
  q: Scalars['String']['input'];
  skip: Scalars['Int']['input'];
  state: Scalars['String']['input'];
  take: Scalars['Int']['input'];
};


export type QueryEstimateArgs = {
  id: Scalars['ID']['input'];
};


export type QueryEstimateResponsesArgs = {
  id: Scalars['ID']['input'];
};


export type QueryEstimatesArgs = {
  dtRange?: InputMaybe<Array<Scalars['String']['input']>>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<EstimateStatus>;
};


export type QueryHvacPackagesArgs = {
  page: PageInput;
};


export type QueryJobArgs = {
  id: Scalars['ID']['input'];
};


export type QueryJobCompletedProgressArgs = {
  id: Scalars['ID']['input'];
};


export type QueryJobDocsArgs = {
  jobID: Scalars['ID']['input'];
};


export type QueryJobDocsBySectionArgs = {
  jobID: Scalars['ID']['input'];
};


export type QueryJobEstimatesArgs = {
  jobID: Scalars['ID']['input'];
};


export type QueryJobGeoCodeArgs = {
  id: Scalars['ID']['input'];
};


export type QueryJobNotesArgs = {
  jobID: Scalars['ID']['input'];
};


export type QueryJobProgressArgs = {
  id: Scalars['ID']['input'];
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryJobsByProgressArgs = {
  betweenDates?: InputMaybe<Array<Scalars['String']['input']>>;
  orderBy?: InputMaybe<JobOrder>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
  status: JobProgress;
};


export type QueryMyCompanyUsersArgs = {
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMyJobArgs = {
  id: Scalars['ID']['input'];
};


export type QueryMyNotificationsArgs = {
  page: PageInput;
};


export type QueryMyTrainingVideoCoursesArgs = {
  kind: TrainingType;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryMyTrainingVideosArgs = {
  courseID: Scalars['ID']['input'];
  kind: TrainingType;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNearmapResponseArgs = {
  id: Scalars['ID']['input'];
  respID: Scalars['ID']['input'];
};


export type QueryOptionListArgs = {
  types?: InputMaybe<Array<OptionListType>>;
};


export type QueryOverviewArgs = {
  f: Filter;
};


export type QueryPartnerArgs = {
  id: Scalars['ID']['input'];
  type?: InputMaybe<PartnerType>;
};


export type QueryPartnerContactsArgs = {
  page: PageInput;
  partnerID: Scalars['ID']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPartnerDocsArgs = {
  partnerID: Scalars['ID']['input'];
  section: DocumentSection;
};


export type QueryPartnerJobStatsArgs = {
  partnerType: PartnerType;
  search?: InputMaybe<Scalars['String']['input']>;
  skip: Scalars['Int']['input'];
  take: Scalars['Int']['input'];
};


export type QueryPartnerJobsArgs = {
  dates?: InputMaybe<Array<Scalars['String']['input']>>;
  flagged?: InputMaybe<Scalars['Boolean']['input']>;
  page: PageInput;
  partnerID: Scalars['ID']['input'];
  progress?: InputMaybe<JobProgress>;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPartnerMobileSettingsArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPartnerNameAvailableArgs = {
  id: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  type: PartnerType;
};


export type QueryPartnerOptionsArgs = {
  partnerID: Scalars['ID']['input'];
};


export type QueryPartnerServiceStatesArgs = {
  partnerID: Scalars['ID']['input'];
};


export type QueryPartnerServicesArgs = {
  partnerID: Scalars['ID']['input'];
};


export type QueryPartnersArgs = {
  page: PageInput;
  partnerType?: InputMaybe<PartnerType>;
  search?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPendingInstallationsArgs = {
  approval?: InputMaybe<Approval>;
  betweenDates?: InputMaybe<Array<Scalars['String']['input']>>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
  type: InstallationType;
};


export type QueryProductPackagesArgs = {
  category?: InputMaybe<ProductType>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryProductsArgs = {
  category?: InputMaybe<ProductType>;
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryServiceStatesArgs = {
  q: Scalars['String']['input'];
};


export type QuerySmartHomePackagesArgs = {
  page: PageInput;
};


export type QueryStatesArgs = {
  q: Scalars['String']['input'];
};


export type QuerySurveyCompletedProgressArgs = {
  id: Scalars['ID']['input'];
};


export type QuerySurveyDetailsArgs = {
  id: Scalars['ID']['input'];
};


export type QuerySurveyDocsArgs = {
  surveyID: Scalars['ID']['input'];
};


export type QuerySurveyProgressArgs = {
  id: Scalars['ID']['input'];
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QuerySurveySlotAvailabilityArgs = {
  date: Scalars['String']['input'];
};


export type QuerySurveysArgs = {
  betweenDates?: InputMaybe<Array<Scalars['String']['input']>>;
  orderBy?: InputMaybe<SurveyOrder>;
  page: PageInput;
  progress?: InputMaybe<SurveyProgress>;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTrainingCoursesArgs = {
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryTrainingVideoCoursesArgs = {
  kind: TrainingType;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
};


export type QueryTrainingVideosArgs = {
  courseID: Scalars['ID']['input'];
  kind: TrainingType;
  page: PageInput;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryUnassignedJobsArgs = {
  betweenDates?: InputMaybe<Array<Scalars['String']['input']>>;
  orderBy?: InputMaybe<JobOrder>;
  page: PageInput;
  progress?: InputMaybe<JobProgress>;
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};


export type QueryUserEmailAvailableArgs = {
  email: Scalars['String']['input'];
  id: Scalars['String']['input'];
};


export type QueryUserNotifySettingsArgs = {
  id: Scalars['ID']['input'];
};


export type QueryUsersArgs = {
  page: PageInput;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryUsersSearchArgs = {
  search?: InputMaybe<Scalars['String']['input']>;
};


export type QueryViewDocUrlArgs = {
  docID: Scalars['String']['input'];
};

export enum Role {
  Admin = 'ADMIN',
  None = 'NONE',
  SiteUser = 'SITE_USER'
}

export type SectionDocs = {
  __typename?: 'SectionDocs';
  docs: Array<DocumentInfo>;
  section: JobDocSection;
};

export enum Service {
  AsphaltShingleOverlay = 'ASPHALT_SHINGLE_OVERLAY',
  AsphaltShingleSmallRepairs = 'ASPHALT_SHINGLE_SMALL_REPAIRS',
  AsphaltShingleTearOff = 'ASPHALT_SHINGLE_TEAR_OFF',
  ConcreteTileRemoverReplace = 'CONCRETE_TILE_REMOVER_REPLACE',
  ConcreteTileSmallRepairs = 'CONCRETE_TILE_SMALL_REPAIRS',
  ConcreteTileUnderArrayRoofSwaps = 'CONCRETE_TILE_UNDER_ARRAY_ROOF_SWAPS',
  FlatRoofRepairs = 'FLAT_ROOF_REPAIRS',
  MetalRoofRepairs = 'METAL_ROOF_REPAIRS',
  RolledAsphaltTearOff = 'ROLLED_ASPHALT_TEAR_OFF',
  RoofTrussRetrofits = 'ROOF_TRUSS_RETROFITS',
  SlateTileRemoveReplace = 'SLATE_TILE_REMOVE_REPLACE',
  SlateTileSmallRepairs = 'SLATE_TILE_SMALL_REPAIRS',
  SlateTileUnderArrayRoofSwaps = 'SLATE_TILE_UNDER_ARRAY_ROOF_SWAPS',
  TarGravelRepairs = 'TAR_GRAVEL_REPAIRS'
}

export type ServiceCity = {
  __typename?: 'ServiceCity';
  active: Scalars['Boolean']['output'];
  cityName: Scalars['String']['output'];
  cityZip: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  licenseNo?: Maybe<Scalars['String']['output']>;
  licenseProof?: Maybe<Scalars['String']['output']>;
};

export type ServiceState = {
  __typename?: 'ServiceState';
  cities: Array<ServiceCity>;
  expand: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  licenseExpDate?: Maybe<Scalars['Time']['output']>;
  licenseNo?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

export type SessionUser = {
  __typename?: 'SessionUser';
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  isAdmin: Scalars['Boolean']['output'];
  isCompanyAdmin: Scalars['Boolean']['output'];
  lastName: Scalars['String']['output'];
  partner?: Maybe<PartnerContactInfo>;
  phone?: Maybe<Scalars['String']['output']>;
  picture?: Maybe<Scalars['String']['output']>;
  role: Role;
  status: AccountStatus;
  token?: Maybe<Scalars['String']['output']>;
};

export type SetPasswordInput = {
  confirmPassword: Scalars['String']['input'];
  password: Scalars['String']['input'];
  token: Scalars['String']['input'];
};

export enum SoldAs {
  IndividualItem = 'INDIVIDUAL_ITEM',
  Package = 'PACKAGE'
}

export type State = {
  __typename?: 'State';
  cities: Array<Maybe<City>>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type Subscription = {
  __typename?: 'Subscription';
  currentTime: Scalars['Time']['output'];
};

export type Survey = {
  __typename?: 'Survey';
  address?: Maybe<Scalars['String']['output']>;
  date: Scalars['String']['output'];
  from: Scalars['Time']['output'];
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  progress?: Maybe<SurveyProgress>;
  slot: Scalars['String']['output'];
  status: SurveyStatus;
  to: Scalars['Time']['output'];
};

export type SurveyConnection = {
  __typename?: 'SurveyConnection';
  edges?: Maybe<Array<SurveyEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SurveyEdge = {
  __typename?: 'SurveyEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<Survey>;
};

export type SurveyInput = {
  address: Scalars['String']['input'];
  id: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  notes?: InputMaybe<Scalars['String']['input']>;
  phoneNumber: Scalars['String']['input'];
};

export type SurveyOrder = {
  direction: OrderDirection;
  field?: InputMaybe<SurveyOrderField>;
};

export enum SurveyOrderField {
  Created = 'CREATED'
}

export enum SurveyProgress {
  Completed = 'COMPLETED',
  DocsUploaded = 'DOCS_UPLOADED',
  EnRoute = 'EN_ROUTE',
  OnSite = 'ON_SITE',
  Scheduled = 'SCHEDULED'
}

export type SurveyProgressConnection = {
  __typename?: 'SurveyProgressConnection';
  edges?: Maybe<Array<SurveyProgressEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type SurveyProgressDetail = {
  __typename?: 'SurveyProgressDetail';
  id: Scalars['ID']['output'];
  note: Scalars['String']['output'];
  status: SurveyProgress;
  statusAt: Scalars['Time']['output'];
};

export type SurveyProgressEdge = {
  __typename?: 'SurveyProgressEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<SurveyProgressHistory>;
};

export type SurveyProgressHistory = {
  __typename?: 'SurveyProgressHistory';
  complete: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  note: Scalars['String']['output'];
  status: SurveyProgress;
  statusAt: Scalars['Time']['output'];
};

/**
 * SurveyProgressWhereInput is used for filtering SurveyProgress objects.
 * Input was generated by ent.
 */
export type SurveyProgressWhereInput = {
  and?: InputMaybe<Array<SurveyProgressWhereInput>>;
  /** complete field predicates */
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  completeIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  completeNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  completeNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  /** creator_api edge predicates */
  hasCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorAPIWith?: InputMaybe<Array<ApiUserWhereInput>>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** survey edge predicates */
  hasSurvey?: InputMaybe<Scalars['Boolean']['input']>;
  hasSurveyWith?: InputMaybe<Array<SurveyWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<SurveyProgressWhereInput>;
  /** note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<SurveyProgressWhereInput>>;
  /** status field predicates */
  status?: InputMaybe<SurveyProgress>;
  statusIn?: InputMaybe<Array<SurveyProgress>>;
  statusNEQ?: InputMaybe<SurveyProgress>;
  statusNotIn?: InputMaybe<Array<SurveyProgress>>;
};

export type SurveySlot = {
  __typename?: 'SurveySlot';
  available: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export enum SurveyStatus {
  Completed = 'COMPLETED',
  InProgress = 'IN_PROGRESS',
  Requested = 'REQUESTED',
  Requesting = 'REQUESTING'
}

/**
 * SurveyWhereInput is used for filtering Survey objects.
 * Input was generated by ent.
 */
export type SurveyWhereInput = {
  /** address field predicates */
  address?: InputMaybe<Scalars['String']['input']>;
  addressContains?: InputMaybe<Scalars['String']['input']>;
  addressContainsFold?: InputMaybe<Scalars['String']['input']>;
  addressEqualFold?: InputMaybe<Scalars['String']['input']>;
  addressGT?: InputMaybe<Scalars['String']['input']>;
  addressGTE?: InputMaybe<Scalars['String']['input']>;
  addressHasPrefix?: InputMaybe<Scalars['String']['input']>;
  addressHasSuffix?: InputMaybe<Scalars['String']['input']>;
  addressIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  addressLT?: InputMaybe<Scalars['String']['input']>;
  addressLTE?: InputMaybe<Scalars['String']['input']>;
  addressNEQ?: InputMaybe<Scalars['String']['input']>;
  addressNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  addressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<SurveyWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** date field predicates */
  date?: InputMaybe<Scalars['String']['input']>;
  dateContains?: InputMaybe<Scalars['String']['input']>;
  dateContainsFold?: InputMaybe<Scalars['String']['input']>;
  dateEqualFold?: InputMaybe<Scalars['String']['input']>;
  dateGT?: InputMaybe<Scalars['String']['input']>;
  dateGTE?: InputMaybe<Scalars['String']['input']>;
  dateHasPrefix?: InputMaybe<Scalars['String']['input']>;
  dateHasSuffix?: InputMaybe<Scalars['String']['input']>;
  dateIn?: InputMaybe<Array<Scalars['String']['input']>>;
  dateLT?: InputMaybe<Scalars['String']['input']>;
  dateLTE?: InputMaybe<Scalars['String']['input']>;
  dateNEQ?: InputMaybe<Scalars['String']['input']>;
  dateNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** from field predicates */
  from?: InputMaybe<Scalars['Time']['input']>;
  fromGT?: InputMaybe<Scalars['Time']['input']>;
  fromGTE?: InputMaybe<Scalars['Time']['input']>;
  fromIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  fromLT?: InputMaybe<Scalars['Time']['input']>;
  fromLTE?: InputMaybe<Scalars['Time']['input']>;
  fromNEQ?: InputMaybe<Scalars['Time']['input']>;
  fromNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** created_by edge predicates */
  hasCreatedBy?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedByWith?: InputMaybe<Array<UserWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** progress_history edge predicates */
  hasProgressHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasProgressHistoryWith?: InputMaybe<Array<SurveyProgressWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<SurveyWhereInput>;
  /** notes field predicates */
  notes?: InputMaybe<Scalars['String']['input']>;
  notesContains?: InputMaybe<Scalars['String']['input']>;
  notesContainsFold?: InputMaybe<Scalars['String']['input']>;
  notesEqualFold?: InputMaybe<Scalars['String']['input']>;
  notesGT?: InputMaybe<Scalars['String']['input']>;
  notesGTE?: InputMaybe<Scalars['String']['input']>;
  notesHasPrefix?: InputMaybe<Scalars['String']['input']>;
  notesHasSuffix?: InputMaybe<Scalars['String']['input']>;
  notesIn?: InputMaybe<Array<Scalars['String']['input']>>;
  notesIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  notesLT?: InputMaybe<Scalars['String']['input']>;
  notesLTE?: InputMaybe<Scalars['String']['input']>;
  notesNEQ?: InputMaybe<Scalars['String']['input']>;
  notesNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  notesNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<SurveyWhereInput>>;
  /** phone field predicates */
  phone?: InputMaybe<Scalars['String']['input']>;
  phoneContains?: InputMaybe<Scalars['String']['input']>;
  phoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneGT?: InputMaybe<Scalars['String']['input']>;
  phoneGTE?: InputMaybe<Scalars['String']['input']>;
  phoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneLT?: InputMaybe<Scalars['String']['input']>;
  phoneLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** progress field predicates */
  progress?: InputMaybe<SurveyProgress>;
  /** progress_at field predicates */
  progressAt?: InputMaybe<Scalars['Time']['input']>;
  progressAtGT?: InputMaybe<Scalars['Time']['input']>;
  progressAtGTE?: InputMaybe<Scalars['Time']['input']>;
  progressAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressAtLT?: InputMaybe<Scalars['Time']['input']>;
  progressAtLTE?: InputMaybe<Scalars['Time']['input']>;
  progressAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  progressAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** progress_flag_at field predicates */
  progressFlagAt?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtGT?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtGTE?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressFlagAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressFlagAtLT?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtLTE?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  progressFlagAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressIn?: InputMaybe<Array<SurveyProgress>>;
  progressIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  progressNEQ?: InputMaybe<SurveyProgress>;
  progressNotIn?: InputMaybe<Array<SurveyProgress>>;
  progressNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** slot field predicates */
  slot?: InputMaybe<Scalars['String']['input']>;
  slotContains?: InputMaybe<Scalars['String']['input']>;
  slotContainsFold?: InputMaybe<Scalars['String']['input']>;
  slotEqualFold?: InputMaybe<Scalars['String']['input']>;
  slotGT?: InputMaybe<Scalars['String']['input']>;
  slotGTE?: InputMaybe<Scalars['String']['input']>;
  slotHasPrefix?: InputMaybe<Scalars['String']['input']>;
  slotHasSuffix?: InputMaybe<Scalars['String']['input']>;
  /** slot_id field predicates */
  slotID?: InputMaybe<Scalars['String']['input']>;
  slotIDContains?: InputMaybe<Scalars['String']['input']>;
  slotIDContainsFold?: InputMaybe<Scalars['String']['input']>;
  slotIDEqualFold?: InputMaybe<Scalars['String']['input']>;
  slotIDGT?: InputMaybe<Scalars['String']['input']>;
  slotIDGTE?: InputMaybe<Scalars['String']['input']>;
  slotIDHasPrefix?: InputMaybe<Scalars['String']['input']>;
  slotIDHasSuffix?: InputMaybe<Scalars['String']['input']>;
  slotIDIn?: InputMaybe<Array<Scalars['String']['input']>>;
  slotIDLT?: InputMaybe<Scalars['String']['input']>;
  slotIDLTE?: InputMaybe<Scalars['String']['input']>;
  slotIDNEQ?: InputMaybe<Scalars['String']['input']>;
  slotIDNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  slotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  slotLT?: InputMaybe<Scalars['String']['input']>;
  slotLTE?: InputMaybe<Scalars['String']['input']>;
  slotNEQ?: InputMaybe<Scalars['String']['input']>;
  slotNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** status field predicates */
  status?: InputMaybe<SurveyStatus>;
  statusIn?: InputMaybe<Array<SurveyStatus>>;
  statusNEQ?: InputMaybe<SurveyStatus>;
  statusNotIn?: InputMaybe<Array<SurveyStatus>>;
  /** to field predicates */
  to?: InputMaybe<Scalars['Time']['input']>;
  toGT?: InputMaybe<Scalars['Time']['input']>;
  toGTE?: InputMaybe<Scalars['Time']['input']>;
  toIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  toLT?: InputMaybe<Scalars['Time']['input']>;
  toLTE?: InputMaybe<Scalars['Time']['input']>;
  toNEQ?: InputMaybe<Scalars['Time']['input']>;
  toNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** until field predicates */
  until?: InputMaybe<Scalars['Time']['input']>;
  untilGT?: InputMaybe<Scalars['Time']['input']>;
  untilGTE?: InputMaybe<Scalars['Time']['input']>;
  untilIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  untilIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  untilLT?: InputMaybe<Scalars['Time']['input']>;
  untilLTE?: InputMaybe<Scalars['Time']['input']>;
  untilNEQ?: InputMaybe<Scalars['Time']['input']>;
  untilNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  untilNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * TokenWhereInput is used for filtering Token objects.
 * Input was generated by ent.
 */
export type TokenWhereInput = {
  /** action field predicates */
  action?: InputMaybe<Scalars['String']['input']>;
  actionContains?: InputMaybe<Scalars['String']['input']>;
  actionContainsFold?: InputMaybe<Scalars['String']['input']>;
  actionEqualFold?: InputMaybe<Scalars['String']['input']>;
  actionGT?: InputMaybe<Scalars['String']['input']>;
  actionGTE?: InputMaybe<Scalars['String']['input']>;
  actionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  actionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  actionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  actionLT?: InputMaybe<Scalars['String']['input']>;
  actionLTE?: InputMaybe<Scalars['String']['input']>;
  actionNEQ?: InputMaybe<Scalars['String']['input']>;
  actionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  and?: InputMaybe<Array<TokenWhereInput>>;
  /** confirmed_at field predicates */
  confirmedAt?: InputMaybe<Scalars['Time']['input']>;
  confirmedAtGT?: InputMaybe<Scalars['Time']['input']>;
  confirmedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  confirmedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  confirmedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  confirmedAtLT?: InputMaybe<Scalars['Time']['input']>;
  confirmedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  confirmedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  confirmedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  confirmedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<TokenWhereInput>;
  or?: InputMaybe<Array<TokenWhereInput>>;
};

export enum Topic {
  Assigned = 'ASSIGNED',
  Broadcast = 'BROADCAST',
  Change = 'CHANGE',
  Created = 'CREATED',
  FileUpload = 'FILE_UPLOAD',
  NewMessage = 'NEW_MESSAGE',
  Progress = 'PROGRESS',
  StatusChange = 'STATUS_CHANGE',
  Updated = 'UPDATED'
}

export type TrainingCourse = {
  __typename?: 'TrainingCourse';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type TrainingCourseConnection = {
  __typename?: 'TrainingCourseConnection';
  edges?: Maybe<Array<TrainingCourseEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TrainingCourseEdge = {
  __typename?: 'TrainingCourseEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<TrainingCourse>;
};

/**
 * TrainingCourseWhereInput is used for filtering TrainingCourse objects.
 * Input was generated by ent.
 */
export type TrainingCourseWhereInput = {
  and?: InputMaybe<Array<TrainingCourseWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** training_videos edge predicates */
  hasTrainingVideos?: InputMaybe<Scalars['Boolean']['input']>;
  hasTrainingVideosWith?: InputMaybe<Array<TrainingVideoWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** name field predicates */
  name?: InputMaybe<Scalars['String']['input']>;
  nameContains?: InputMaybe<Scalars['String']['input']>;
  nameContainsFold?: InputMaybe<Scalars['String']['input']>;
  nameEqualFold?: InputMaybe<Scalars['String']['input']>;
  nameGT?: InputMaybe<Scalars['String']['input']>;
  nameGTE?: InputMaybe<Scalars['String']['input']>;
  nameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  nameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  nameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  nameLT?: InputMaybe<Scalars['String']['input']>;
  nameLTE?: InputMaybe<Scalars['String']['input']>;
  nameNEQ?: InputMaybe<Scalars['String']['input']>;
  nameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<TrainingCourseWhereInput>;
  or?: InputMaybe<Array<TrainingCourseWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

export enum TrainingType {
  Roofing = 'ROOFING',
  SiteSurvey = 'SITE_SURVEY',
  Solar = 'SOLAR'
}

export type TrainingVideo = {
  __typename?: 'TrainingVideo';
  assigned?: Maybe<Scalars['Boolean']['output']>;
  course: TrainingCourse;
  description: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  kind: TrainingType;
  posterURL: Scalars['String']['output'];
  title: Scalars['String']['output'];
  videoURL: Scalars['String']['output'];
};

export type TrainingVideoAccess = {
  __typename?: 'TrainingVideoAccess';
  enabled: Scalars['Boolean']['output'];
  videoID: Scalars['ID']['output'];
};

export type TrainingVideoConnection = {
  __typename?: 'TrainingVideoConnection';
  edges?: Maybe<Array<TrainingVideoEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type TrainingVideoEdge = {
  __typename?: 'TrainingVideoEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<TrainingVideo>;
};

/**
 * TrainingVideoWhereInput is used for filtering TrainingVideo objects.
 * Input was generated by ent.
 */
export type TrainingVideoWhereInput = {
  and?: InputMaybe<Array<TrainingVideoWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** description field predicates */
  description?: InputMaybe<Scalars['String']['input']>;
  descriptionContains?: InputMaybe<Scalars['String']['input']>;
  descriptionContainsFold?: InputMaybe<Scalars['String']['input']>;
  descriptionEqualFold?: InputMaybe<Scalars['String']['input']>;
  descriptionGT?: InputMaybe<Scalars['String']['input']>;
  descriptionGTE?: InputMaybe<Scalars['String']['input']>;
  descriptionHasPrefix?: InputMaybe<Scalars['String']['input']>;
  descriptionHasSuffix?: InputMaybe<Scalars['String']['input']>;
  descriptionIn?: InputMaybe<Array<Scalars['String']['input']>>;
  descriptionLT?: InputMaybe<Scalars['String']['input']>;
  descriptionLTE?: InputMaybe<Scalars['String']['input']>;
  descriptionNEQ?: InputMaybe<Scalars['String']['input']>;
  descriptionNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** course edge predicates */
  hasCourse?: InputMaybe<Scalars['Boolean']['input']>;
  hasCourseWith?: InputMaybe<Array<TrainingCourseWhereInput>>;
  /** creator edge predicates */
  hasCreator?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatorWith?: InputMaybe<Array<UserWhereInput>>;
  /** poster edge predicates */
  hasPoster?: InputMaybe<Scalars['Boolean']['input']>;
  hasPosterWith?: InputMaybe<Array<DocumentWhereInput>>;
  /** training_videos edge predicates */
  hasTrainingVideos?: InputMaybe<Scalars['Boolean']['input']>;
  hasTrainingVideosWith?: InputMaybe<Array<PartnerTrainingVideoWhereInput>>;
  /** video edge predicates */
  hasVideo?: InputMaybe<Scalars['Boolean']['input']>;
  hasVideoWith?: InputMaybe<Array<DocumentWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** kind field predicates */
  kind?: InputMaybe<TrainingType>;
  kindIn?: InputMaybe<Array<TrainingType>>;
  kindNEQ?: InputMaybe<TrainingType>;
  kindNotIn?: InputMaybe<Array<TrainingType>>;
  not?: InputMaybe<TrainingVideoWhereInput>;
  or?: InputMaybe<Array<TrainingVideoWhereInput>>;
  /** title field predicates */
  title?: InputMaybe<Scalars['String']['input']>;
  titleContains?: InputMaybe<Scalars['String']['input']>;
  titleContainsFold?: InputMaybe<Scalars['String']['input']>;
  titleEqualFold?: InputMaybe<Scalars['String']['input']>;
  titleGT?: InputMaybe<Scalars['String']['input']>;
  titleGTE?: InputMaybe<Scalars['String']['input']>;
  titleHasPrefix?: InputMaybe<Scalars['String']['input']>;
  titleHasSuffix?: InputMaybe<Scalars['String']['input']>;
  titleIn?: InputMaybe<Array<Scalars['String']['input']>>;
  titleLT?: InputMaybe<Scalars['String']['input']>;
  titleLTE?: InputMaybe<Scalars['String']['input']>;
  titleNEQ?: InputMaybe<Scalars['String']['input']>;
  titleNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * UpdateJobInput is used for update Job object.
 * Input was generated by ent.
 */
export type UpdateJobInput = {
  addActivityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addAssignmentHistoryIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addDocURLIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addPaymentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  addProgressHistoryIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** solar approved job to production and agrees to the terms and conditions */
  agree?: InputMaybe<Scalars['Boolean']['input']>;
  agreeAt?: InputMaybe<Scalars['Time']['input']>;
  changeOrderPrice?: InputMaybe<Scalars['Float']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  clearActivities?: InputMaybe<Scalars['Boolean']['input']>;
  clearAgree?: InputMaybe<Scalars['Boolean']['input']>;
  clearAgreeAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearAssignmentHistory?: InputMaybe<Scalars['Boolean']['input']>;
  clearChangeOrderPrice?: InputMaybe<Scalars['Boolean']['input']>;
  clearCity?: InputMaybe<Scalars['Boolean']['input']>;
  clearCompanyName?: InputMaybe<Scalars['Boolean']['input']>;
  clearCompanyRefID?: InputMaybe<Scalars['Boolean']['input']>;
  clearCompletionDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearContractPrice?: InputMaybe<Scalars['Boolean']['input']>;
  clearCreator?: InputMaybe<Scalars['Boolean']['input']>;
  clearCreatorAPI?: InputMaybe<Scalars['Boolean']['input']>;
  clearCurrentMaterial?: InputMaybe<Scalars['Boolean']['input']>;
  clearCurrentMaterialLowSlope?: InputMaybe<Scalars['Boolean']['input']>;
  clearDocUrls?: InputMaybe<Scalars['Boolean']['input']>;
  clearEpc?: InputMaybe<Scalars['Boolean']['input']>;
  clearEpcPartner?: InputMaybe<Scalars['Boolean']['input']>;
  clearEstimate?: InputMaybe<Scalars['Boolean']['input']>;
  clearEstimatePdf?: InputMaybe<Scalars['Boolean']['input']>;
  clearExternalID?: InputMaybe<Scalars['Boolean']['input']>;
  clearExtraChargeNote?: InputMaybe<Scalars['Boolean']['input']>;
  clearExtraChargeType?: InputMaybe<Scalars['Boolean']['input']>;
  clearExtraCharges?: InputMaybe<Scalars['Boolean']['input']>;
  clearHomeOwner?: InputMaybe<Scalars['Boolean']['input']>;
  clearInspectionDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearInspectionDocURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearInspectionRequired?: InputMaybe<Scalars['Boolean']['input']>;
  clearInstallDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearIntegrationPartner?: InputMaybe<Scalars['Boolean']['input']>;
  clearLatitude?: InputMaybe<Scalars['Boolean']['input']>;
  clearLayer2Material?: InputMaybe<Scalars['Boolean']['input']>;
  clearLayer3Material?: InputMaybe<Scalars['Boolean']['input']>;
  clearLayers?: InputMaybe<Scalars['Boolean']['input']>;
  clearLongitude?: InputMaybe<Scalars['Boolean']['input']>;
  clearMaterialDeliveryDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearNewRoofingMaterial?: InputMaybe<Scalars['Boolean']['input']>;
  clearNewRoofingMaterialLowSlope?: InputMaybe<Scalars['Boolean']['input']>;
  clearNote?: InputMaybe<Scalars['Boolean']['input']>;
  clearNotes?: InputMaybe<Scalars['Boolean']['input']>;
  clearOverrideSummary?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwnerEmail?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwnerFirstName?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwnerLastName?: InputMaybe<Scalars['Boolean']['input']>;
  clearOwnerPhone?: InputMaybe<Scalars['Boolean']['input']>;
  clearPartialPercentage?: InputMaybe<Scalars['Boolean']['input']>;
  clearPartner?: InputMaybe<Scalars['Boolean']['input']>;
  clearPayments?: InputMaybe<Scalars['Boolean']['input']>;
  clearPermitRequired?: InputMaybe<Scalars['Boolean']['input']>;
  clearPoNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearProdImagesURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgress?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgressAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgressFlagAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgressHistory?: InputMaybe<Scalars['Boolean']['input']>;
  clearProgressInspectionDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearRegionID?: InputMaybe<Scalars['Boolean']['input']>;
  clearRepEmail?: InputMaybe<Scalars['Boolean']['input']>;
  clearRepFirstName?: InputMaybe<Scalars['Boolean']['input']>;
  clearRepLastName?: InputMaybe<Scalars['Boolean']['input']>;
  clearRepMobile?: InputMaybe<Scalars['Boolean']['input']>;
  clearRequester?: InputMaybe<Scalars['Boolean']['input']>;
  clearSalesRep?: InputMaybe<Scalars['Boolean']['input']>;
  clearShingleColor?: InputMaybe<Scalars['Boolean']['input']>;
  clearState?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatusAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearStatusFlagAt?: InputMaybe<Scalars['Boolean']['input']>;
  clearStreetName?: InputMaybe<Scalars['Boolean']['input']>;
  clearStreetNumber?: InputMaybe<Scalars['Boolean']['input']>;
  clearWebhookURL?: InputMaybe<Scalars['Boolean']['input']>;
  clearZip?: InputMaybe<Scalars['Boolean']['input']>;
  companyName?: InputMaybe<Scalars['String']['input']>;
  companyRefID?: InputMaybe<Scalars['String']['input']>;
  completionDate?: InputMaybe<Scalars['Time']['input']>;
  contractPrice?: InputMaybe<Scalars['Float']['input']>;
  creatorAPIID?: InputMaybe<Scalars['ID']['input']>;
  creatorID?: InputMaybe<Scalars['ID']['input']>;
  currentMaterial?: InputMaybe<Scalars['String']['input']>;
  currentMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  epcID?: InputMaybe<Scalars['ID']['input']>;
  epcPartnerID?: InputMaybe<Scalars['ID']['input']>;
  estimateID?: InputMaybe<Scalars['ID']['input']>;
  estimatePdfID?: InputMaybe<Scalars['ID']['input']>;
  externalID?: InputMaybe<Scalars['String']['input']>;
  extraChargeNote?: InputMaybe<Scalars['String']['input']>;
  extraChargeType?: InputMaybe<ExtraCharge>;
  extraCharges?: InputMaybe<Scalars['Float']['input']>;
  homeOwnerID?: InputMaybe<Scalars['ID']['input']>;
  /** final inspection date */
  inspectionDate?: InputMaybe<Scalars['Time']['input']>;
  /** final inspection doc url */
  inspectionDocURL?: InputMaybe<Scalars['String']['input']>;
  /** final inspection required flag */
  inspectionRequired?: InputMaybe<Scalars['Boolean']['input']>;
  installDate?: InputMaybe<Scalars['Time']['input']>;
  integrationPartnerID?: InputMaybe<Scalars['ID']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  layer2Material?: InputMaybe<Scalars['String']['input']>;
  layer3Material?: InputMaybe<Scalars['String']['input']>;
  layers?: InputMaybe<Scalars['Int']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  lowslope?: InputMaybe<Scalars['Boolean']['input']>;
  materialDeliveryDate?: InputMaybe<Scalars['Time']['input']>;
  measurementType?: InputMaybe<Scalars['Int']['input']>;
  newRoofingMaterial?: InputMaybe<Scalars['String']['input']>;
  newRoofingMaterialLowSlope?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  overrideSummary?: InputMaybe<Scalars['String']['input']>;
  ownerEmail?: InputMaybe<Scalars['String']['input']>;
  ownerFirstName?: InputMaybe<Scalars['String']['input']>;
  ownerLastName?: InputMaybe<Scalars['String']['input']>;
  ownerPhone?: InputMaybe<Scalars['String']['input']>;
  partialPercentage?: InputMaybe<Scalars['Float']['input']>;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
  permitRequired?: InputMaybe<Scalars['Boolean']['input']>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  /** Production Images Unrestricted URL */
  prodImagesURL?: InputMaybe<Scalars['String']['input']>;
  progress?: InputMaybe<JobProgress>;
  progressAt?: InputMaybe<Scalars['Time']['input']>;
  progressFlagAt?: InputMaybe<Scalars['Time']['input']>;
  progressInspectionDate?: InputMaybe<Scalars['Time']['input']>;
  redeck?: InputMaybe<Scalars['Boolean']['input']>;
  regionID?: InputMaybe<Scalars['Int']['input']>;
  removeActivityIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeAssignmentHistoryIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeDocURLIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeNoteIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removePaymentIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  removeProgressHistoryIDs?: InputMaybe<Array<Scalars['ID']['input']>>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFirstName?: InputMaybe<Scalars['String']['input']>;
  repLastName?: InputMaybe<Scalars['String']['input']>;
  repMobile?: InputMaybe<Scalars['String']['input']>;
  requesterID?: InputMaybe<Scalars['ID']['input']>;
  salesRepID?: InputMaybe<Scalars['ID']['input']>;
  shingleColor?: InputMaybe<Scalars['String']['input']>;
  source?: InputMaybe<JobSource>;
  state?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<JobStatus>;
  statusAt?: InputMaybe<Scalars['Time']['input']>;
  statusFlagAt?: InputMaybe<Scalars['Time']['input']>;
  streetName?: InputMaybe<Scalars['String']['input']>;
  streetNumber?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  webhookURL?: InputMaybe<Scalars['String']['input']>;
  workOrderPrice?: InputMaybe<Scalars['Float']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

/**
 * UpdatePartnerServiceCityInput is used for update PartnerServiceCity object.
 * Input was generated by ent.
 */
export type UpdatePartnerServiceCityInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  clearLicenseNo?: InputMaybe<Scalars['Boolean']['input']>;
  clearProofDocID?: InputMaybe<Scalars['Boolean']['input']>;
  licenseNo?: InputMaybe<Scalars['String']['input']>;
  naicsCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
  postalID?: InputMaybe<Scalars['String']['input']>;
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
};

/**
 * UpdatePartnerServiceStateInput is used for update PartnerServiceState object.
 * Input was generated by ent.
 */
export type UpdatePartnerServiceStateInput = {
  clearLicenseExpDate?: InputMaybe<Scalars['Boolean']['input']>;
  clearLicenseNo?: InputMaybe<Scalars['Boolean']['input']>;
  clearProofDocID?: InputMaybe<Scalars['Boolean']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  licenseExpDate?: InputMaybe<Scalars['Time']['input']>;
  licenseNo?: InputMaybe<Scalars['String']['input']>;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
  proofDocID?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
};

export type UpdateProfileResponse = {
  __typename?: 'UpdateProfileResponse';
  picture?: Maybe<Scalars['String']['output']>;
};

export type UpdateUserInput = {
  firstName: Scalars['String']['input'];
  id: Scalars['ID']['input'];
  lastName: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  role: Role;
  status: AccountStatus;
};

export type User = Node & {
  __typename?: 'User';
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  partner?: Maybe<Entity>;
  phone: Scalars['String']['output'];
  picture?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Role>;
  status?: Maybe<AccountStatus>;
};

/**
 * UserAuthWhereInput is used for filtering UserAuth objects.
 * Input was generated by ent.
 */
export type UserAuthWhereInput = {
  and?: InputMaybe<Array<UserAuthWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<UserAuthWhereInput>;
  or?: InputMaybe<Array<UserAuthWhereInput>>;
  /** provider_id field predicates */
  providerID?: InputMaybe<Scalars['Int']['input']>;
  providerIDGT?: InputMaybe<Scalars['Int']['input']>;
  providerIDGTE?: InputMaybe<Scalars['Int']['input']>;
  providerIDIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  providerIDLT?: InputMaybe<Scalars['Int']['input']>;
  providerIDLTE?: InputMaybe<Scalars['Int']['input']>;
  providerIDNEQ?: InputMaybe<Scalars['Int']['input']>;
  providerIDNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type UserConnection = {
  __typename?: 'UserConnection';
  edges?: Maybe<Array<UserEdge>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type UserEdge = {
  __typename?: 'UserEdge';
  cursor?: Maybe<Scalars['Cursor']['output']>;
  node?: Maybe<User>;
};

export type UserInfo = {
  __typename?: 'UserInfo';
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
  picture?: Maybe<Scalars['String']['output']>;
};

export enum UserNotifyTopic {
  NewJobAlert = 'NEW_JOB_ALERT'
}

export type UserSearchResult = Node & {
  __typename?: 'UserSearchResult';
  email: Scalars['String']['output'];
  firstName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  lastName: Scalars['String']['output'];
  partnerContactTitle?: Maybe<Scalars['String']['output']>;
  partnerContactTypeID?: Maybe<Scalars['Int']['output']>;
  partnerID?: Maybe<Scalars['ID']['output']>;
  partnerName?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
};

/**
 * UserSessionSocketWhereInput is used for filtering UserSessionSocket objects.
 * Input was generated by ent.
 */
export type UserSessionSocketWhereInput = {
  and?: InputMaybe<Array<UserSessionSocketWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** session edge predicates */
  hasSession?: InputMaybe<Scalars['Boolean']['input']>;
  hasSessionWith?: InputMaybe<Array<UserSessionWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<UserSessionSocketWhereInput>;
  or?: InputMaybe<Array<UserSessionSocketWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * UserSessionWhereInput is used for filtering UserSession objects.
 * Input was generated by ent.
 */
export type UserSessionWhereInput = {
  and?: InputMaybe<Array<UserSessionWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** expires_at field predicates */
  expiresAt?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtGTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  expiresAtLT?: InputMaybe<Scalars['Time']['input']>;
  expiresAtLTE?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  expiresAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  /** partner_contact edge predicates */
  hasPartnerContact?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerContactWith?: InputMaybe<Array<PartnerContactWhereInput>>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** sockets edge predicates */
  hasSockets?: InputMaybe<Scalars['Boolean']['input']>;
  hasSocketsWith?: InputMaybe<Array<UserSessionSocketWhereInput>>;
  /** user edge predicates */
  hasUser?: InputMaybe<Scalars['Boolean']['input']>;
  hasUserWith?: InputMaybe<Array<UserWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** ip field predicates */
  ip?: InputMaybe<Scalars['String']['input']>;
  ipContains?: InputMaybe<Scalars['String']['input']>;
  ipContainsFold?: InputMaybe<Scalars['String']['input']>;
  ipEqualFold?: InputMaybe<Scalars['String']['input']>;
  ipGT?: InputMaybe<Scalars['String']['input']>;
  ipGTE?: InputMaybe<Scalars['String']['input']>;
  ipHasPrefix?: InputMaybe<Scalars['String']['input']>;
  ipHasSuffix?: InputMaybe<Scalars['String']['input']>;
  ipIn?: InputMaybe<Array<Scalars['String']['input']>>;
  ipLT?: InputMaybe<Scalars['String']['input']>;
  ipLTE?: InputMaybe<Scalars['String']['input']>;
  ipNEQ?: InputMaybe<Scalars['String']['input']>;
  ipNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  not?: InputMaybe<UserSessionWhereInput>;
  or?: InputMaybe<Array<UserSessionWhereInput>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
};

/**
 * UserWhereInput is used for filtering User objects.
 * Input was generated by ent.
 */
export type UserWhereInput = {
  /** accepted_general_terms field predicates */
  acceptedGeneralTerms?: InputMaybe<Scalars['Boolean']['input']>;
  acceptedGeneralTermsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  acceptedGeneralTermsNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  acceptedGeneralTermsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** accepted_terms_n_privacy field predicates */
  acceptedTermsNPrivacy?: InputMaybe<Scalars['Boolean']['input']>;
  acceptedTermsNPrivacyIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  acceptedTermsNPrivacyNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  acceptedTermsNPrivacyNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  and?: InputMaybe<Array<UserWhereInput>>;
  /** created_at field predicates */
  createdAt?: InputMaybe<Scalars['Time']['input']>;
  createdAtGT?: InputMaybe<Scalars['Time']['input']>;
  createdAtGTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  createdAtLT?: InputMaybe<Scalars['Time']['input']>;
  createdAtLTE?: InputMaybe<Scalars['Time']['input']>;
  createdAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  createdAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** deleted_at field predicates */
  deletedAt?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  deletedAtLT?: InputMaybe<Scalars['Time']['input']>;
  deletedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  deletedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  deletedAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** email field predicates */
  email?: InputMaybe<Scalars['String']['input']>;
  emailContains?: InputMaybe<Scalars['String']['input']>;
  emailContainsFold?: InputMaybe<Scalars['String']['input']>;
  emailEqualFold?: InputMaybe<Scalars['String']['input']>;
  emailGT?: InputMaybe<Scalars['String']['input']>;
  emailGTE?: InputMaybe<Scalars['String']['input']>;
  emailHasPrefix?: InputMaybe<Scalars['String']['input']>;
  emailHasSuffix?: InputMaybe<Scalars['String']['input']>;
  emailIn?: InputMaybe<Array<Scalars['String']['input']>>;
  emailLT?: InputMaybe<Scalars['String']['input']>;
  emailLTE?: InputMaybe<Scalars['String']['input']>;
  emailNEQ?: InputMaybe<Scalars['String']['input']>;
  emailNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** email_verified field predicates */
  emailVerified?: InputMaybe<Scalars['Boolean']['input']>;
  emailVerifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** first_name field predicates */
  firstName?: InputMaybe<Scalars['String']['input']>;
  firstNameContains?: InputMaybe<Scalars['String']['input']>;
  firstNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  firstNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  firstNameGT?: InputMaybe<Scalars['String']['input']>;
  firstNameGTE?: InputMaybe<Scalars['String']['input']>;
  firstNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  firstNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  firstNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  firstNameLT?: InputMaybe<Scalars['String']['input']>;
  firstNameLTE?: InputMaybe<Scalars['String']['input']>;
  firstNameNEQ?: InputMaybe<Scalars['String']['input']>;
  firstNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  firstNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** audit_logs edge predicates */
  hasAuditLogs?: InputMaybe<Scalars['Boolean']['input']>;
  hasAuditLogsWith?: InputMaybe<Array<AuditLogWhereInput>>;
  /** auths edge predicates */
  hasAuths?: InputMaybe<Scalars['Boolean']['input']>;
  hasAuthsWith?: InputMaybe<Array<UserAuthWhereInput>>;
  /** channel_message_read edge predicates */
  hasChannelMessageRead?: InputMaybe<Scalars['Boolean']['input']>;
  hasChannelMessageReadWith?: InputMaybe<Array<ChannelMessageReadWhereInput>>;
  /** chat_channels edge predicates */
  hasChatChannels?: InputMaybe<Scalars['Boolean']['input']>;
  hasChatChannelsWith?: InputMaybe<Array<ChannelSubWhereInput>>;
  /** contact_us_requests edge predicates */
  hasContactUsRequests?: InputMaybe<Scalars['Boolean']['input']>;
  hasContactUsRequestsWith?: InputMaybe<Array<ContactUsWhereInput>>;
  /** created_estimates edge predicates */
  hasCreatedEstimates?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedEstimatesWith?: InputMaybe<Array<EstimateWhereInput>>;
  /** created_installation_jobs edge predicates */
  hasCreatedInstallationJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedInstallationJobsWith?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** created_jobs edge predicates */
  hasCreatedJobs?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedJobsWith?: InputMaybe<Array<JobWhereInput>>;
  /** created_training_courses edge predicates */
  hasCreatedTrainingCourses?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedTrainingCoursesWith?: InputMaybe<Array<TrainingCourseWhereInput>>;
  /** created_training_videos edge predicates */
  hasCreatedTrainingVideos?: InputMaybe<Scalars['Boolean']['input']>;
  hasCreatedTrainingVideosWith?: InputMaybe<Array<TrainingVideoWhereInput>>;
  /** estimate_activities edge predicates */
  hasEstimateActivities?: InputMaybe<Scalars['Boolean']['input']>;
  hasEstimateActivitiesWith?: InputMaybe<Array<EstimateActivityWhereInput>>;
  /** installation_job_status_changer edge predicates */
  hasInstallationJobStatusChanger?: InputMaybe<Scalars['Boolean']['input']>;
  hasInstallationJobStatusChangerWith?: InputMaybe<Array<InstallationJobProgressWhereInput>>;
  /** installation_leads edge predicates */
  hasInstallationLeads?: InputMaybe<Scalars['Boolean']['input']>;
  hasInstallationLeadsWith?: InputMaybe<Array<InstallationJobWhereInput>>;
  /** job_activities edge predicates */
  hasJobActivities?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobActivitiesWith?: InputMaybe<Array<JobActivityWhereInput>>;
  /** job_doc_urls edge predicates */
  hasJobDocUrls?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobDocUrlsWith?: InputMaybe<Array<JobDocUrlWhereInput>>;
  /** job_notes edge predicates */
  hasJobNotes?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobNotesWith?: InputMaybe<Array<JobNoteWhereInput>>;
  /** job_progress_history edge predicates */
  hasJobProgressHistory?: InputMaybe<Scalars['Boolean']['input']>;
  hasJobProgressHistoryWith?: InputMaybe<Array<JobProgressHistoryWhereInput>>;
  /** notify edge predicates */
  hasNotify?: InputMaybe<Scalars['Boolean']['input']>;
  hasNotifyWith?: InputMaybe<Array<NotifySettingWhereInput>>;
  /** partner edge predicates */
  hasPartner?: InputMaybe<Scalars['Boolean']['input']>;
  /** partner_contacts edge predicates */
  hasPartnerContacts?: InputMaybe<Scalars['Boolean']['input']>;
  hasPartnerContactsWith?: InputMaybe<Array<PartnerContactWhereInput>>;
  hasPartnerWith?: InputMaybe<Array<PartnerWhereInput>>;
  /** product_pkg_created edge predicates */
  hasProductPkgCreated?: InputMaybe<Scalars['Boolean']['input']>;
  hasProductPkgCreatedWith?: InputMaybe<Array<ProductPackageWhereInput>>;
  /** products_created edge predicates */
  hasProductsCreated?: InputMaybe<Scalars['Boolean']['input']>;
  hasProductsCreatedWith?: InputMaybe<Array<ProductWhereInput>>;
  /** received_messages edge predicates */
  hasReceivedMessages?: InputMaybe<Scalars['Boolean']['input']>;
  hasReceivedMessagesWith?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** sales edge predicates */
  hasSales?: InputMaybe<Scalars['Boolean']['input']>;
  /** sales_rep_estimates edge predicates */
  hasSalesRepEstimates?: InputMaybe<Scalars['Boolean']['input']>;
  hasSalesRepEstimatesWith?: InputMaybe<Array<EstimateWhereInput>>;
  hasSalesWith?: InputMaybe<Array<JobWhereInput>>;
  /** sent_messages edge predicates */
  hasSentMessages?: InputMaybe<Scalars['Boolean']['input']>;
  hasSentMessagesWith?: InputMaybe<Array<ChannelMessageWhereInput>>;
  /** sessions edge predicates */
  hasSessions?: InputMaybe<Scalars['Boolean']['input']>;
  hasSessionsWith?: InputMaybe<Array<UserSessionWhereInput>>;
  /** survey_progress edge predicates */
  hasSurveyProgress?: InputMaybe<Scalars['Boolean']['input']>;
  hasSurveyProgressWith?: InputMaybe<Array<SurveyProgressWhereInput>>;
  /** surveys edge predicates */
  hasSurveys?: InputMaybe<Scalars['Boolean']['input']>;
  hasSurveysWith?: InputMaybe<Array<SurveyWhereInput>>;
  /** id field predicates */
  id?: InputMaybe<Scalars['ID']['input']>;
  idContainsFold?: InputMaybe<Scalars['ID']['input']>;
  idEqualFold?: InputMaybe<Scalars['ID']['input']>;
  idGT?: InputMaybe<Scalars['ID']['input']>;
  idGTE?: InputMaybe<Scalars['ID']['input']>;
  idIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  idLT?: InputMaybe<Scalars['ID']['input']>;
  idLTE?: InputMaybe<Scalars['ID']['input']>;
  idNEQ?: InputMaybe<Scalars['ID']['input']>;
  idNotIn?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** last_name field predicates */
  lastName?: InputMaybe<Scalars['String']['input']>;
  lastNameContains?: InputMaybe<Scalars['String']['input']>;
  lastNameContainsFold?: InputMaybe<Scalars['String']['input']>;
  lastNameEqualFold?: InputMaybe<Scalars['String']['input']>;
  lastNameGT?: InputMaybe<Scalars['String']['input']>;
  lastNameGTE?: InputMaybe<Scalars['String']['input']>;
  lastNameHasPrefix?: InputMaybe<Scalars['String']['input']>;
  lastNameHasSuffix?: InputMaybe<Scalars['String']['input']>;
  lastNameIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lastNameLT?: InputMaybe<Scalars['String']['input']>;
  lastNameLTE?: InputMaybe<Scalars['String']['input']>;
  lastNameNEQ?: InputMaybe<Scalars['String']['input']>;
  lastNameNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastNameNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** locked_until field predicates */
  lockedUntil?: InputMaybe<Scalars['Time']['input']>;
  lockedUntilGT?: InputMaybe<Scalars['Time']['input']>;
  lockedUntilGTE?: InputMaybe<Scalars['Time']['input']>;
  lockedUntilIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lockedUntilIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  lockedUntilLT?: InputMaybe<Scalars['Time']['input']>;
  lockedUntilLTE?: InputMaybe<Scalars['Time']['input']>;
  lockedUntilNEQ?: InputMaybe<Scalars['Time']['input']>;
  lockedUntilNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  lockedUntilNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<UserWhereInput>;
  /** note field predicates */
  note?: InputMaybe<Scalars['String']['input']>;
  noteContains?: InputMaybe<Scalars['String']['input']>;
  noteContainsFold?: InputMaybe<Scalars['String']['input']>;
  noteEqualFold?: InputMaybe<Scalars['String']['input']>;
  noteGT?: InputMaybe<Scalars['String']['input']>;
  noteGTE?: InputMaybe<Scalars['String']['input']>;
  noteHasPrefix?: InputMaybe<Scalars['String']['input']>;
  noteHasSuffix?: InputMaybe<Scalars['String']['input']>;
  noteIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  noteLT?: InputMaybe<Scalars['String']['input']>;
  noteLTE?: InputMaybe<Scalars['String']['input']>;
  noteNEQ?: InputMaybe<Scalars['String']['input']>;
  noteNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  noteNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  or?: InputMaybe<Array<UserWhereInput>>;
  /** phone field predicates */
  phone?: InputMaybe<Scalars['String']['input']>;
  phoneContains?: InputMaybe<Scalars['String']['input']>;
  phoneContainsFold?: InputMaybe<Scalars['String']['input']>;
  phoneEqualFold?: InputMaybe<Scalars['String']['input']>;
  phoneGT?: InputMaybe<Scalars['String']['input']>;
  phoneGTE?: InputMaybe<Scalars['String']['input']>;
  phoneHasPrefix?: InputMaybe<Scalars['String']['input']>;
  phoneHasSuffix?: InputMaybe<Scalars['String']['input']>;
  phoneIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  phoneLT?: InputMaybe<Scalars['String']['input']>;
  phoneLTE?: InputMaybe<Scalars['String']['input']>;
  phoneNEQ?: InputMaybe<Scalars['String']['input']>;
  phoneNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  phoneNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** phone_verified field predicates */
  phoneVerified?: InputMaybe<Scalars['Boolean']['input']>;
  phoneVerifiedNEQ?: InputMaybe<Scalars['Boolean']['input']>;
  /** picture field predicates */
  picture?: InputMaybe<Scalars['String']['input']>;
  pictureContains?: InputMaybe<Scalars['String']['input']>;
  pictureContainsFold?: InputMaybe<Scalars['String']['input']>;
  pictureEqualFold?: InputMaybe<Scalars['String']['input']>;
  pictureGT?: InputMaybe<Scalars['String']['input']>;
  pictureGTE?: InputMaybe<Scalars['String']['input']>;
  pictureHasPrefix?: InputMaybe<Scalars['String']['input']>;
  pictureHasSuffix?: InputMaybe<Scalars['String']['input']>;
  pictureIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pictureIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  pictureLT?: InputMaybe<Scalars['String']['input']>;
  pictureLTE?: InputMaybe<Scalars['String']['input']>;
  pictureNEQ?: InputMaybe<Scalars['String']['input']>;
  pictureNotIn?: InputMaybe<Array<Scalars['String']['input']>>;
  pictureNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** role field predicates */
  role?: InputMaybe<Role>;
  roleIn?: InputMaybe<Array<Role>>;
  roleNEQ?: InputMaybe<Role>;
  roleNotIn?: InputMaybe<Array<Role>>;
  /** status field predicates */
  status?: InputMaybe<AccountStatus>;
  statusIn?: InputMaybe<Array<AccountStatus>>;
  statusNEQ?: InputMaybe<AccountStatus>;
  statusNotIn?: InputMaybe<Array<AccountStatus>>;
  /** updated_at field predicates */
  updatedAt?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtGTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  updatedAtLT?: InputMaybe<Scalars['Time']['input']>;
  updatedAtLTE?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  updatedAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  /** wrong_attempt_at field predicates */
  wrongAttemptAt?: InputMaybe<Scalars['Time']['input']>;
  wrongAttemptAtGT?: InputMaybe<Scalars['Time']['input']>;
  wrongAttemptAtGTE?: InputMaybe<Scalars['Time']['input']>;
  wrongAttemptAtIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  wrongAttemptAtIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  wrongAttemptAtLT?: InputMaybe<Scalars['Time']['input']>;
  wrongAttemptAtLTE?: InputMaybe<Scalars['Time']['input']>;
  wrongAttemptAtNEQ?: InputMaybe<Scalars['Time']['input']>;
  wrongAttemptAtNotIn?: InputMaybe<Array<Scalars['Time']['input']>>;
  wrongAttemptAtNotNil?: InputMaybe<Scalars['Boolean']['input']>;
  /** wrong_attempts field predicates */
  wrongAttempts?: InputMaybe<Scalars['Int']['input']>;
  wrongAttemptsGT?: InputMaybe<Scalars['Int']['input']>;
  wrongAttemptsGTE?: InputMaybe<Scalars['Int']['input']>;
  wrongAttemptsIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  wrongAttemptsIsNil?: InputMaybe<Scalars['Boolean']['input']>;
  wrongAttemptsLT?: InputMaybe<Scalars['Int']['input']>;
  wrongAttemptsLTE?: InputMaybe<Scalars['Int']['input']>;
  wrongAttemptsNEQ?: InputMaybe<Scalars['Int']['input']>;
  wrongAttemptsNotIn?: InputMaybe<Array<Scalars['Int']['input']>>;
  wrongAttemptsNotNil?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ForgotPasswordMutationVariables = Exact<{
  email: Scalars['String']['input'];
}>;


export type ForgotPasswordMutation = { __typename?: 'Mutation', accForgotPwd: boolean };

export type SetUserPwdMutationVariables = Exact<{
  userID: Scalars['ID']['input'];
  pwd: Scalars['String']['input'];
  confirmPwd: Scalars['String']['input'];
}>;


export type SetUserPwdMutation = { __typename?: 'Mutation', setUserPwd: boolean };

export type UpdateProfileMutationVariables = Exact<{
  inp: InputUserProfile;
}>;


export type UpdateProfileMutation = { __typename?: 'Mutation', updateProfile: boolean };

export type MeQueryVariables = Exact<{ [key: string]: never; }>;


export type MeQuery = { __typename?: 'Query', me?: { __typename?: 'SessionUser', id: string, email: string, firstName: string, lastName: string, status: AccountStatus, role: Role, phone?: string | null, picture?: string | null, token?: string | null, isAdmin: boolean, isCompanyAdmin: boolean, partner?: { __typename?: 'PartnerContactInfo', id: string, type: PartnerType, partnerName: string, status: PartnerStatus, contactType?: PartnerContactType | null, role?: PartnerContactRole | null, mobileAppSettings: { __typename?: 'MobileAppSettings', hideTabs: Array<string> } } | null } | null };

export type UserEmailAvailableQueryVariables = Exact<{
  id: Scalars['String']['input'];
  email: Scalars['String']['input'];
}>;


export type UserEmailAvailableQuery = { __typename?: 'Query', userEmailAvailable: boolean };

export type ApiAccessQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type ApiAccessQuery = { __typename?: 'Query', apiAccess?: { __typename?: 'ApiAccessConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'ApiAccessEdge', node?: { __typename?: 'ApiAccess', id: string, url: string, username?: string | null } | null }> | null } | null };

export type SaveApiAccessMutationVariables = Exact<{
  input: ApiAccessInput;
}>;


export type SaveApiAccessMutation = { __typename?: 'Mutation', saveApiAccess: boolean };

export type ApiUsersQueryVariables = Exact<{
  page: PageInput;
  where?: InputMaybe<ApiUserWhereInput>;
}>;


export type ApiUsersQuery = { __typename?: 'Query', apiUsers?: { __typename?: 'ApiUserConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'ApiUserEdge', node?: { __typename?: 'ApiUser', id: string, username: string, active: boolean } | null }> | null } | null };

export type ApiUserQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type ApiUserQuery = { __typename?: 'Query', apiUser?: { __typename?: 'ApiUser', id: string, username: string, active: boolean, cbApiAuth?: ApiUserCbApiAuth | null, cbApiUrl?: string | null, cbApiUser?: string | null, cbApiPwd?: string | null, cbApiToken?: string | null, cbApiEndpoints?: any | null } | null };

export type AddApiUserMutationVariables = Exact<{
  username: Scalars['String']['input'];
}>;


export type AddApiUserMutation = { __typename?: 'Mutation', addApiUser: string };

export type EditApiUserMutationVariables = Exact<{
  input: ApiUserInput;
}>;


export type EditApiUserMutation = { __typename?: 'Mutation', editApiUser: boolean };

export type ChangeApiUserStatusMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  isActive: Scalars['Boolean']['input'];
}>;


export type ChangeApiUserStatusMutation = { __typename?: 'Mutation', changeApiUserStatus: boolean };

export type RefreshApiUserPwdMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type RefreshApiUserPwdMutation = { __typename?: 'Mutation', refreshApiUserPwd: string };

export type AuditLogsQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
  orderBy?: InputMaybe<AuditLogOrder>;
}>;


export type AuditLogsQuery = { __typename?: 'Query', auditLogs?: { __typename?: 'AuditLogConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'AuditLogEdge', node?: { __typename?: 'AuditLog', id: string, createdAt: any, action: string, description: string, ip: string, user?: { __typename?: 'User', firstName: string, lastName: string } | null, apiUser?: { __typename?: 'ApiUser', username: string } | null } | null }> | null } | null };

export type ApiUserAuditLogsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
  orderBy?: InputMaybe<AuditLogOrder>;
}>;


export type ApiUserAuditLogsQuery = { __typename?: 'Query', apiUserAuditLogs?: { __typename?: 'AuditLogConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'AuditLogEdge', node?: { __typename?: 'AuditLog', id: string, createdAt: any, action: string, description: string, ip: string } | null }> | null } | null };

export type OverviewQueryVariables = Exact<{
  filter: Filter;
}>;


export type OverviewQuery = { __typename?: 'Query', overview: { __typename?: 'Overview', id: Filter, total: number, items?: Array<{ __typename?: 'OverviewItem', id: string, name: string, count: number } | null> | null } };

export type DocumentFragment = { __typename?: 'Document', id: string, key: string, name: string, contentType?: string | null, contentSize: any, ready: boolean } & { ' $fragmentName'?: 'DocumentFragment' };

export type DocumentUploadUrlMutationVariables = Exact<{
  folder: DocumentFolder;
  dir: Scalars['String']['input'];
  section: DocumentSection;
  name: Scalars['String']['input'];
  fileName: Scalars['String']['input'];
  fileType: Scalars['String']['input'];
  fileSize: Scalars['Int64']['input'];
  overwrite: Scalars['Boolean']['input'];
}>;


export type DocumentUploadUrlMutation = { __typename?: 'Mutation', documentUploadUrl: (
    { __typename?: 'Document', uploadUrl?: string | null, meta?: any | null }
    & { ' $fragmentRefs'?: { 'DocumentFragment': DocumentFragment } }
  ) };

export type PublicDataUploadUrlMutationVariables = Exact<{
  dir: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  section: PublicDataSection;
  fileName: Scalars['String']['input'];
  fileType: Scalars['String']['input'];
  fileSize: Scalars['Int64']['input'];
}>;


export type PublicDataUploadUrlMutation = { __typename?: 'Mutation', publicDataUploadUrl: { __typename?: 'Document', id: string, key: string, meta?: any | null, publicUrl?: string | null, uploadUrl?: string | null } };

export type PartnerDocUploadUrlMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  section: DocumentSection;
  name: Scalars['String']['input'];
  fileName: Scalars['String']['input'];
  fileType: Scalars['String']['input'];
  fileSize: Scalars['Int64']['input'];
}>;


export type PartnerDocUploadUrlMutation = { __typename?: 'Mutation', partnerDocUploadUrl: (
    { __typename?: 'Document', uploadUrl?: string | null, meta?: any | null }
    & { ' $fragmentRefs'?: { 'DocumentFragment': DocumentFragment } }
  ) };

export type JobDocUploadUrlMutationVariables = Exact<{
  jobID: Scalars['ID']['input'];
  section: DocumentSection;
  name: Scalars['String']['input'];
  fileName: Scalars['String']['input'];
  fileType: Scalars['String']['input'];
  fileSize: Scalars['Int64']['input'];
}>;


export type JobDocUploadUrlMutation = { __typename?: 'Mutation', jobDocUploadUrl: (
    { __typename?: 'Document', uploadUrl?: string | null, meta?: any | null }
    & { ' $fragmentRefs'?: { 'DocumentFragment': DocumentFragment } }
  ) };

export type DeleteDocMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type DeleteDocMutation = { __typename?: 'Mutation', deleteDoc: boolean };

export type JobDocsQueryVariables = Exact<{
  jobID: Scalars['ID']['input'];
}>;


export type JobDocsQuery = { __typename?: 'Query', jobDocs: Array<{ __typename?: 'Document', id: string, name: string, filename: string, section: string, meta?: any | null } | null> };

export type CreateEstimateMutationVariables = Exact<{
  input: CreateEstimateInput;
}>;


export type CreateEstimateMutation = { __typename?: 'Mutation', createEstimate: string };

export type ApproveEstimateMutationVariables = Exact<{
  input: ApproveEstimateInput;
}>;


export type ApproveEstimateMutation = { __typename?: 'Mutation', approveEstimate: boolean };

export type DenyEstimateMutationVariables = Exact<{
  input: DenyEstimateInput;
}>;


export type DenyEstimateMutation = { __typename?: 'Mutation', denyEstimate: boolean };

export type RemoveDeniedMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type RemoveDeniedMutation = { __typename?: 'Mutation', removeDenied: boolean };

export type TestPricingMutationVariables = Exact<{
  job: CreateEstimateInput;
  measure: Array<Measurement> | Measurement;
}>;


export type TestPricingMutation = { __typename?: 'Mutation', testPricing: { __typename?: 'PriceSummary', total: number, summary: string } };

export type EstimateQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type EstimateQuery = { __typename?: 'Query', estimate?: (
    { __typename?: 'Estimate', id: string, createdAt: any, status: EstimateStatus, companyName: string, partial?: number | null, measurementType: Measure, price?: number | null, priceSummary?: string | null, totalSquares?: number | null, primaryPitch?: number | null, failureReason?: string | null, creatorName: string, bounds?: Array<{ __typename?: 'Point', lat: number, lng: number }> | null, homeOwner: (
      { __typename?: 'HomeOwner', latitude?: number | null, longitude?: number | null }
      & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
    ), salesRep?: (
      { __typename?: 'UserInfo' }
      & { ' $fragmentRefs'?: { 'SalesRepFragment': SalesRepFragment } }
    ) | null, pdf?: { __typename?: 'DocumentInfo', id: string, key: string, name: string, contentType?: string | null, contentSize?: any | null, ready: boolean } | null }
    & { ' $fragmentRefs'?: { 'MaterialFragment': MaterialFragment } }
  ) | null };

export type EstimatesQueryVariables = Exact<{
  status?: InputMaybe<EstimateStatus>;
  search?: InputMaybe<Scalars['String']['input']>;
  dates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  page: PageInput;
}>;


export type EstimatesQuery = { __typename?: 'Query', estimates?: { __typename?: 'EstimateConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'EstimateEdge', node?: { __typename?: 'Estimate', id: string, createdAt: any, status: EstimateStatus, companyName: string, measurementType: Measure, price?: number | null, homeOwner: (
          { __typename?: 'HomeOwner' }
          & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
        ), salesRep?: (
          { __typename?: 'UserInfo' }
          & { ' $fragmentRefs'?: { 'SalesRepFragment': SalesRepFragment } }
        ) | null } | null }> | null } | null };

export type PageFragment = { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean } & { ' $fragmentName'?: 'PageFragment' };

export type UserBasicFragment = { __typename?: 'User', id: string, email: string, name?: string | null, phone: string, role?: Role | null, status?: AccountStatus | null, picture?: string | null } & { ' $fragmentName'?: 'UserBasicFragment' };

export type HomeOwnerFragment = { __typename?: 'HomeOwner', id: string, firstName: string, lastName: string, email?: string | null, phone?: string | null, streetNumber: string, streetName: string, city: string, state: string, zip: string } & { ' $fragmentName'?: 'HomeOwnerFragment' };

export type SalesRepFragment = { __typename?: 'UserInfo', id: string, firstName: string, lastName: string, email: string, phone?: string | null } & { ' $fragmentName'?: 'SalesRepFragment' };

export type CreatedByFragment = { __typename?: 'UserInfo', id: string, firstName: string, lastName: string } & { ' $fragmentName'?: 'CreatedByFragment' };

export type MaterialFragment = { __typename?: 'Estimate', currentMaterial: string, newRoofingMaterial?: string | null, currentMaterialLowSlope?: string | null, newRoofingMaterialLowSlope?: string | null, redeck: boolean, layers: number, layer2Material?: string | null, layer3Material?: string | null } & { ' $fragmentName'?: 'MaterialFragment' };

export type NewUlidQueryVariables = Exact<{ [key: string]: never; }>;


export type NewUlidQuery = { __typename?: 'Query', newULID: string };

export type BookInstallationMutationVariables = Exact<{
  type: InstallationType;
  pkgID: Scalars['ID']['input'];
  productID?: InputMaybe<Scalars['ID']['input']>;
  owner: InstallationOwnerInput;
}>;


export type BookInstallationMutation = { __typename?: 'Mutation', bookInstallation: boolean };

export type ApproveInstallationMutationVariables = Exact<{
  input: InstallationApproveInput;
}>;


export type ApproveInstallationMutation = { __typename?: 'Mutation', approveInstallation: boolean };

export type DenyInstallationMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  reason: Scalars['String']['input'];
}>;


export type DenyInstallationMutation = { __typename?: 'Mutation', denyInstallation: boolean };

export type UndoDenyInstallationMutationVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type UndoDenyInstallationMutation = { __typename?: 'Mutation', undoDenyInstallation: boolean };

export type PendingInstallationsQueryVariables = Exact<{
  type: InstallationType;
  approval?: InputMaybe<Approval>;
  search?: InputMaybe<Scalars['String']['input']>;
  betweenDates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  page: PageInput;
}>;


export type PendingInstallationsQuery = { __typename?: 'Query', pendingInstallations: { __typename?: 'InstallationJobConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'InstallationJobEdge', node?: { __typename?: 'InstallationJob', id: string, ownerName: string, ownerAddress: string, ownerEmail?: string | null, ownerPhone: string, pkg: string, price: number, approval: Approval, status: InstallationStatus, createdAt: any } | null }> | null } };

export type ApprovedInstallationsQueryVariables = Exact<{
  type: InstallationType;
  status?: InputMaybe<InstallationStatus>;
  search?: InputMaybe<Scalars['String']['input']>;
  betweenDates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  page: PageInput;
}>;


export type ApprovedInstallationsQuery = { __typename?: 'Query', approvedInstallations: { __typename?: 'InstallationJobConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'InstallationJobEdge', node?: { __typename?: 'InstallationJob', id: string, ownerName: string, ownerAddress: string, pkg: string, price: number, approval: Approval, status: InstallationStatus, approvalAt: any } | null }> | null } };

export type CreatJobNoteMutationVariables = Exact<{
  jobID: Scalars['ID']['input'];
  note: Scalars['String']['input'];
}>;


export type CreatJobNoteMutation = { __typename?: 'Mutation', creatJobNote: boolean };

export type EditJobNoteMutationVariables = Exact<{
  jobID: Scalars['ID']['input'];
  noteID: Scalars['ID']['input'];
  note: Scalars['String']['input'];
}>;


export type EditJobNoteMutation = { __typename?: 'Mutation', editJobNote: boolean };

export type JobNotesQueryVariables = Exact<{
  jobID: Scalars['ID']['input'];
}>;


export type JobNotesQuery = { __typename?: 'Query', jobNotes?: Array<{ __typename?: 'JobNote', id: string, note: string, createdAt: any, updatedAt: any, creator: { __typename?: 'UserInfo', id: string, firstName: string, lastName: string, picture?: string | null } }> | null };

export type JobProgressUpdateMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  step: JobProgress;
  stepComplete: Scalars['Boolean']['input'];
  note: Scalars['String']['input'];
  data?: InputMaybe<ProgressInput>;
}>;


export type JobProgressUpdateMutation = { __typename?: 'Mutation', jobProgressUpdate: boolean };

export type JobDelayMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  flag: Scalars['Boolean']['input'];
  reason: Scalars['String']['input'];
}>;


export type JobDelayMutation = { __typename?: 'Mutation', jobDelay: boolean };

export type JobProgressQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  page: PageInput;
}>;


export type JobProgressQuery = { __typename?: 'Query', jobProgress?: { __typename?: 'JobProgressHistoryConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'JobProgressHistoryEdge', node?: { __typename?: 'JobProgressHistory', id: string, status: JobProgress, statusAt: any, note: string } | null }> | null } | null };

export type JobCompletedProgressQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type JobCompletedProgressQuery = { __typename?: 'Query', jobCompletedProgress: Array<{ __typename?: 'JobProgressHistory', id: string, status: JobProgress, statusAt: any, complete: boolean, note: string } | null> };

export type AssignPartnerToJobMutationVariables = Exact<{
  jobID: Scalars['ID']['input'];
  partnerID: Scalars['ID']['input'];
}>;


export type AssignPartnerToJobMutation = { __typename?: 'Mutation', assignPartnerToJob: string };

export type JobQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type JobQuery = { __typename?: 'Query', job?: { __typename?: 'Job', id: string, createdAt: any, updatedAt: any, companyName: string, price: number, workOrderPrice: number, creatorName: string, homeOwner?: (
      { __typename?: 'HomeOwner', latitude?: number | null, longitude?: number | null }
      & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
    ) | null, salesRep?: (
      { __typename?: 'UserInfo' }
      & { ' $fragmentRefs'?: { 'SalesRepFragment': SalesRepFragment } }
    ) | null, estimate?: (
      { __typename?: 'Estimate', partial?: number | null, measurementType: Measure, priceSummary?: string | null }
      & { ' $fragmentRefs'?: { 'MaterialFragment': MaterialFragment } }
    ) | null } | null };

export type UnassignedJobsQueryVariables = Exact<{
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
  betweenDates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  orderBy?: InputMaybe<JobOrder>;
}>;


export type UnassignedJobsQuery = { __typename?: 'Query', unassignedJobs?: { __typename?: 'JobConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'JobEdge', node?: { __typename?: 'Job', id: string, createdAt: any, companyName: string, epcName: string, price: number, workOrderPrice: number, homeOwner?: (
          { __typename?: 'HomeOwner' }
          & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
        ) | null } | null }> | null } | null };

export type AssignedJobsQueryVariables = Exact<{
  progress?: InputMaybe<JobProgress>;
  search?: InputMaybe<Scalars['String']['input']>;
  betweenDates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  page: PageInput;
  orderBy?: InputMaybe<JobOrder>;
}>;


export type AssignedJobsQuery = { __typename?: 'Query', assignedJobs?: { __typename?: 'JobConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'JobEdge', node?: { __typename?: 'Job', id: string, createdAt: any, companyName: string, epcName: string, price: number, workOrderPrice: number, progress?: JobProgress | null, progressFlagged?: boolean | null, homeOwner?: (
          { __typename?: 'HomeOwner' }
          & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
        ) | null, contractor?: { __typename?: 'Entity', id: string, name: string } | null } | null }> | null } | null };

export type PendingInvoiceJobsQueryVariables = Exact<{
  page: PageInput;
  search?: InputMaybe<Scalars['String']['input']>;
  betweenDates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  orderBy?: InputMaybe<JobOrder>;
}>;


export type PendingInvoiceJobsQuery = { __typename?: 'Query', jobsByProgress?: { __typename?: 'JobConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'JobEdge', node?: { __typename?: 'Job', id: string, progress?: JobProgress | null, progressAt?: any | null, companyName: string, price: number, installDate?: any | null, inspectionDate?: any | null, homeOwner?: (
          { __typename?: 'HomeOwner' }
          & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
        ) | null, salesRep?: (
          { __typename?: 'UserInfo' }
          & { ' $fragmentRefs'?: { 'SalesRepFragment': SalesRepFragment } }
        ) | null, contractor?: { __typename?: 'Entity', id: string, name: string } | null } | null }> | null } | null };

export type PartnerJobStatsQueryVariables = Exact<{
  partnerType: PartnerType;
  search?: InputMaybe<Scalars['String']['input']>;
  skip: Scalars['Int']['input'];
  take: Scalars['Int']['input'];
}>;


export type PartnerJobStatsQuery = { __typename?: 'Query', partnerJobStats?: Array<{ __typename?: 'PartnerJobStats', id: string, name: string, status: PartnerStatus, newCount: number, newCountFlagged: number, contactedCount: number, contactedCountFlagged: number, confirmedCount: number, confirmedCountFlagged: number, permittingCount: number, permittingCountFlagged: number, scheduledCount: number, scheduledCountFlagged: number, inProgressCount: number, inProgressCountFlagged: number, installedCount: number, installedCountFlagged: number, invoicedCount: number, invoicedCountFlagged: number, delayedCount: number, total: number, totalFlagged: number }> | null };

export type PartnerJobsQueryVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
  flagged?: InputMaybe<Scalars['Boolean']['input']>;
  progress?: InputMaybe<JobProgress>;
  dates?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>;
  page: PageInput;
}>;


export type PartnerJobsQuery = { __typename?: 'Query', partnerJobs?: { __typename?: 'JobConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'JobEdge', node?: { __typename?: 'Job', id: string, companyName: string, price: number, progress?: JobProgress | null, progressAt?: any | null, progressFlagged?: boolean | null, permitRequired?: boolean | null, installDate?: any | null, inspectionDate?: any | null, inspectionRequired?: boolean | null, workOrderPrice: number, epcName: string, homeOwner?: (
          { __typename?: 'HomeOwner' }
          & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
        ) | null, salesRep?: (
          { __typename?: 'UserInfo' }
          & { ' $fragmentRefs'?: { 'SalesRepFragment': SalesRepFragment } }
        ) | null, contractor?: { __typename?: 'Entity', id: string, name: string } | null, estimate?: (
          { __typename?: 'Estimate' }
          & { ' $fragmentRefs'?: { 'MaterialFragment': MaterialFragment } }
        ) | null } | null }> | null } | null };

export type JobEstimatesQueryVariables = Exact<{
  jobID: Scalars['ID']['input'];
}>;


export type JobEstimatesQuery = { __typename?: 'Query', jobEstimates?: { __typename?: 'JobEstimates', id: string, status: string, estimates?: Array<{ __typename?: 'Estimate', id: string, totalSquares?: number | null, primaryPitch?: number | null, price?: number | null, priceSummary?: string | null, bounds?: Array<{ __typename?: 'Point', lat: number, lng: number }> | null }> | null } | null };

export type EstimateResponsesQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type EstimateResponsesQuery = { __typename?: 'Query', estimateResponses?: Array<{ __typename?: 'EstimateResponse', id: string, createdAt: any, description: string, need: boolean, raw?: any | null }> | null };

export type NearmapResponseQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  respID: Scalars['ID']['input'];
}>;


export type NearmapResponseQuery = { __typename?: 'Query', nearmapResponse?: { __typename?: 'NearmapResponse', raw: any, detail: { __typename?: 'NearmapEstimateDetail', price: number, primaryPitchInDegrees: number, primaryPitch: number, tileArea: number, tileRatio: number, shingleArea: number, shingleRatio: number, metalArea: number, metalRatio: number, flatArea: number, flatRatio: number, gableArea: number, gableRatio: number, hipArea: number, hipRatio: number, dutchGableArea: number, dutchGableRatio: number, turretArea: number, turretRatio: number, dominantRoofMaterial: string, dominantRoofMaterialID: number, roofCount: number, totalUnclippedArea: number, roofMaterialRatioTotal: number, roofTypeRatioTotal: number, roofMaterialSurfaceAreaTotal: number, roofTypeSurfaceAreaTotal: number, treeOverhangRatioPrimaryRoof: number, treeOverhangConfidencePrimaryRoof: number, treeOverhangPresenceConfidence: number, treeOverhangAreaPrimaryRoof: number, treeOverhangTotalClippedArea: number, treeOverhangTotalUnClippedArea: number, treeOverhangPresent: boolean, treeOverhangCount: number } } | null };

export type NotificationReadMutationVariables = Exact<{
  messageID: Scalars['ID']['input'];
}>;


export type NotificationReadMutation = { __typename?: 'Mutation', notificationRead: boolean };

export type MyUnreadNotificationsCountQueryVariables = Exact<{ [key: string]: never; }>;


export type MyUnreadNotificationsCountQuery = { __typename?: 'Query', myUnreadNotificationsCount: number };

export type MyNotificationsQueryVariables = Exact<{
  page: PageInput;
}>;


export type MyNotificationsQuery = { __typename?: 'Query', myNotifications: { __typename?: 'NotifyMessageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null }, edges?: Array<{ __typename?: 'NotifyMessageEdge', node: { __typename?: 'NotifyMessage', id: string, channel: Channel, topic: Topic, refID?: string | null, title: string, message: string, from: string, unread: boolean, createdAt: any } }> | null } };

export type OptionListQueryVariables = Exact<{
  types?: InputMaybe<Array<OptionListType> | OptionListType>;
}>;


export type OptionListQuery = { __typename?: 'Query', optionList?: Array<{ __typename?: 'Options', type: OptionListType, options?: Array<{ __typename?: 'Entity', id: string, name: string }> | null }> | null };

export type SavePartnerContactMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  contact: PartnerContactInput;
}>;


export type SavePartnerContactMutation = { __typename?: 'Mutation', savePartnerContact: boolean };

export type PartnerContactSendPwdResetEmailMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  userID: Scalars['ID']['input'];
}>;


export type PartnerContactSendPwdResetEmailMutation = { __typename?: 'Mutation', partnerContactSendPwdResetEmail: boolean };

export type PartnerContactsQueryVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type PartnerContactsQuery = { __typename?: 'Query', partnerContacts?: { __typename?: 'ContactConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'PartnerContactEdge', node?: { __typename?: 'PartnerContact', id: string, userID: string, firstName: string, lastName: string, email: string, phone?: string | null, role?: PartnerContactRole | null, accountStatus?: AccountStatus | null, picture?: string | null, type?: PartnerContactType | null, title?: string | null, description?: string | null } | null }> | null } | null };

export type SavePartnerMobileSettingsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  inp: InputMobileAppSettings;
}>;


export type SavePartnerMobileSettingsMutation = { __typename?: 'Mutation', savePartnerMobileSettings: boolean };

export type PartnerMobileSettingsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type PartnerMobileSettingsQuery = { __typename?: 'Query', partnerMobileSettings: { __typename?: 'MobileAppSettings', logoURL: string, primaryColor: string, hideTabs: Array<string> } };

export type PartnerFragment = { __typename?: 'Partner', id: string, createdAt: any, type: PartnerType, name: string, address?: string | null, website?: string | null, isNationWide?: boolean | null, status: PartnerStatus } & { ' $fragmentName'?: 'PartnerFragment' };

export type ContactFragment = { __typename?: 'PartnerContact', id: string, userID: string, type?: PartnerContactType | null, firstName: string, lastName: string, email: string, phone?: string | null, otherEmail?: string | null, title?: string | null, description?: string | null } & { ' $fragmentName'?: 'ContactFragment' };

export type SavePartnerMutationVariables = Exact<{
  input: PartnerInput;
}>;


export type SavePartnerMutation = { __typename?: 'Mutation', savePartner: boolean };

export type InvitePartnerMutationVariables = Exact<{
  input: InvitePartnerInput;
}>;


export type InvitePartnerMutation = { __typename?: 'Mutation', invitePartner: { __typename?: 'Invite', id: string, type: PartnerType, companyName: string, contactID?: string | null, userID?: string | null, firstName: string, lastName: string, email: string, phone: string, createdAt?: any | null } };

export type SavePartnerCompletedStepsMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  step: Scalars['Int']['input'];
  done?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type SavePartnerCompletedStepsMutation = { __typename?: 'Mutation', savePartnerCompletedSteps: boolean };

export type SetPartnerActiveMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  value: Scalars['Boolean']['input'];
}>;


export type SetPartnerActiveMutation = { __typename?: 'Mutation', setPartnerActive: boolean };

export type SavePartnerContactsMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  contacts: Array<PartnerContactInput> | PartnerContactInput;
}>;


export type SavePartnerContactsMutation = { __typename?: 'Mutation', savePartnerContacts: Array<(
    { __typename?: 'PartnerContact' }
    & { ' $fragmentRefs'?: { 'ContactFragment': ContactFragment } }
  )> };

export type SavePartnerOperationsMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  input: PartnerOperationInput;
}>;


export type SavePartnerOperationsMutation = { __typename?: 'Mutation', savePartnerOperations: boolean };

export type SaveServiceMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  partnerID: Scalars['ID']['input'];
  service: Service;
  active: Scalars['Boolean']['input'];
}>;


export type SaveServiceMutation = { __typename?: 'Mutation', saveService: boolean };

export type SaveLeadTimeMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  asphalt?: InputMaybe<Scalars['String']['input']>;
  metal?: InputMaybe<Scalars['String']['input']>;
  tile?: InputMaybe<Scalars['String']['input']>;
}>;


export type SaveLeadTimeMutation = { __typename?: 'Mutation', saveLeadTime: boolean };

export type SaveServiceStateMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  state: Scalars['String']['input'];
  licNo?: InputMaybe<Scalars['String']['input']>;
  expDate?: InputMaybe<Scalars['Time']['input']>;
  proofDocID?: InputMaybe<Scalars['String']['input']>;
}>;


export type SaveServiceStateMutation = { __typename?: 'Mutation', saveServiceState: boolean };

export type SaveServiceCityMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  postalID: Scalars['ID']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  licNo?: InputMaybe<Scalars['String']['input']>;
  proofDocID?: InputMaybe<Scalars['String']['input']>;
}>;


export type SaveServiceCityMutation = { __typename?: 'Mutation', saveServiceCity: boolean };

export type PartnerNameAvailableQueryVariables = Exact<{
  id: Scalars['ID']['input'];
  type: PartnerType;
  name: Scalars['String']['input'];
}>;


export type PartnerNameAvailableQuery = { __typename?: 'Query', partnerNameAvailable: boolean };

export type PartnerQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type PartnerQuery = { __typename?: 'Query', partner: (
    { __typename?: 'Partner', crewCount: number, jobCapacity: number, setupStepsCompleted: number, asphaltLeadT?: string | null, metalLeadT?: string | null, tileLeadT?: string | null, contacts?: Array<(
      { __typename?: 'PartnerContact', otherEmail?: string | null, title?: string | null, description?: string | null }
      & { ' $fragmentRefs'?: { 'ContactFragment': ContactFragment } }
    )> | null }
    & { ' $fragmentRefs'?: { 'PartnerFragment': PartnerFragment } }
  ) };

export type SolarPartnerQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type SolarPartnerQuery = { __typename?: 'Query', partner: { __typename?: 'Partner', id: string, type: PartnerType, status: PartnerStatus, name: string, address?: string | null, website?: string | null, yearsInBusiness?: number | null, salesVolume?: number | null, financeOptions?: Array<string> | null, downPayment?: number | null, pifDate?: number | null, installInHouse?: boolean | null, epcOptions?: Array<string> | null, setupStepsCompleted: number, contacts?: Array<(
      { __typename?: 'PartnerContact', otherEmail?: string | null, title?: string | null, description?: string | null }
      & { ' $fragmentRefs'?: { 'ContactFragment': ContactFragment } }
    )> | null } };

export type PartnerOptionsQueryVariables = Exact<{
  partnerID: Scalars['ID']['input'];
}>;


export type PartnerOptionsQuery = { __typename?: 'Query', partnerOptions?: Array<{ __typename?: 'Options', type: OptionListType, options?: Array<{ __typename?: 'Entity', id: string, name: string }> | null } | null> | null };

export type PartnersQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
  partnerType?: InputMaybe<PartnerType>;
  status?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type PartnersQuery = { __typename?: 'Query', partners: { __typename?: 'PartnerConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor?: any | null, endCursor?: any | null }, edges?: Array<{ __typename?: 'PartnerEdge', node?: (
        { __typename?: 'Partner', crewCount: number, jobCapacity: number, isActive: boolean }
        & { ' $fragmentRefs'?: { 'PartnerFragment': PartnerFragment } }
      ) | null }> | null } };

export type MyJobQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type MyJobQuery = { __typename?: 'Query', myJob?: { __typename?: 'Job', id: string, createdAt: any, updatedAt: any, companyName: string, price: number, workOrderPrice: number, homeOwner?: (
      { __typename?: 'HomeOwner' }
      & { ' $fragmentRefs'?: { 'HomeOwnerFragment': HomeOwnerFragment } }
    ) | null, salesRep?: (
      { __typename?: 'UserInfo' }
      & { ' $fragmentRefs'?: { 'SalesRepFragment': SalesRepFragment } }
    ) | null, estimate?: (
      { __typename?: 'Estimate', measurementType: Measure }
      & { ' $fragmentRefs'?: { 'MaterialFragment': MaterialFragment } }
    ) | null, contractor?: { __typename?: 'Entity', id: string, name: string } | null } | null };

export type PartnerDocsQueryVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  section: DocumentSection;
}>;


export type PartnerDocsQuery = { __typename?: 'Query', partnerDocs: Array<(
    { __typename?: 'Document' }
    & { ' $fragmentRefs'?: { 'DocumentFragment': DocumentFragment } }
  )> };

export type PartnerServiceStatesQueryVariables = Exact<{
  partnerID: Scalars['ID']['input'];
}>;


export type PartnerServiceStatesQuery = { __typename?: 'Query', partnerServiceStates: Array<{ __typename?: 'ServiceState', id: string, name: string, licenseNo?: string | null, licenseExpDate?: any | null, expand: boolean, cities: Array<{ __typename?: 'ServiceCity', id: string, active: boolean, licenseNo?: string | null, licenseProof?: string | null, cityZip: string, cityName: string }> }>, partnerDocs: Array<(
    { __typename?: 'Document' }
    & { ' $fragmentRefs'?: { 'DocumentFragment': DocumentFragment } }
  )> };

export type PartnerServicesQueryVariables = Exact<{
  partnerID: Scalars['ID']['input'];
}>;


export type PartnerServicesQuery = { __typename?: 'Query', partnerServices: Array<{ __typename?: 'PartnerService', id: string, service: Service, description: string, active: boolean }> };

export type MarkServiceAreaMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  value: Scalars['Boolean']['input'];
}>;


export type MarkServiceAreaMutation = { __typename?: 'Mutation', markServiceArea: boolean };

export type AllServiceAreasQueryVariables = Exact<{ [key: string]: never; }>;


export type AllServiceAreasQuery = { __typename?: 'Query', allServiceAreas?: Array<{ __typename?: 'State', id: string, name: string, cities: Array<{ __typename?: 'City', id: string, zip?: string | null, name?: string | null } | null> }> | null };

export type ServiceStatesQueryVariables = Exact<{
  q: Scalars['String']['input'];
}>;


export type ServiceStatesQuery = { __typename?: 'Query', serviceStates?: Array<{ __typename?: 'State', id: string, name: string, cities: Array<{ __typename?: 'City', id: string, zip?: string | null, name?: string | null } | null> }> | null };

export type StatesQueryVariables = Exact<{
  q: Scalars['String']['input'];
}>;


export type StatesQuery = { __typename?: 'Query', states?: Array<{ __typename?: 'State', id: string, name: string, cities: Array<{ __typename?: 'City', id: string, zip?: string | null, name?: string | null } | null> }> | null };

export type CitiesQueryVariables = Exact<{
  state: Scalars['String']['input'];
  q: Scalars['String']['input'];
  skip: Scalars['Int']['input'];
  take: Scalars['Int']['input'];
}>;


export type CitiesQuery = { __typename?: 'Query', cities?: Array<{ __typename?: 'City', id: string, zip?: string | null, name?: string | null }> | null };

export type GetPricingQueryVariables = Exact<{ [key: string]: never; }>;


export type GetPricingQuery = { __typename?: 'Query', getPricing: { __typename?: 'ProductPricing', id: string, items?: Array<{ __typename?: 'Price', id: string, country: string, state: string, stateAbr: string, city: string, zip: string, productId: number, price: number, pricePer: string }> | null, products?: Array<{ __typename?: 'Product', id: number, name: string }> | null } };

export type SaveProductPackageMutationVariables = Exact<{
  input: ProductPackageInput;
}>;


export type SaveProductPackageMutation = { __typename?: 'Mutation', saveProductPackage: boolean };

export type SaveProductMutationVariables = Exact<{
  input: ProductInput;
}>;


export type SaveProductMutation = { __typename?: 'Mutation', saveProduct: boolean };

export type ProductPackagesQueryVariables = Exact<{
  category?: InputMaybe<ProductType>;
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type ProductPackagesQuery = { __typename?: 'Query', productPackages: { __typename?: 'ProductPackageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'ProductPackageEdge', node?: { __typename?: 'ProductPackage', id: string, category: ProductType, soldAs: SoldAs, name: string, description: string, price: number, features: Array<string>, items: Array<{ __typename?: 'ProductDetail', id: string, name: string, image: { __typename?: 'Document', publicUrl?: string | null } }> } | null }> | null } };

export type ProductsQueryVariables = Exact<{
  category?: InputMaybe<ProductType>;
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type ProductsQuery = { __typename?: 'Query', products: { __typename?: 'ProductConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'ProductEdge', node?: { __typename?: 'ProductInfo', id: string, category: ProductType, name: string, description: string, price: number, features: Array<string>, specialNote?: string | null, image: { __typename?: 'Document', id: string, publicUrl?: string | null } } | null }> | null } };

export type SmartHomePackagesQueryVariables = Exact<{
  page: PageInput;
}>;


export type SmartHomePackagesQuery = { __typename?: 'Query', smartHomePackages: { __typename?: 'PackageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'PackageEdge', node?: { __typename?: 'Package', id: string, category: ProductType, soldAs: SoldAs, name: string, description: string, price: number, features: Array<string>, items: Array<{ __typename?: 'ProductInfo', id: string, name: string, description: string, price: number, features: Array<string>, image: { __typename?: 'Document', publicUrl?: string | null } }> } | null }> | null } };

export type HvacPackagesQueryVariables = Exact<{
  page: PageInput;
}>;


export type HvacPackagesQuery = { __typename?: 'Query', hvacPackages: { __typename?: 'PackageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, endCursor?: any | null, hasNextPage: boolean, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'PackageEdge', node?: { __typename?: 'Package', id: string, category: ProductType, soldAs: SoldAs, name: string, description: string, price: number, features: Array<string>, items: Array<{ __typename?: 'ProductInfo', id: string, name: string, description: string, price: number, features: Array<string>, image: { __typename?: 'Document', publicUrl?: string | null } }> } | null }> | null } };

export type SurveysQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
  orderBy?: InputMaybe<SurveyOrder>;
}>;


export type SurveysQuery = { __typename?: 'Query', surveys: { __typename?: 'SurveyConnection', totalCount: number, edges?: Array<{ __typename?: 'SurveyEdge', node?: { __typename?: 'Survey', id: string, date: string, slot: string, from: any, to: any, name?: string | null, phone?: string | null, address?: string | null, notes?: string | null, status: SurveyStatus } | null }> | null } };

export type SurveySlotAvailabilityQueryVariables = Exact<{
  date: Scalars['String']['input'];
}>;


export type SurveySlotAvailabilityQuery = { __typename?: 'Query', surveySlotAvailability?: Array<{ __typename?: 'SurveySlot', id: string, name: string, available: boolean }> | null };

export type SurveyRequestMutationVariables = Exact<{
  date: Scalars['String']['input'];
  slotID: Scalars['ID']['input'];
}>;


export type SurveyRequestMutation = { __typename?: 'Mutation', surveyRequest: string };

export type SurveyReserveMutationVariables = Exact<{
  input: SurveyInput;
}>;


export type SurveyReserveMutation = { __typename?: 'Mutation', surveyReserve: { __typename?: 'Survey', id: string, date: string, slot: string, from: any, to: any, name?: string | null, phone?: string | null, address?: string | null, notes?: string | null, status: SurveyStatus } };

export type SurveyDetailsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type SurveyDetailsQuery = { __typename?: 'Query', surveyDetails?: { __typename?: 'Survey', id: string, date: string, slot: string, from: any, to: any, name?: string | null, phone?: string | null, address?: string | null, notes?: string | null, status: SurveyStatus } | null };

export type VideoInfoFragment = { __typename?: 'TrainingVideo', id: string, title: string, description: string, posterURL: string, videoURL: string } & { ' $fragmentName'?: 'VideoInfoFragment' };

export type CreateTrainingCourseMutationVariables = Exact<{
  name: Scalars['String']['input'];
}>;


export type CreateTrainingCourseMutation = { __typename?: 'Mutation', createTrainingCourse: { __typename?: 'TrainingCourse', id: string, name: string } };

export type PartnerTrainingVideoAccessMutationVariables = Exact<{
  partnerID: Scalars['ID']['input'];
  videoID: Scalars['ID']['input'];
  enabled: Scalars['Boolean']['input'];
}>;


export type PartnerTrainingVideoAccessMutation = { __typename?: 'Mutation', partnerTrainingVideoAccess: boolean };

export type SaveTrainingVideoMutationVariables = Exact<{
  inp: InputTrainingVideo;
}>;


export type SaveTrainingVideoMutation = { __typename?: 'Mutation', saveTrainingVideo: boolean };

export type TrainingCoursesQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type TrainingCoursesQuery = { __typename?: 'Query', trainingCourses: { __typename?: 'TrainingCourseConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'TrainingCourseEdge', cursor?: any | null, node?: { __typename?: 'TrainingCourse', id: string, name: string } | null }> | null } };

export type TrainingVideoKindsQueryVariables = Exact<{ [key: string]: never; }>;


export type TrainingVideoKindsQuery = { __typename?: 'Query', trainingVideoKinds?: Array<{ __typename?: 'Entity', id: string, name: string }> | null };

export type TrainingVideoCoursesQueryVariables = Exact<{
  kind: TrainingType;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
}>;


export type TrainingVideoCoursesQuery = { __typename?: 'Query', trainingVideoCourses?: Array<{ __typename?: 'CourseVideos', id: string, name: string, videos: { __typename?: 'TrainingVideoConnection', totalCount: number, pageInfo: (
        { __typename?: 'PageInfo' }
        & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
      ), edges?: Array<{ __typename?: 'TrainingVideoEdge', cursor?: any | null, node?: (
          { __typename?: 'TrainingVideo', assigned?: boolean | null }
          & { ' $fragmentRefs'?: { 'VideoInfoFragment': VideoInfoFragment } }
        ) | null }> | null } } | null> | null };

export type TrainingVideosQueryVariables = Exact<{
  kind: TrainingType;
  courseID: Scalars['ID']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
  partnerID?: InputMaybe<Scalars['ID']['input']>;
  page: PageInput;
}>;


export type TrainingVideosQuery = { __typename?: 'Query', trainingVideos?: { __typename?: 'TrainingVideoConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'TrainingVideoEdge', cursor?: any | null, node?: (
        { __typename?: 'TrainingVideo', kind: TrainingType, assigned?: boolean | null }
        & { ' $fragmentRefs'?: { 'VideoInfoFragment': VideoInfoFragment } }
      ) | null }> | null } | null };

export type MyTrainingVideoKindsQueryVariables = Exact<{ [key: string]: never; }>;


export type MyTrainingVideoKindsQuery = { __typename?: 'Query', myTrainingVideoKinds?: Array<{ __typename?: 'Entity', id: string, name: string }> | null };

export type MyTrainingVideoCoursesQueryVariables = Exact<{
  kind: TrainingType;
  pageSize?: InputMaybe<Scalars['Int']['input']>;
}>;


export type MyTrainingVideoCoursesQuery = { __typename?: 'Query', myTrainingVideoCourses?: Array<{ __typename?: 'CourseVideos', id: string, name: string, videos: { __typename?: 'TrainingVideoConnection', totalCount: number, pageInfo: (
        { __typename?: 'PageInfo' }
        & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
      ), edges?: Array<{ __typename?: 'TrainingVideoEdge', cursor?: any | null, node?: (
          { __typename?: 'TrainingVideo' }
          & { ' $fragmentRefs'?: { 'VideoInfoFragment': VideoInfoFragment } }
        ) | null }> | null } } | null> | null };

export type MyTrainingVideosQueryVariables = Exact<{
  kind: TrainingType;
  courseID: Scalars['ID']['input'];
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type MyTrainingVideosQuery = { __typename?: 'Query', myTrainingVideos?: { __typename?: 'TrainingVideoConnection', totalCount: number, pageInfo: (
      { __typename?: 'PageInfo' }
      & { ' $fragmentRefs'?: { 'PageFragment': PageFragment } }
    ), edges?: Array<{ __typename?: 'TrainingVideoEdge', cursor?: any | null, node?: (
        { __typename?: 'TrainingVideo', kind: TrainingType }
        & { ' $fragmentRefs'?: { 'VideoInfoFragment': VideoInfoFragment } }
      ) | null }> | null } | null };

export type UserQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type UserQuery = { __typename?: 'Query', user?: { __typename?: 'User', id: string, email: string, firstName: string, lastName: string, phone: string, role?: Role | null, status?: AccountStatus | null, note?: string | null } | null };

export type UsersQueryVariables = Exact<{
  page: PageInput;
  where?: InputMaybe<UserWhereInput>;
}>;


export type UsersQuery = { __typename?: 'Query', users?: { __typename?: 'UserConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'UserEdge', node?: (
        { __typename?: 'User' }
        & { ' $fragmentRefs'?: { 'UserBasicFragment': UserBasicFragment } }
      ) | null }> | null } | null };

export type UsersSearchQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
}>;


export type UsersSearchQuery = { __typename?: 'Query', usersSearch?: Array<{ __typename?: 'UserSearchResult', id: string, firstName: string, lastName: string, email: string, phone?: string | null, partnerID?: string | null, partnerName?: string | null, partnerContactTypeID?: number | null, partnerContactTitle?: string | null } | null> | null };

export type MyCompanyUsersQueryVariables = Exact<{
  search?: InputMaybe<Scalars['String']['input']>;
  page: PageInput;
}>;


export type MyCompanyUsersQuery = { __typename?: 'Query', myCompanyUsers?: { __typename?: 'UserConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', startCursor?: any | null, hasNextPage: boolean, endCursor?: any | null, hasPreviousPage: boolean }, edges?: Array<{ __typename?: 'UserEdge', node?: { __typename?: 'User', id: string, firstName: string, lastName: string, email: string, phone: string, picture?: string | null } | null }> | null } | null };

export type CreateUserMutationVariables = Exact<{
  input: CreateUserInput;
}>;


export type CreateUserMutation = { __typename?: 'Mutation', createUser: string };

export type UpdateUserMutationVariables = Exact<{
  input: UpdateUserInput;
}>;


export type UpdateUserMutation = { __typename?: 'Mutation', updateUser: boolean };

export type SaveNotifySettingsMutationVariables = Exact<{
  id: Scalars['ID']['input'];
  topicID: Scalars['String']['input'];
  email: Scalars['Boolean']['input'];
}>;


export type SaveNotifySettingsMutation = { __typename?: 'Mutation', saveNotifySettings: boolean };

export type UserNotifySettingsQueryVariables = Exact<{
  id: Scalars['ID']['input'];
}>;


export type UserNotifySettingsQuery = { __typename?: 'Query', userNotifySettings?: Array<{ __typename?: 'Notify', id: string, topic: string, receiveEmail: boolean, receiveSMS: boolean } | null> | null };

export const DocumentFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"document"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Document"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}}]} as unknown as DocumentNode<DocumentFragment, unknown>;
export const PageFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]} as unknown as DocumentNode<PageFragment, unknown>;
export const UserBasicFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"userBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"picture"}}]}}]} as unknown as DocumentNode<UserBasicFragment, unknown>;
export const HomeOwnerFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}}]} as unknown as DocumentNode<HomeOwnerFragment, unknown>;
export const SalesRepFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}}]} as unknown as DocumentNode<SalesRepFragment, unknown>;
export const CreatedByFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"createdBy"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}}]}}]} as unknown as DocumentNode<CreatedByFragment, unknown>;
export const MaterialFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"material"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Estimate"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"currentMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"redeck"}},{"kind":"Field","name":{"kind":"Name","value":"layers"}},{"kind":"Field","name":{"kind":"Name","value":"layer2Material"}},{"kind":"Field","name":{"kind":"Name","value":"layer3Material"}}]}}]} as unknown as DocumentNode<MaterialFragment, unknown>;
export const PartnerFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"partner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"isNationWide"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<PartnerFragment, unknown>;
export const ContactFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"contact"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerContact"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"otherEmail"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]} as unknown as DocumentNode<ContactFragment, unknown>;
export const VideoInfoFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"videoInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingVideo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"posterURL"}},{"kind":"Field","name":{"kind":"Name","value":"videoURL"}}]}}]} as unknown as DocumentNode<VideoInfoFragment, unknown>;
export const ForgotPasswordDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ForgotPassword"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"accForgotPwd"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}}]}]}}]} as unknown as DocumentNode<ForgotPasswordMutation, ForgotPasswordMutationVariables>;
export const SetUserPwdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SetUserPwd"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pwd"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"confirmPwd"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"setUserPwd"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"userID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userID"}}},{"kind":"Argument","name":{"kind":"Name","value":"pwd"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pwd"}}},{"kind":"Argument","name":{"kind":"Name","value":"confirmPwd"},"value":{"kind":"Variable","name":{"kind":"Name","value":"confirmPwd"}}}]}]}}]} as unknown as DocumentNode<SetUserPwdMutation, SetUserPwdMutationVariables>;
export const UpdateProfileDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateProfile"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InputUserProfile"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateProfile"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inp"}}}]}]}}]} as unknown as DocumentNode<UpdateProfileMutation, UpdateProfileMutationVariables>;
export const MeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Me"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"me"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"picture"}},{"kind":"Field","name":{"kind":"Name","value":"partner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"partnerName"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"contactType"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"mobileAppSettings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hideTabs"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"isAdmin"}},{"kind":"Field","name":{"kind":"Name","value":"isCompanyAdmin"}}]}}]}}]} as unknown as DocumentNode<MeQuery, MeQueryVariables>;
export const UserEmailAvailableDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UserEmailAvailable"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userEmailAvailable"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}}]}]}}]} as unknown as DocumentNode<UserEmailAvailableQuery, UserEmailAvailableQueryVariables>;
export const ApiAccessDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ApiAccess"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"apiAccess"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"username"}}]}}]}}]}}]}}]} as unknown as DocumentNode<ApiAccessQuery, ApiAccessQueryVariables>;
export const SaveApiAccessDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveApiAccess"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ApiAccessInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveApiAccess"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<SaveApiAccessMutation, SaveApiAccessMutationVariables>;
export const ApiUsersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ApiUsers"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ApiUserWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"apiUsers"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"active"}}]}}]}}]}}]}}]} as unknown as DocumentNode<ApiUsersQuery, ApiUsersQueryVariables>;
export const ApiUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ApiUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"apiUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"cbApiAuth"}},{"kind":"Field","name":{"kind":"Name","value":"cbApiUrl"}},{"kind":"Field","name":{"kind":"Name","value":"cbApiUser"}},{"kind":"Field","name":{"kind":"Name","value":"cbApiPwd"}},{"kind":"Field","name":{"kind":"Name","value":"cbApiToken"}},{"kind":"Field","name":{"kind":"Name","value":"cbApiEndpoints"}}]}}]}}]} as unknown as DocumentNode<ApiUserQuery, ApiUserQueryVariables>;
export const AddApiUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AddApiUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"username"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"addApiUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"username"},"value":{"kind":"Variable","name":{"kind":"Name","value":"username"}}}]}]}}]} as unknown as DocumentNode<AddApiUserMutation, AddApiUserMutationVariables>;
export const EditApiUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"EditApiUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ApiUserInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"editApiUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<EditApiUserMutation, EditApiUserMutationVariables>;
export const ChangeApiUserStatusDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ChangeApiUserStatus"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isActive"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"changeApiUserStatus"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"isActive"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isActive"}}}]}]}}]} as unknown as DocumentNode<ChangeApiUserStatusMutation, ChangeApiUserStatusMutationVariables>;
export const RefreshApiUserPwdDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RefreshApiUserPwd"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"refreshApiUserPwd"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<RefreshApiUserPwdMutation, RefreshApiUserPwdMutationVariables>;
export const AuditLogsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AuditLogs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"AuditLogOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"auditLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"ip"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"apiUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"username"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AuditLogsQuery, AuditLogsQueryVariables>;
export const ApiUserAuditLogsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ApiUserAuditLogs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"AuditLogOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"apiUserAuditLogs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"action"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"ip"}}]}}]}}]}}]}}]} as unknown as DocumentNode<ApiUserAuditLogsQuery, ApiUserAuditLogsQueryVariables>;
export const OverviewDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Overview"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filter"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Filter"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"overview"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"f"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filter"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"total"}},{"kind":"Field","name":{"kind":"Name","value":"items"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]} as unknown as DocumentNode<OverviewQuery, OverviewQueryVariables>;
export const DocumentUploadUrlDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"documentUploadUrl"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"folder"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DocumentFolder"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"dir"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"section"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DocumentSection"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int64"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"overwrite"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"documentUploadUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"doc"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"folder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"folder"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"dir"},"value":{"kind":"Variable","name":{"kind":"Name","value":"dir"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"section"},"value":{"kind":"Variable","name":{"kind":"Name","value":"section"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"fileName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"overwrite"},"value":{"kind":"Variable","name":{"kind":"Name","value":"overwrite"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"document"}},{"kind":"Field","name":{"kind":"Name","value":"uploadUrl"}},{"kind":"Field","name":{"kind":"Name","value":"meta"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"document"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Document"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}}]} as unknown as DocumentNode<DocumentUploadUrlMutation, DocumentUploadUrlMutationVariables>;
export const PublicDataUploadUrlDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PublicDataUploadUrl"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"dir"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"section"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PublicDataSection"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int64"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"publicDataUploadUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"entityID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"dir"}}},{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"Variable","name":{"kind":"Name","value":"section"}}},{"kind":"Argument","name":{"kind":"Name","value":"doc"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"fileName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"meta"}},{"kind":"Field","name":{"kind":"Name","value":"publicUrl"}},{"kind":"Field","name":{"kind":"Name","value":"uploadUrl"}}]}}]}}]} as unknown as DocumentNode<PublicDataUploadUrlMutation, PublicDataUploadUrlMutationVariables>;
export const PartnerDocUploadUrlDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PartnerDocUploadUrl"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"section"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DocumentSection"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int64"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerDocUploadUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"Variable","name":{"kind":"Name","value":"section"}}},{"kind":"Argument","name":{"kind":"Name","value":"doc"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"fileName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"document"}},{"kind":"Field","name":{"kind":"Name","value":"uploadUrl"}},{"kind":"Field","name":{"kind":"Name","value":"meta"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"document"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Document"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}}]} as unknown as DocumentNode<PartnerDocUploadUrlMutation, PartnerDocUploadUrlMutationVariables>;
export const JobDocUploadUrlDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"JobDocUploadUrl"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"section"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DocumentSection"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int64"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobDocUploadUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}},{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"Variable","name":{"kind":"Name","value":"section"}}},{"kind":"Argument","name":{"kind":"Name","value":"doc"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"fileName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileName"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileType"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"contentSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fileSize"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"document"}},{"kind":"Field","name":{"kind":"Name","value":"uploadUrl"}},{"kind":"Field","name":{"kind":"Name","value":"meta"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"document"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Document"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}}]} as unknown as DocumentNode<JobDocUploadUrlMutation, JobDocUploadUrlMutationVariables>;
export const DeleteDocDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteDoc"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteDoc"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<DeleteDocMutation, DeleteDocMutationVariables>;
export const JobDocsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobDocs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobDocs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"filename"}},{"kind":"Field","name":{"kind":"Name","value":"section"}},{"kind":"Field","name":{"kind":"Name","value":"meta"}}]}}]}}]} as unknown as DocumentNode<JobDocsQuery, JobDocsQueryVariables>;
export const CreateEstimateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createEstimate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateEstimateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createEstimate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<CreateEstimateMutation, CreateEstimateMutationVariables>;
export const ApproveEstimateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ApproveEstimate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ApproveEstimateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"approveEstimate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<ApproveEstimateMutation, ApproveEstimateMutationVariables>;
export const DenyEstimateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DenyEstimate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DenyEstimateInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"denyEstimate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<DenyEstimateMutation, DenyEstimateMutationVariables>;
export const RemoveDeniedDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RemoveDenied"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"removeDenied"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<RemoveDeniedMutation, RemoveDeniedMutationVariables>;
export const TestPricingDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"TestPricing"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"job"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateEstimateInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"measure"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Measurement"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"testPricing"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"job"},"value":{"kind":"Variable","name":{"kind":"Name","value":"job"}}},{"kind":"Argument","name":{"kind":"Name","value":"measure"},"value":{"kind":"Variable","name":{"kind":"Name","value":"measure"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"total"}},{"kind":"Field","name":{"kind":"Name","value":"summary"}}]}}]}}]} as unknown as DocumentNode<TestPricingMutation, TestPricingMutationVariables>;
export const EstimateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"estimate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"estimate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"FragmentSpread","name":{"kind":"Name","value":"material"}},{"kind":"Field","name":{"kind":"Name","value":"partial"}},{"kind":"Field","name":{"kind":"Name","value":"measurementType"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"priceSummary"}},{"kind":"Field","name":{"kind":"Name","value":"totalSquares"}},{"kind":"Field","name":{"kind":"Name","value":"primaryPitch"}},{"kind":"Field","name":{"kind":"Name","value":"failureReason"}},{"kind":"Field","name":{"kind":"Name","value":"bounds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lat"}},{"kind":"Field","name":{"kind":"Name","value":"lng"}}]}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}},{"kind":"Field","name":{"kind":"Name","value":"latitude"}},{"kind":"Field","name":{"kind":"Name","value":"longitude"}}]}},{"kind":"Field","name":{"kind":"Name","value":"salesRep"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"salesRep"}}]}},{"kind":"Field","name":{"kind":"Name","value":"pdf"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}},{"kind":"Field","name":{"kind":"Name","value":"creatorName"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"material"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Estimate"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"currentMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"redeck"}},{"kind":"Field","name":{"kind":"Name","value":"layers"}},{"kind":"Field","name":{"kind":"Name","value":"layer2Material"}},{"kind":"Field","name":{"kind":"Name","value":"layer3Material"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}}]} as unknown as DocumentNode<EstimateQuery, EstimateQueryVariables>;
export const EstimatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Estimates"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"status"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"EstimateStatus"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"dates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"estimates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"status"},"value":{"kind":"Variable","name":{"kind":"Name","value":"status"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"dtRange"},"value":{"kind":"Variable","name":{"kind":"Name","value":"dates"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"measurementType"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}}]}},{"kind":"Field","name":{"kind":"Name","value":"salesRep"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"salesRep"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}}]} as unknown as DocumentNode<EstimatesQuery, EstimatesQueryVariables>;
export const NewUlidDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"NewULID"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"newULID"}}]}}]} as unknown as DocumentNode<NewUlidQuery, NewUlidQueryVariables>;
export const BookInstallationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"BookInstallation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstallationType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pkgID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"owner"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstallationOwnerInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bookInstallation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}},{"kind":"Argument","name":{"kind":"Name","value":"pkgID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pkgID"}}},{"kind":"Argument","name":{"kind":"Name","value":"productID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productID"}}},{"kind":"Argument","name":{"kind":"Name","value":"owner"},"value":{"kind":"Variable","name":{"kind":"Name","value":"owner"}}}]}]}}]} as unknown as DocumentNode<BookInstallationMutation, BookInstallationMutationVariables>;
export const ApproveInstallationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ApproveInstallation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstallationApproveInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"approveInstallation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<ApproveInstallationMutation, ApproveInstallationMutationVariables>;
export const DenyInstallationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DenyInstallation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"reason"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"denyInstallation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"reason"},"value":{"kind":"Variable","name":{"kind":"Name","value":"reason"}}}]}]}}]} as unknown as DocumentNode<DenyInstallationMutation, DenyInstallationMutationVariables>;
export const UndoDenyInstallationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UndoDenyInstallation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"undoDenyInstallation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}]}}]} as unknown as DocumentNode<UndoDenyInstallationMutation, UndoDenyInstallationMutationVariables>;
export const PendingInstallationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PendingInstallations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstallationType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"approval"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Approval"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pendingInstallations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}},{"kind":"Argument","name":{"kind":"Name","value":"approval"},"value":{"kind":"Variable","name":{"kind":"Name","value":"approval"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"betweenDates"},"value":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"ownerName"}},{"kind":"Field","name":{"kind":"Name","value":"ownerAddress"}},{"kind":"Field","name":{"kind":"Name","value":"ownerEmail"}},{"kind":"Field","name":{"kind":"Name","value":"ownerPhone"}},{"kind":"Field","name":{"kind":"Name","value":"pkg"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"approval"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]} as unknown as DocumentNode<PendingInstallationsQuery, PendingInstallationsQueryVariables>;
export const ApprovedInstallationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ApprovedInstallations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InstallationType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"status"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"InstallationStatus"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"approvedInstallations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}},{"kind":"Argument","name":{"kind":"Name","value":"status"},"value":{"kind":"Variable","name":{"kind":"Name","value":"status"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"betweenDates"},"value":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"ownerName"}},{"kind":"Field","name":{"kind":"Name","value":"ownerAddress"}},{"kind":"Field","name":{"kind":"Name","value":"pkg"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"approval"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"approvalAt"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]} as unknown as DocumentNode<ApprovedInstallationsQuery, ApprovedInstallationsQueryVariables>;
export const CreatJobNoteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"creatJobNote"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"note"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"creatJobNote"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}},{"kind":"Argument","name":{"kind":"Name","value":"note"},"value":{"kind":"Variable","name":{"kind":"Name","value":"note"}}}]}]}}]} as unknown as DocumentNode<CreatJobNoteMutation, CreatJobNoteMutationVariables>;
export const EditJobNoteDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"editJobNote"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"noteID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"note"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"editJobNote"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}},{"kind":"Argument","name":{"kind":"Name","value":"noteID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"noteID"}}},{"kind":"Argument","name":{"kind":"Name","value":"note"},"value":{"kind":"Variable","name":{"kind":"Name","value":"note"}}}]}]}}]} as unknown as DocumentNode<EditJobNoteMutation, EditJobNoteMutationVariables>;
export const JobNotesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobNotes"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobNotes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"note"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"creator"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"picture"}}]}}]}}]}}]} as unknown as DocumentNode<JobNotesQuery, JobNotesQueryVariables>;
export const JobProgressUpdateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"JobProgressUpdate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"step"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"JobProgress"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"stepComplete"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"note"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"data"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProgressInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobProgressUpdate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"step"},"value":{"kind":"Variable","name":{"kind":"Name","value":"step"}}},{"kind":"Argument","name":{"kind":"Name","value":"stepComplete"},"value":{"kind":"Variable","name":{"kind":"Name","value":"stepComplete"}}},{"kind":"Argument","name":{"kind":"Name","value":"note"},"value":{"kind":"Variable","name":{"kind":"Name","value":"note"}}},{"kind":"Argument","name":{"kind":"Name","value":"data"},"value":{"kind":"Variable","name":{"kind":"Name","value":"data"}}}]}]}}]} as unknown as DocumentNode<JobProgressUpdateMutation, JobProgressUpdateMutationVariables>;
export const JobDelayDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"JobDelay"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"flag"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"reason"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobDelay"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"flag"},"value":{"kind":"Variable","name":{"kind":"Name","value":"flag"}}},{"kind":"Argument","name":{"kind":"Name","value":"reason"},"value":{"kind":"Variable","name":{"kind":"Name","value":"reason"}}}]}]}}]} as unknown as DocumentNode<JobDelayMutation, JobDelayMutationVariables>;
export const JobProgressDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobProgress"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobProgress"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"statusAt"}},{"kind":"Field","name":{"kind":"Name","value":"note"}}]}}]}}]}}]}}]} as unknown as DocumentNode<JobProgressQuery, JobProgressQueryVariables>;
export const JobCompletedProgressDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobCompletedProgress"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobCompletedProgress"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"statusAt"}},{"kind":"Field","name":{"kind":"Name","value":"complete"}},{"kind":"Field","name":{"kind":"Name","value":"note"}}]}}]}}]} as unknown as DocumentNode<JobCompletedProgressQuery, JobCompletedProgressQueryVariables>;
export const AssignPartnerToJobDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AssignPartnerToJob"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assignPartnerToJob"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}},{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}}]}]}}]} as unknown as DocumentNode<AssignPartnerToJobMutation, AssignPartnerToJobMutationVariables>;
export const JobDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Job"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"job"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}},{"kind":"Field","name":{"kind":"Name","value":"latitude"}},{"kind":"Field","name":{"kind":"Name","value":"longitude"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"salesRep"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"salesRep"}}]}},{"kind":"Field","name":{"kind":"Name","value":"estimate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"material"}},{"kind":"Field","name":{"kind":"Name","value":"partial"}},{"kind":"Field","name":{"kind":"Name","value":"measurementType"}},{"kind":"Field","name":{"kind":"Name","value":"priceSummary"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"workOrderPrice"}},{"kind":"Field","name":{"kind":"Name","value":"creatorName"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"material"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Estimate"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"currentMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"redeck"}},{"kind":"Field","name":{"kind":"Name","value":"layers"}},{"kind":"Field","name":{"kind":"Name","value":"layer2Material"}},{"kind":"Field","name":{"kind":"Name","value":"layer3Material"}}]}}]} as unknown as DocumentNode<JobQuery, JobQueryVariables>;
export const UnassignedJobsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnassignedJobs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"JobOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unassignedJobs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"betweenDates"},"value":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"epcName"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"workOrderPrice"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}}]} as unknown as DocumentNode<UnassignedJobsQuery, UnassignedJobsQueryVariables>;
export const AssignedJobsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AssignedJobs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"progress"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"JobProgress"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"JobOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"assignedJobs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"progress"},"value":{"kind":"Variable","name":{"kind":"Name","value":"progress"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"betweenDates"},"value":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"epcName"}},{"kind":"Field","name":{"kind":"Name","value":"contractor"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"workOrderPrice"}},{"kind":"Field","name":{"kind":"Name","value":"progress"}},{"kind":"Field","name":{"kind":"Name","value":"progressFlagged"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}}]} as unknown as DocumentNode<AssignedJobsQuery, AssignedJobsQueryVariables>;
export const PendingInvoiceJobsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PendingInvoiceJobs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"JobOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobsByProgress"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"status"},"value":{"kind":"EnumValue","value":"Invoiced"}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"betweenDates"},"value":{"kind":"Variable","name":{"kind":"Name","value":"betweenDates"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"progress"}},{"kind":"Field","name":{"kind":"Name","value":"progressAt"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}}]}},{"kind":"Field","name":{"kind":"Name","value":"salesRep"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"salesRep"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"installDate"}},{"kind":"Field","name":{"kind":"Name","value":"inspectionDate"}},{"kind":"Field","name":{"kind":"Name","value":"contractor"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}}]} as unknown as DocumentNode<PendingInvoiceJobsQuery, PendingInvoiceJobsQueryVariables>;
export const PartnerJobStatsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerJobStats"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"skip"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"take"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerJobStats"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerType"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"skip"},"value":{"kind":"Variable","name":{"kind":"Name","value":"skip"}}},{"kind":"Argument","name":{"kind":"Name","value":"take"},"value":{"kind":"Variable","name":{"kind":"Name","value":"take"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"newCount"}},{"kind":"Field","name":{"kind":"Name","value":"newCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"contactedCount"}},{"kind":"Field","name":{"kind":"Name","value":"contactedCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"confirmedCount"}},{"kind":"Field","name":{"kind":"Name","value":"confirmedCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"permittingCount"}},{"kind":"Field","name":{"kind":"Name","value":"permittingCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"scheduledCount"}},{"kind":"Field","name":{"kind":"Name","value":"scheduledCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"inProgressCount"}},{"kind":"Field","name":{"kind":"Name","value":"inProgressCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"installedCount"}},{"kind":"Field","name":{"kind":"Name","value":"installedCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"invoicedCount"}},{"kind":"Field","name":{"kind":"Name","value":"invoicedCountFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"delayedCount"}},{"kind":"Field","name":{"kind":"Name","value":"total"}},{"kind":"Field","name":{"kind":"Name","value":"totalFlagged"}}]}}]}}]} as unknown as DocumentNode<PartnerJobStatsQuery, PartnerJobStatsQueryVariables>;
export const PartnerJobsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerJobs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"flagged"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"progress"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"JobProgress"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"dates"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerJobs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"progress"},"value":{"kind":"Variable","name":{"kind":"Name","value":"progress"}}},{"kind":"Argument","name":{"kind":"Name","value":"flagged"},"value":{"kind":"Variable","name":{"kind":"Name","value":"flagged"}}},{"kind":"Argument","name":{"kind":"Name","value":"dates"},"value":{"kind":"Variable","name":{"kind":"Name","value":"dates"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}}]}},{"kind":"Field","name":{"kind":"Name","value":"salesRep"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"salesRep"}}]}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"progress"}},{"kind":"Field","name":{"kind":"Name","value":"progressAt"}},{"kind":"Field","name":{"kind":"Name","value":"progressFlagged"}},{"kind":"Field","name":{"kind":"Name","value":"permitRequired"}},{"kind":"Field","name":{"kind":"Name","value":"installDate"}},{"kind":"Field","name":{"kind":"Name","value":"inspectionDate"}},{"kind":"Field","name":{"kind":"Name","value":"inspectionRequired"}},{"kind":"Field","name":{"kind":"Name","value":"workOrderPrice"}},{"kind":"Field","name":{"kind":"Name","value":"contractor"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"epcName"}},{"kind":"Field","name":{"kind":"Name","value":"estimate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"material"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"material"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Estimate"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"currentMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"redeck"}},{"kind":"Field","name":{"kind":"Name","value":"layers"}},{"kind":"Field","name":{"kind":"Name","value":"layer2Material"}},{"kind":"Field","name":{"kind":"Name","value":"layer3Material"}}]}}]} as unknown as DocumentNode<PartnerJobsQuery, PartnerJobsQueryVariables>;
export const JobEstimatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"JobEstimates"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"jobEstimates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"jobID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"jobID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"estimates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"totalSquares"}},{"kind":"Field","name":{"kind":"Name","value":"primaryPitch"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"priceSummary"}},{"kind":"Field","name":{"kind":"Name","value":"bounds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lat"}},{"kind":"Field","name":{"kind":"Name","value":"lng"}}]}}]}}]}}]}}]} as unknown as DocumentNode<JobEstimatesQuery, JobEstimatesQueryVariables>;
export const EstimateResponsesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EstimateResponses"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"estimateResponses"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"need"}},{"kind":"Field","name":{"kind":"Name","value":"raw"}}]}}]}}]} as unknown as DocumentNode<EstimateResponsesQuery, EstimateResponsesQueryVariables>;
export const NearmapResponseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"NearmapResponse"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"respID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nearmapResponse"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"respID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"respID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"raw"}},{"kind":"Field","name":{"kind":"Name","value":"detail"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"primaryPitchInDegrees"}},{"kind":"Field","name":{"kind":"Name","value":"primaryPitch"}},{"kind":"Field","name":{"kind":"Name","value":"tileArea"}},{"kind":"Field","name":{"kind":"Name","value":"tileRatio"}},{"kind":"Field","name":{"kind":"Name","value":"shingleArea"}},{"kind":"Field","name":{"kind":"Name","value":"shingleRatio"}},{"kind":"Field","name":{"kind":"Name","value":"metalArea"}},{"kind":"Field","name":{"kind":"Name","value":"metalRatio"}},{"kind":"Field","name":{"kind":"Name","value":"flatArea"}},{"kind":"Field","name":{"kind":"Name","value":"flatRatio"}},{"kind":"Field","name":{"kind":"Name","value":"gableArea"}},{"kind":"Field","name":{"kind":"Name","value":"gableRatio"}},{"kind":"Field","name":{"kind":"Name","value":"hipArea"}},{"kind":"Field","name":{"kind":"Name","value":"hipRatio"}},{"kind":"Field","name":{"kind":"Name","value":"dutchGableArea"}},{"kind":"Field","name":{"kind":"Name","value":"dutchGableRatio"}},{"kind":"Field","name":{"kind":"Name","value":"turretArea"}},{"kind":"Field","name":{"kind":"Name","value":"turretRatio"}},{"kind":"Field","name":{"kind":"Name","value":"dominantRoofMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"dominantRoofMaterialID"}},{"kind":"Field","name":{"kind":"Name","value":"roofCount"}},{"kind":"Field","name":{"kind":"Name","value":"totalUnclippedArea"}},{"kind":"Field","name":{"kind":"Name","value":"roofMaterialRatioTotal"}},{"kind":"Field","name":{"kind":"Name","value":"roofTypeRatioTotal"}},{"kind":"Field","name":{"kind":"Name","value":"roofMaterialSurfaceAreaTotal"}},{"kind":"Field","name":{"kind":"Name","value":"roofTypeSurfaceAreaTotal"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangRatioPrimaryRoof"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangConfidencePrimaryRoof"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangPresenceConfidence"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangAreaPrimaryRoof"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangTotalClippedArea"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangTotalUnClippedArea"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangPresent"}},{"kind":"Field","name":{"kind":"Name","value":"treeOverhangCount"}}]}}]}}]}}]} as unknown as DocumentNode<NearmapResponseQuery, NearmapResponseQueryVariables>;
export const NotificationReadDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"NotificationRead"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"messageID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"notificationRead"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"messageID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"messageID"}}}]}]}}]} as unknown as DocumentNode<NotificationReadMutation, NotificationReadMutationVariables>;
export const MyUnreadNotificationsCountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyUnreadNotificationsCount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myUnreadNotificationsCount"}}]}}]} as unknown as DocumentNode<MyUnreadNotificationsCountQuery, MyUnreadNotificationsCountQueryVariables>;
export const MyNotificationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyNotifications"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myNotifications"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"channel"}},{"kind":"Field","name":{"kind":"Name","value":"topic"}},{"kind":"Field","name":{"kind":"Name","value":"refID"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"unread"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MyNotificationsQuery, MyNotificationsQueryVariables>;
export const OptionListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OptionList"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"types"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"OptionListType"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"optionList"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"types"},"value":{"kind":"Variable","name":{"kind":"Name","value":"types"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<OptionListQuery, OptionListQueryVariables>;
export const SavePartnerContactDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SavePartnerContact"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"contact"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerContactInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"savePartnerContact"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"contact"},"value":{"kind":"Variable","name":{"kind":"Name","value":"contact"}}}]}]}}]} as unknown as DocumentNode<SavePartnerContactMutation, SavePartnerContactMutationVariables>;
export const PartnerContactSendPwdResetEmailDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PartnerContactSendPwdResetEmail"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerContactSendPwdResetEmail"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"userID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userID"}}}]}]}}]} as unknown as DocumentNode<PartnerContactSendPwdResetEmailMutation, PartnerContactSendPwdResetEmailMutationVariables>;
export const PartnerContactsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"partnerContacts"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerContacts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"accountStatus"}},{"kind":"Field","name":{"kind":"Name","value":"picture"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]} as unknown as DocumentNode<PartnerContactsQuery, PartnerContactsQueryVariables>;
export const SavePartnerMobileSettingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SavePartnerMobileSettings"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InputMobileAppSettings"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"savePartnerMobileSettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"inp"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inp"}}}]}]}}]} as unknown as DocumentNode<SavePartnerMobileSettingsMutation, SavePartnerMobileSettingsMutationVariables>;
export const PartnerMobileSettingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerMobileSettings"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerMobileSettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"logoURL"}},{"kind":"Field","name":{"kind":"Name","value":"primaryColor"}},{"kind":"Field","name":{"kind":"Name","value":"hideTabs"}}]}}]}}]} as unknown as DocumentNode<PartnerMobileSettingsQuery, PartnerMobileSettingsQueryVariables>;
export const SavePartnerDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SavePartner"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"savePartner"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<SavePartnerMutation, SavePartnerMutationVariables>;
export const InvitePartnerDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"invitePartner"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InvitePartnerInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"invitePartner"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"contactID"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]} as unknown as DocumentNode<InvitePartnerMutation, InvitePartnerMutationVariables>;
export const SavePartnerCompletedStepsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SavePartnerCompletedSteps"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"step"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"done"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"savePartnerCompletedSteps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"step"},"value":{"kind":"Variable","name":{"kind":"Name","value":"step"}}},{"kind":"Argument","name":{"kind":"Name","value":"done"},"value":{"kind":"Variable","name":{"kind":"Name","value":"done"}}}]}]}}]} as unknown as DocumentNode<SavePartnerCompletedStepsMutation, SavePartnerCompletedStepsMutationVariables>;
export const SetPartnerActiveDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SetPartnerActive"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"value"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"setPartnerActive"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"value"},"value":{"kind":"Variable","name":{"kind":"Name","value":"value"}}}]}]}}]} as unknown as DocumentNode<SetPartnerActiveMutation, SetPartnerActiveMutationVariables>;
export const SavePartnerContactsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"savePartnerContacts"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"contacts"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerContactInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"savePartnerContacts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"contacts"},"value":{"kind":"Variable","name":{"kind":"Name","value":"contacts"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"contact"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"contact"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerContact"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"otherEmail"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]} as unknown as DocumentNode<SavePartnerContactsMutation, SavePartnerContactsMutationVariables>;
export const SavePartnerOperationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"savePartnerOperations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerOperationInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"savePartnerOperations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"inp"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<SavePartnerOperationsMutation, SavePartnerOperationsMutationVariables>;
export const SaveServiceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveService"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"service"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Service"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"active"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveService"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"service"},"value":{"kind":"Variable","name":{"kind":"Name","value":"service"}}},{"kind":"Argument","name":{"kind":"Name","value":"active"},"value":{"kind":"Variable","name":{"kind":"Name","value":"active"}}}]}]}}]} as unknown as DocumentNode<SaveServiceMutation, SaveServiceMutationVariables>;
export const SaveLeadTimeDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveLeadTime"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"asphalt"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"metal"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tile"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveLeadTime"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"asphalt"},"value":{"kind":"Variable","name":{"kind":"Name","value":"asphalt"}}},{"kind":"Argument","name":{"kind":"Name","value":"metal"},"value":{"kind":"Variable","name":{"kind":"Name","value":"metal"}}},{"kind":"Argument","name":{"kind":"Name","value":"tile"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tile"}}}]}]}}]} as unknown as DocumentNode<SaveLeadTimeMutation, SaveLeadTimeMutationVariables>;
export const SaveServiceStateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveServiceState"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"state"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"licNo"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"expDate"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Time"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"proofDocID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveServiceState"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"Variable","name":{"kind":"Name","value":"state"}}},{"kind":"Argument","name":{"kind":"Name","value":"licNo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"licNo"}}},{"kind":"Argument","name":{"kind":"Name","value":"expDate"},"value":{"kind":"Variable","name":{"kind":"Name","value":"expDate"}}},{"kind":"Argument","name":{"kind":"Name","value":"proofDocID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"proofDocID"}}}]}]}}]} as unknown as DocumentNode<SaveServiceStateMutation, SaveServiceStateMutationVariables>;
export const SaveServiceCityDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveServiceCity"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"postalID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"active"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"licNo"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"proofDocID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveServiceCity"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"postalID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"postalID"}}},{"kind":"Argument","name":{"kind":"Name","value":"active"},"value":{"kind":"Variable","name":{"kind":"Name","value":"active"}}},{"kind":"Argument","name":{"kind":"Name","value":"licNo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"licNo"}}},{"kind":"Argument","name":{"kind":"Name","value":"proofDocID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"proofDocID"}}}]}]}}]} as unknown as DocumentNode<SaveServiceCityMutation, SaveServiceCityMutationVariables>;
export const PartnerNameAvailableDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerNameAvailable"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"type"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerNameAvailable"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"Variable","name":{"kind":"Name","value":"type"}}},{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}]}]}}]} as unknown as DocumentNode<PartnerNameAvailableQuery, PartnerNameAvailableQueryVariables>;
export const PartnerDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Partner"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partner"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"partner"}},{"kind":"Field","name":{"kind":"Name","value":"crewCount"}},{"kind":"Field","name":{"kind":"Name","value":"jobCapacity"}},{"kind":"Field","name":{"kind":"Name","value":"setupStepsCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"asphaltLeadT"}},{"kind":"Field","name":{"kind":"Name","value":"metalLeadT"}},{"kind":"Field","name":{"kind":"Name","value":"tileLeadT"}},{"kind":"Field","name":{"kind":"Name","value":"contacts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"contact"}},{"kind":"Field","name":{"kind":"Name","value":"otherEmail"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"partner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"isNationWide"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"contact"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerContact"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"otherEmail"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]} as unknown as DocumentNode<PartnerQuery, PartnerQueryVariables>;
export const SolarPartnerDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SolarPartner"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partner"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"type"},"value":{"kind":"EnumValue","value":"SOLAR"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"yearsInBusiness"}},{"kind":"Field","name":{"kind":"Name","value":"salesVolume"}},{"kind":"Field","name":{"kind":"Name","value":"financeOptions"}},{"kind":"Field","name":{"kind":"Name","value":"downPayment"}},{"kind":"Field","name":{"kind":"Name","value":"pifDate"}},{"kind":"Field","name":{"kind":"Name","value":"installInHouse"}},{"kind":"Field","name":{"kind":"Name","value":"epcOptions"}},{"kind":"Field","name":{"kind":"Name","value":"setupStepsCompleted"}},{"kind":"Field","name":{"kind":"Name","value":"contacts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"contact"}},{"kind":"Field","name":{"kind":"Name","value":"otherEmail"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"contact"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerContact"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userID"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"otherEmail"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}}]}}]} as unknown as DocumentNode<SolarPartnerQuery, SolarPartnerQueryVariables>;
export const PartnerOptionsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerOptions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<PartnerOptionsQuery, PartnerOptionsQueryVariables>;
export const PartnersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Partners"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"PartnerType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"status"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partners"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"partnerType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerType"}}},{"kind":"Argument","name":{"kind":"Name","value":"status"},"value":{"kind":"Variable","name":{"kind":"Name","value":"status"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"partner"}},{"kind":"Field","name":{"kind":"Name","value":"crewCount"}},{"kind":"Field","name":{"kind":"Name","value":"jobCapacity"}},{"kind":"Field","name":{"kind":"Name","value":"isActive"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"partner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Partner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"website"}},{"kind":"Field","name":{"kind":"Name","value":"isNationWide"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]} as unknown as DocumentNode<PartnersQuery, PartnersQueryVariables>;
export const MyJobDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyJob"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myJob"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}},{"kind":"Field","name":{"kind":"Name","value":"updatedAt"}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"homeOwner"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"homeOwner"}}]}},{"kind":"Field","name":{"kind":"Name","value":"salesRep"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"salesRep"}}]}},{"kind":"Field","name":{"kind":"Name","value":"estimate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"material"}},{"kind":"Field","name":{"kind":"Name","value":"measurementType"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"workOrderPrice"}},{"kind":"Field","name":{"kind":"Name","value":"contractor"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"homeOwner"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"HomeOwner"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"streetNumber"}},{"kind":"Field","name":{"kind":"Name","value":"streetName"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"salesRep"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"UserInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"material"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Estimate"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterial"}},{"kind":"Field","name":{"kind":"Name","value":"currentMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"newRoofingMaterialLowSlope"}},{"kind":"Field","name":{"kind":"Name","value":"redeck"}},{"kind":"Field","name":{"kind":"Name","value":"layers"}},{"kind":"Field","name":{"kind":"Name","value":"layer2Material"}},{"kind":"Field","name":{"kind":"Name","value":"layer3Material"}}]}}]} as unknown as DocumentNode<MyJobQuery, MyJobQueryVariables>;
export const PartnerDocsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerDocs"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"section"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DocumentSection"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerDocs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"Variable","name":{"kind":"Name","value":"section"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"document"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"document"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Document"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}}]} as unknown as DocumentNode<PartnerDocsQuery, PartnerDocsQueryVariables>;
export const PartnerServiceStatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerServiceStates"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerServiceStates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"licenseNo"}},{"kind":"Field","name":{"kind":"Name","value":"licenseExpDate"}},{"kind":"Field","name":{"kind":"Name","value":"expand"}},{"kind":"Field","name":{"kind":"Name","value":"cities"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"licenseNo"}},{"kind":"Field","name":{"kind":"Name","value":"licenseProof"}},{"kind":"Field","name":{"kind":"Name","value":"cityZip"}},{"kind":"Field","name":{"kind":"Name","value":"cityName"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"partnerDocs"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"section"},"value":{"kind":"EnumValue","value":"Proof"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"document"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"document"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"Document"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contentType"}},{"kind":"Field","name":{"kind":"Name","value":"contentSize"}},{"kind":"Field","name":{"kind":"Name","value":"ready"}}]}}]} as unknown as DocumentNode<PartnerServiceStatesQuery, PartnerServiceStatesQueryVariables>;
export const PartnerServicesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PartnerServices"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerServices"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"service"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"active"}}]}}]}}]} as unknown as DocumentNode<PartnerServicesQuery, PartnerServicesQueryVariables>;
export const MarkServiceAreaDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"MarkServiceArea"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"value"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"markServiceArea"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"value"},"value":{"kind":"Variable","name":{"kind":"Name","value":"value"}}}]}]}}]} as unknown as DocumentNode<MarkServiceAreaMutation, MarkServiceAreaMutationVariables>;
export const AllServiceAreasDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllServiceAreas"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"allServiceAreas"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"cities"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<AllServiceAreasQuery, AllServiceAreasQueryVariables>;
export const ServiceStatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ServiceStates"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"q"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"serviceStates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"q"},"value":{"kind":"Variable","name":{"kind":"Name","value":"q"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"cities"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<ServiceStatesQuery, ServiceStatesQueryVariables>;
export const StatesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"States"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"q"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"states"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"q"},"value":{"kind":"Variable","name":{"kind":"Name","value":"q"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"cities"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<StatesQuery, StatesQueryVariables>;
export const CitiesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Cities"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"state"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"q"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"skip"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"take"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cities"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"Variable","name":{"kind":"Name","value":"state"}}},{"kind":"Argument","name":{"kind":"Name","value":"q"},"value":{"kind":"Variable","name":{"kind":"Name","value":"q"}}},{"kind":"Argument","name":{"kind":"Name","value":"skip"},"value":{"kind":"Variable","name":{"kind":"Name","value":"skip"}}},{"kind":"Argument","name":{"kind":"Name","value":"take"},"value":{"kind":"Variable","name":{"kind":"Name","value":"take"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<CitiesQuery, CitiesQueryVariables>;
export const GetPricingDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetPricing"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getPricing"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"items"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"country"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"stateAbr"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"zip"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"pricePer"}}]}},{"kind":"Field","name":{"kind":"Name","value":"products"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<GetPricingQuery, GetPricingQueryVariables>;
export const SaveProductPackageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveProductPackage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductPackageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveProductPackage"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<SaveProductPackageMutation, SaveProductPackageMutationVariables>;
export const SaveProductDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveProduct"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveProduct"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<SaveProductMutation, SaveProductMutationVariables>;
export const ProductPackagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductPackages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"category"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productPackages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"category"},"value":{"kind":"Variable","name":{"kind":"Name","value":"category"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"soldAs"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"features"}},{"kind":"Field","name":{"kind":"Name","value":"items"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"publicUrl"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ProductPackagesQuery, ProductPackagesQueryVariables>;
export const ProductsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Products"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"category"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"products"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"category"},"value":{"kind":"Variable","name":{"kind":"Name","value":"category"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"features"}},{"kind":"Field","name":{"kind":"Name","value":"specialNote"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"publicUrl"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ProductsQuery, ProductsQueryVariables>;
export const SmartHomePackagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SmartHomePackages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"smartHomePackages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"soldAs"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"features"}},{"kind":"Field","name":{"kind":"Name","value":"items"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"features"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"publicUrl"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<SmartHomePackagesQuery, SmartHomePackagesQueryVariables>;
export const HvacPackagesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"HVACPackages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hvacPackages"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"soldAs"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"features"}},{"kind":"Field","name":{"kind":"Name","value":"items"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"price"}},{"kind":"Field","name":{"kind":"Name","value":"features"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"publicUrl"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<HvacPackagesQuery, HvacPackagesQueryVariables>;
export const SurveysDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Surveys"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SurveyOrder"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"surveys"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"slot"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"to"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SurveysQuery, SurveysQueryVariables>;
export const SurveySlotAvailabilityDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SurveySlotAvailability"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"surveySlotAvailability"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"date"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"available"}}]}}]}}]} as unknown as DocumentNode<SurveySlotAvailabilityQuery, SurveySlotAvailabilityQueryVariables>;
export const SurveyRequestDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SurveyRequest"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"date"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"slotID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"surveyRequest"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"date"},"value":{"kind":"Variable","name":{"kind":"Name","value":"date"}}},{"kind":"Argument","name":{"kind":"Name","value":"slotID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"slotID"}}}]}]}}]} as unknown as DocumentNode<SurveyRequestMutation, SurveyRequestMutationVariables>;
export const SurveyReserveDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SurveyReserve"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SurveyInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"surveyReserve"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"slot"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"to"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<SurveyReserveMutation, SurveyReserveMutationVariables>;
export const SurveyDetailsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SurveyDetails"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"surveyDetails"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"slot"}},{"kind":"Field","name":{"kind":"Name","value":"from"}},{"kind":"Field","name":{"kind":"Name","value":"to"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"address"}},{"kind":"Field","name":{"kind":"Name","value":"notes"}},{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]} as unknown as DocumentNode<SurveyDetailsQuery, SurveyDetailsQueryVariables>;
export const CreateTrainingCourseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateTrainingCourse"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createTrainingCourse"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<CreateTrainingCourseMutation, CreateTrainingCourseMutationVariables>;
export const PartnerTrainingVideoAccessDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"PartnerTrainingVideoAccess"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"videoID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"enabled"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"partnerTrainingVideoAccess"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"videoID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"videoID"}}},{"kind":"Argument","name":{"kind":"Name","value":"enabled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"enabled"}}}]}]}}]} as unknown as DocumentNode<PartnerTrainingVideoAccessMutation, PartnerTrainingVideoAccessMutationVariables>;
export const SaveTrainingVideoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveTrainingVideo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"inp"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InputTrainingVideo"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveTrainingVideo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"inp"},"value":{"kind":"Variable","name":{"kind":"Name","value":"inp"}}}]}]}}]} as unknown as DocumentNode<SaveTrainingVideoMutation, SaveTrainingVideoMutationVariables>;
export const TrainingCoursesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TrainingCourses"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trainingCourses"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}}]} as unknown as DocumentNode<TrainingCoursesQuery, TrainingCoursesQueryVariables>;
export const TrainingVideoKindsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TrainingVideoKinds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trainingVideoKinds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<TrainingVideoKindsQuery, TrainingVideoKindsQueryVariables>;
export const TrainingVideoCoursesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TrainingVideoCourses"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"kind"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pageSize"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trainingVideoCourses"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"kind"},"value":{"kind":"Variable","name":{"kind":"Name","value":"kind"}}},{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"pageSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pageSize"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"videos"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"videoInfo"}},{"kind":"Field","name":{"kind":"Name","value":"assigned"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"videoInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingVideo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"posterURL"}},{"kind":"Field","name":{"kind":"Name","value":"videoURL"}}]}}]} as unknown as DocumentNode<TrainingVideoCoursesQuery, TrainingVideoCoursesQueryVariables>;
export const TrainingVideosDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TrainingVideos"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"kind"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"courseID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trainingVideos"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"kind"},"value":{"kind":"Variable","name":{"kind":"Name","value":"kind"}}},{"kind":"Argument","name":{"kind":"Name","value":"courseID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"courseID"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"partnerID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"partnerID"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"videoInfo"}},{"kind":"Field","name":{"kind":"Name","value":"kind"}},{"kind":"Field","name":{"kind":"Name","value":"assigned"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"videoInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingVideo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"posterURL"}},{"kind":"Field","name":{"kind":"Name","value":"videoURL"}}]}}]} as unknown as DocumentNode<TrainingVideosQuery, TrainingVideosQueryVariables>;
export const MyTrainingVideoKindsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyTrainingVideoKinds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myTrainingVideoKinds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]} as unknown as DocumentNode<MyTrainingVideoKindsQuery, MyTrainingVideoKindsQueryVariables>;
export const MyTrainingVideoCoursesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyTrainingVideoCourses"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"kind"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pageSize"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myTrainingVideoCourses"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"kind"},"value":{"kind":"Variable","name":{"kind":"Name","value":"kind"}}},{"kind":"Argument","name":{"kind":"Name","value":"pageSize"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pageSize"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"videos"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"videoInfo"}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"videoInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingVideo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"posterURL"}},{"kind":"Field","name":{"kind":"Name","value":"videoURL"}}]}}]} as unknown as DocumentNode<MyTrainingVideoCoursesQuery, MyTrainingVideoCoursesQueryVariables>;
export const MyTrainingVideosDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MyTrainingVideos"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"kind"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"courseID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myTrainingVideos"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"kind"},"value":{"kind":"Variable","name":{"kind":"Name","value":"kind"}}},{"kind":"Argument","name":{"kind":"Name","value":"courseID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"courseID"}}},{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"page"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cursor"}},{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"videoInfo"}},{"kind":"Field","name":{"kind":"Name","value":"kind"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"page"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"PageInfo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"videoInfo"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrainingVideo"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"posterURL"}},{"kind":"Field","name":{"kind":"Name","value":"videoURL"}}]}}]} as unknown as DocumentNode<MyTrainingVideosQuery, MyTrainingVideosQueryVariables>;
export const UserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"User"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"note"}}]}}]}}]} as unknown as DocumentNode<UserQuery, UserQueryVariables>;
export const UsersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Users"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"UserWhereInput"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}},{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"userBasic"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"userBasic"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"User"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"role"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"picture"}}]}}]} as unknown as DocumentNode<UsersQuery, UsersQueryVariables>;
export const UsersSearchDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"usersSearch"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"usersSearch"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"partnerID"}},{"kind":"Field","name":{"kind":"Name","value":"partnerName"}},{"kind":"Field","name":{"kind":"Name","value":"partnerContactTypeID"}},{"kind":"Field","name":{"kind":"Name","value":"partnerContactTitle"}}]}}]}}]} as unknown as DocumentNode<UsersSearchQuery, UsersSearchQueryVariables>;
export const MyCompanyUsersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"myCompanyUsers"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"search"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"page"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PageInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"myCompanyUsers"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"search"},"value":{"kind":"Variable","name":{"kind":"Name","value":"search"}}},{"kind":"Argument","name":{"kind":"Name","value":"page"},"value":{"kind":"Variable","name":{"kind":"Name","value":"page"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"pageInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasNextPage"}},{"kind":"Field","name":{"kind":"Name","value":"endCursor"}},{"kind":"Field","name":{"kind":"Name","value":"hasPreviousPage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"edges"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"node"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phone"}},{"kind":"Field","name":{"kind":"Name","value":"picture"}}]}}]}}]}}]}}]} as unknown as DocumentNode<MyCompanyUsersQuery, MyCompanyUsersQueryVariables>;
export const CreateUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateUserInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<CreateUserMutation, CreateUserMutationVariables>;
export const UpdateUserDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateUser"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateUserInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateUser"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}]}]}}]} as unknown as DocumentNode<UpdateUserMutation, UpdateUserMutationVariables>;
export const SaveNotifySettingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SaveNotifySettings"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"topicID"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"email"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"saveNotifySettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"userID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"topicID"},"value":{"kind":"Variable","name":{"kind":"Name","value":"topicID"}}},{"kind":"Argument","name":{"kind":"Name","value":"email"},"value":{"kind":"Variable","name":{"kind":"Name","value":"email"}}}]}]}}]} as unknown as DocumentNode<SaveNotifySettingsMutation, SaveNotifySettingsMutationVariables>;
export const UserNotifySettingsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UserNotifySettings"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userNotifySettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"topic"}},{"kind":"Field","name":{"kind":"Name","value":"receiveEmail"}},{"kind":"Field","name":{"kind":"Name","value":"receiveSMS"}}]}}]}}]} as unknown as DocumentNode<UserNotifySettingsQuery, UserNotifySettingsQueryVariables>;
export type ForgotPasswordMutationStore = OperationResultStore<ForgotPasswordMutation, ForgotPasswordMutationVariables>;
export type SetUserPwdMutationStore = OperationResultStore<SetUserPwdMutation, SetUserPwdMutationVariables>;
export type UpdateProfileMutationStore = OperationResultStore<UpdateProfileMutation, UpdateProfileMutationVariables>;
export type MeQueryStore = OperationResultStore<MeQuery, MeQueryVariables>;
export type UserEmailAvailableQueryStore = OperationResultStore<UserEmailAvailableQuery, UserEmailAvailableQueryVariables>;
export type ApiAccessQueryStore = OperationResultStore<ApiAccessQuery, ApiAccessQueryVariables>;
export type SaveApiAccessMutationStore = OperationResultStore<SaveApiAccessMutation, SaveApiAccessMutationVariables>;
export type ApiUsersQueryStore = OperationResultStore<ApiUsersQuery, ApiUsersQueryVariables>;
export type ApiUserQueryStore = OperationResultStore<ApiUserQuery, ApiUserQueryVariables>;
export type AddApiUserMutationStore = OperationResultStore<AddApiUserMutation, AddApiUserMutationVariables>;
export type EditApiUserMutationStore = OperationResultStore<EditApiUserMutation, EditApiUserMutationVariables>;
export type ChangeApiUserStatusMutationStore = OperationResultStore<ChangeApiUserStatusMutation, ChangeApiUserStatusMutationVariables>;
export type RefreshApiUserPwdMutationStore = OperationResultStore<RefreshApiUserPwdMutation, RefreshApiUserPwdMutationVariables>;
export type AuditLogsQueryStore = OperationResultStore<AuditLogsQuery, AuditLogsQueryVariables>;
export type ApiUserAuditLogsQueryStore = OperationResultStore<ApiUserAuditLogsQuery, ApiUserAuditLogsQueryVariables>;
export type OverviewQueryStore = OperationResultStore<OverviewQuery, OverviewQueryVariables>;
export type DocumentUploadUrlMutationStore = OperationResultStore<DocumentUploadUrlMutation, DocumentUploadUrlMutationVariables>;
export type PublicDataUploadUrlMutationStore = OperationResultStore<PublicDataUploadUrlMutation, PublicDataUploadUrlMutationVariables>;
export type PartnerDocUploadUrlMutationStore = OperationResultStore<PartnerDocUploadUrlMutation, PartnerDocUploadUrlMutationVariables>;
export type JobDocUploadUrlMutationStore = OperationResultStore<JobDocUploadUrlMutation, JobDocUploadUrlMutationVariables>;
export type DeleteDocMutationStore = OperationResultStore<DeleteDocMutation, DeleteDocMutationVariables>;
export type JobDocsQueryStore = OperationResultStore<JobDocsQuery, JobDocsQueryVariables>;
export type CreateEstimateMutationStore = OperationResultStore<CreateEstimateMutation, CreateEstimateMutationVariables>;
export type ApproveEstimateMutationStore = OperationResultStore<ApproveEstimateMutation, ApproveEstimateMutationVariables>;
export type DenyEstimateMutationStore = OperationResultStore<DenyEstimateMutation, DenyEstimateMutationVariables>;
export type RemoveDeniedMutationStore = OperationResultStore<RemoveDeniedMutation, RemoveDeniedMutationVariables>;
export type TestPricingMutationStore = OperationResultStore<TestPricingMutation, TestPricingMutationVariables>;
export type EstimateQueryStore = OperationResultStore<EstimateQuery, EstimateQueryVariables>;
export type EstimatesQueryStore = OperationResultStore<EstimatesQuery, EstimatesQueryVariables>;
export type NewUlidQueryStore = OperationResultStore<NewUlidQuery, NewUlidQueryVariables>;
export type BookInstallationMutationStore = OperationResultStore<BookInstallationMutation, BookInstallationMutationVariables>;
export type ApproveInstallationMutationStore = OperationResultStore<ApproveInstallationMutation, ApproveInstallationMutationVariables>;
export type DenyInstallationMutationStore = OperationResultStore<DenyInstallationMutation, DenyInstallationMutationVariables>;
export type UndoDenyInstallationMutationStore = OperationResultStore<UndoDenyInstallationMutation, UndoDenyInstallationMutationVariables>;
export type PendingInstallationsQueryStore = OperationResultStore<PendingInstallationsQuery, PendingInstallationsQueryVariables>;
export type ApprovedInstallationsQueryStore = OperationResultStore<ApprovedInstallationsQuery, ApprovedInstallationsQueryVariables>;
export type CreatJobNoteMutationStore = OperationResultStore<CreatJobNoteMutation, CreatJobNoteMutationVariables>;
export type EditJobNoteMutationStore = OperationResultStore<EditJobNoteMutation, EditJobNoteMutationVariables>;
export type JobNotesQueryStore = OperationResultStore<JobNotesQuery, JobNotesQueryVariables>;
export type JobProgressUpdateMutationStore = OperationResultStore<JobProgressUpdateMutation, JobProgressUpdateMutationVariables>;
export type JobDelayMutationStore = OperationResultStore<JobDelayMutation, JobDelayMutationVariables>;
export type JobProgressQueryStore = OperationResultStore<JobProgressQuery, JobProgressQueryVariables>;
export type JobCompletedProgressQueryStore = OperationResultStore<JobCompletedProgressQuery, JobCompletedProgressQueryVariables>;
export type AssignPartnerToJobMutationStore = OperationResultStore<AssignPartnerToJobMutation, AssignPartnerToJobMutationVariables>;
export type JobQueryStore = OperationResultStore<JobQuery, JobQueryVariables>;
export type UnassignedJobsQueryStore = OperationResultStore<UnassignedJobsQuery, UnassignedJobsQueryVariables>;
export type AssignedJobsQueryStore = OperationResultStore<AssignedJobsQuery, AssignedJobsQueryVariables>;
export type PendingInvoiceJobsQueryStore = OperationResultStore<PendingInvoiceJobsQuery, PendingInvoiceJobsQueryVariables>;
export type PartnerJobStatsQueryStore = OperationResultStore<PartnerJobStatsQuery, PartnerJobStatsQueryVariables>;
export type PartnerJobsQueryStore = OperationResultStore<PartnerJobsQuery, PartnerJobsQueryVariables>;
export type JobEstimatesQueryStore = OperationResultStore<JobEstimatesQuery, JobEstimatesQueryVariables>;
export type EstimateResponsesQueryStore = OperationResultStore<EstimateResponsesQuery, EstimateResponsesQueryVariables>;
export type NearmapResponseQueryStore = OperationResultStore<NearmapResponseQuery, NearmapResponseQueryVariables>;
export type NotificationReadMutationStore = OperationResultStore<NotificationReadMutation, NotificationReadMutationVariables>;
export type MyUnreadNotificationsCountQueryStore = OperationResultStore<MyUnreadNotificationsCountQuery, MyUnreadNotificationsCountQueryVariables>;
export type MyNotificationsQueryStore = OperationResultStore<MyNotificationsQuery, MyNotificationsQueryVariables>;
export type OptionListQueryStore = OperationResultStore<OptionListQuery, OptionListQueryVariables>;
export type SavePartnerContactMutationStore = OperationResultStore<SavePartnerContactMutation, SavePartnerContactMutationVariables>;
export type PartnerContactSendPwdResetEmailMutationStore = OperationResultStore<PartnerContactSendPwdResetEmailMutation, PartnerContactSendPwdResetEmailMutationVariables>;
export type PartnerContactsQueryStore = OperationResultStore<PartnerContactsQuery, PartnerContactsQueryVariables>;
export type SavePartnerMobileSettingsMutationStore = OperationResultStore<SavePartnerMobileSettingsMutation, SavePartnerMobileSettingsMutationVariables>;
export type PartnerMobileSettingsQueryStore = OperationResultStore<PartnerMobileSettingsQuery, PartnerMobileSettingsQueryVariables>;
export type SavePartnerMutationStore = OperationResultStore<SavePartnerMutation, SavePartnerMutationVariables>;
export type InvitePartnerMutationStore = OperationResultStore<InvitePartnerMutation, InvitePartnerMutationVariables>;
export type SavePartnerCompletedStepsMutationStore = OperationResultStore<SavePartnerCompletedStepsMutation, SavePartnerCompletedStepsMutationVariables>;
export type SetPartnerActiveMutationStore = OperationResultStore<SetPartnerActiveMutation, SetPartnerActiveMutationVariables>;
export type SavePartnerContactsMutationStore = OperationResultStore<SavePartnerContactsMutation, SavePartnerContactsMutationVariables>;
export type SavePartnerOperationsMutationStore = OperationResultStore<SavePartnerOperationsMutation, SavePartnerOperationsMutationVariables>;
export type SaveServiceMutationStore = OperationResultStore<SaveServiceMutation, SaveServiceMutationVariables>;
export type SaveLeadTimeMutationStore = OperationResultStore<SaveLeadTimeMutation, SaveLeadTimeMutationVariables>;
export type SaveServiceStateMutationStore = OperationResultStore<SaveServiceStateMutation, SaveServiceStateMutationVariables>;
export type SaveServiceCityMutationStore = OperationResultStore<SaveServiceCityMutation, SaveServiceCityMutationVariables>;
export type PartnerNameAvailableQueryStore = OperationResultStore<PartnerNameAvailableQuery, PartnerNameAvailableQueryVariables>;
export type PartnerQueryStore = OperationResultStore<PartnerQuery, PartnerQueryVariables>;
export type SolarPartnerQueryStore = OperationResultStore<SolarPartnerQuery, SolarPartnerQueryVariables>;
export type PartnerOptionsQueryStore = OperationResultStore<PartnerOptionsQuery, PartnerOptionsQueryVariables>;
export type PartnersQueryStore = OperationResultStore<PartnersQuery, PartnersQueryVariables>;
export type MyJobQueryStore = OperationResultStore<MyJobQuery, MyJobQueryVariables>;
export type PartnerDocsQueryStore = OperationResultStore<PartnerDocsQuery, PartnerDocsQueryVariables>;
export type PartnerServiceStatesQueryStore = OperationResultStore<PartnerServiceStatesQuery, PartnerServiceStatesQueryVariables>;
export type PartnerServicesQueryStore = OperationResultStore<PartnerServicesQuery, PartnerServicesQueryVariables>;
export type MarkServiceAreaMutationStore = OperationResultStore<MarkServiceAreaMutation, MarkServiceAreaMutationVariables>;
export type AllServiceAreasQueryStore = OperationResultStore<AllServiceAreasQuery, AllServiceAreasQueryVariables>;
export type ServiceStatesQueryStore = OperationResultStore<ServiceStatesQuery, ServiceStatesQueryVariables>;
export type StatesQueryStore = OperationResultStore<StatesQuery, StatesQueryVariables>;
export type CitiesQueryStore = OperationResultStore<CitiesQuery, CitiesQueryVariables>;
export type GetPricingQueryStore = OperationResultStore<GetPricingQuery, GetPricingQueryVariables>;
export type SaveProductPackageMutationStore = OperationResultStore<SaveProductPackageMutation, SaveProductPackageMutationVariables>;
export type SaveProductMutationStore = OperationResultStore<SaveProductMutation, SaveProductMutationVariables>;
export type ProductPackagesQueryStore = OperationResultStore<ProductPackagesQuery, ProductPackagesQueryVariables>;
export type ProductsQueryStore = OperationResultStore<ProductsQuery, ProductsQueryVariables>;
export type SmartHomePackagesQueryStore = OperationResultStore<SmartHomePackagesQuery, SmartHomePackagesQueryVariables>;
export type HvacPackagesQueryStore = OperationResultStore<HvacPackagesQuery, HvacPackagesQueryVariables>;
export type SurveysQueryStore = OperationResultStore<SurveysQuery, SurveysQueryVariables>;
export type SurveySlotAvailabilityQueryStore = OperationResultStore<SurveySlotAvailabilityQuery, SurveySlotAvailabilityQueryVariables>;
export type SurveyRequestMutationStore = OperationResultStore<SurveyRequestMutation, SurveyRequestMutationVariables>;
export type SurveyReserveMutationStore = OperationResultStore<SurveyReserveMutation, SurveyReserveMutationVariables>;
export type SurveyDetailsQueryStore = OperationResultStore<SurveyDetailsQuery, SurveyDetailsQueryVariables>;
export type CreateTrainingCourseMutationStore = OperationResultStore<CreateTrainingCourseMutation, CreateTrainingCourseMutationVariables>;
export type PartnerTrainingVideoAccessMutationStore = OperationResultStore<PartnerTrainingVideoAccessMutation, PartnerTrainingVideoAccessMutationVariables>;
export type SaveTrainingVideoMutationStore = OperationResultStore<SaveTrainingVideoMutation, SaveTrainingVideoMutationVariables>;
export type TrainingCoursesQueryStore = OperationResultStore<TrainingCoursesQuery, TrainingCoursesQueryVariables>;
export type TrainingVideoKindsQueryStore = OperationResultStore<TrainingVideoKindsQuery, TrainingVideoKindsQueryVariables>;
export type TrainingVideoCoursesQueryStore = OperationResultStore<TrainingVideoCoursesQuery, TrainingVideoCoursesQueryVariables>;
export type TrainingVideosQueryStore = OperationResultStore<TrainingVideosQuery, TrainingVideosQueryVariables>;
export type MyTrainingVideoKindsQueryStore = OperationResultStore<MyTrainingVideoKindsQuery, MyTrainingVideoKindsQueryVariables>;
export type MyTrainingVideoCoursesQueryStore = OperationResultStore<MyTrainingVideoCoursesQuery, MyTrainingVideoCoursesQueryVariables>;
export type MyTrainingVideosQueryStore = OperationResultStore<MyTrainingVideosQuery, MyTrainingVideosQueryVariables>;
export type UserQueryStore = OperationResultStore<UserQuery, UserQueryVariables>;
export type UsersQueryStore = OperationResultStore<UsersQuery, UsersQueryVariables>;
export type UsersSearchQueryStore = OperationResultStore<UsersSearchQuery, UsersSearchQueryVariables>;
export type MyCompanyUsersQueryStore = OperationResultStore<MyCompanyUsersQuery, MyCompanyUsersQueryVariables>;
export type CreateUserMutationStore = OperationResultStore<CreateUserMutation, CreateUserMutationVariables>;
export type UpdateUserMutationStore = OperationResultStore<UpdateUserMutation, UpdateUserMutationVariables>;
export type SaveNotifySettingsMutationStore = OperationResultStore<SaveNotifySettingsMutation, SaveNotifySettingsMutationVariables>;
export type UserNotifySettingsQueryStore = OperationResultStore<UserNotifySettingsQuery, UserNotifySettingsQueryVariables>;
